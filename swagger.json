{"openapi":"3.0.0","info":{"title":"Univance API Gateway","version":"1.0.0","description":"Combined API documentation for all Univance microservices"},"servers":[{"url":"http://localhost:3000/api","description":"Local API Gateway server"},{"url":"https://api.univance.com/api","description":"Production API Gateway server"}],"components":{"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}},"schemas":{"Attendance":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the attendance record"},"studentId":{"type":"string","description":"ID of the student"},"schoolId":{"type":"string","description":"ID of the school (optional)"},"date":{"type":"string","format":"date-time","description":"Date for the attendance record"},"status":{"type":"string","enum":["present","absent","tardy","excused"],"description":"Attendance status"},"recordedBy":{"type":"string","description":"ID of the user who recorded the attendance"},"recordedByRole":{"type":"string","enum":["teacher","parent","student","system"],"description":"Role of the user who recorded the attendance"},"pointsAwarded":{"type":"number","description":"Points awarded for this attendance record"},"comments":{"type":"string","description":"Additional comments or notes"},"createdAt":{"type":"string","format":"date-time","description":"Record creation timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"Record update timestamp"}}},"Badge":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the badge"},"name":{"type":"string","description":"Badge name"},"description":{"type":"string","description":"Badge description"},"category":{"type":"string","description":"Badge category"},"image":{"type":"string","description":"URL to badge image"},"collection":{"type":"string","description":"Collection name badge belongs to (if any)","nullable":true},"collectionOrder":{"type":"number","description":"Order within collection"},"conditions":{"type":"object","properties":{"type":{"type":"string","enum":["points_threshold","task_completion","attendance_streak","custom"],"description":"Type of conditions for earning this badge"},"threshold":{"type":"number","description":"Points threshold (for points_threshold type)"},"taskCategory":{"type":"string","description":"Task category (for task_completion type)"},"streak":{"type":"number","description":"Streak count (for attendance_streak type)"}}},"pointsBonus":{"type":"number","description":"Bonus points awarded when badge is earned"},"issuerId":{"type":"string","description":"User ID who created this badge"},"issuerType":{"type":"string","enum":["system","school","parent"],"description":"Type of issuer"},"createdAt":{"type":"string","format":"date-time","description":"Badge creation timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"Badge update timestamp"}}},"LinkRequest":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the link request"},"studentId":{"type":"string","description":"ID of the student making the request"},"requestType":{"type":"string","enum":["parent","school"],"description":"Type of link request"},"targetId":{"type":"string","description":"ID of the parent or school being linked to"},"targetEmail":{"type":"string","description":"Email address for invitation if no existing account"},"status":{"type":"string","enum":["pending","approved","rejected","expired"],"description":"Current status of the request"},"code":{"type":"string","description":"Unique code for manual linking"},"createdAt":{"type":"string","format":"date-time","description":"Request creation timestamp"},"expiresAt":{"type":"string","format":"date-time","description":"Request expiration timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"Last update timestamp"}}},"Parent":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the parent profile"},"userId":{"type":"string","description":"ID of the associated user account"},"childIds":{"type":"array","items":{"type":"string"},"description":"Array of child/student IDs linked to this parent"},"tuitPoints":{"type":"number","description":"TUIT points earned by parent","default":0},"linkCode":{"type":"string","description":"Code used for linking with student accounts"},"createdAt":{"type":"string","format":"date-time","description":"Profile creation timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"Profile update timestamp"}}},"Child":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the student"},"userId":{"type":"object","properties":{"_id":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"avatar":{"type":"string"},"dateOfBirth":{"type":"string","format":"date-time"}}},"grade":{"type":"number","description":"Student's grade level"},"schoolId":{"type":"string","description":"ID of the student's school (if any)"},"level":{"type":"number","description":"Student's current level"},"attendanceStreak":{"type":"number","description":"Current attendance streak"}}},"School":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the school"},"name":{"type":"string","description":"Name of the school"},"address":{"type":"string","description":"Physical address of the school"},"city":{"type":"string","description":"City where the school is located"},"state":{"type":"string","description":"State/province where the school is located"},"zipCode":{"type":"string","description":"Postal/ZIP code"},"country":{"type":"string","description":"Country where the school is located"},"phone":{"type":"string","description":"Contact phone number"},"email":{"type":"string","description":"Contact email address"},"website":{"type":"string","description":"School website URL"},"logo":{"type":"string","description":"URL to school logo image"},"adminIds":{"type":"array","items":{"type":"string"},"description":"List of user IDs who are administrators of this school"},"createdAt":{"type":"string","format":"date-time","description":"School creation timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"School last update timestamp"}}},"SchoolClass":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the class"},"name":{"type":"string","description":"Name of the class"},"grade":{"type":"number","description":"Grade level of the class (optional)"},"schoolId":{"type":"string","description":"ID of the school this class belongs to"},"teacherId":{"type":"string","description":"ID of the teacher assigned to this class"},"studentIds":{"type":"array","description":"List of student IDs enrolled in this class","items":{"type":"string"}},"joinCode":{"type":"string","description":"Unique code for students to join this class"},"createdAt":{"type":"string","format":"date-time","description":"Class creation timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"Last update timestamp"}}},"SocialWorker":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the social worker profile"},"userId":{"type":"string","description":"User ID associated with this profile"},"assignedChildIds":{"type":"array","description":"IDs of students assigned to this social worker","items":{"type":"string"}},"organization":{"type":"string","description":"Organization the social worker belongs to"},"caseloadLimit":{"type":"number","description":"Maximum number of children this social worker can manage"},"caseNotes":{"type":"array","description":"Notes for assigned children","items":{"type":"object","properties":{"studentId":{"type":"string","description":"ID of the student the note is about"},"note":{"type":"string","description":"Content of the case note"},"date":{"type":"string","format":"date-time","description":"Date the note was created"}}}},"createdAt":{"type":"string","format":"date-time","description":"Profile creation timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"Profile update timestamp"}}},"Student":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the student"},"userId":{"type":"string","description":"ID of the user record"},"grade":{"type":"number","description":"Student's grade level"},"schoolId":{"type":"string","description":"ID of the student's school (optional)"},"parentIds":{"type":"array","items":{"type":"string"},"description":"IDs of parents linked to the student"},"teacherIds":{"type":"array","items":{"type":"string"},"description":"IDs of teachers associated with the student"},"pointsAccountId":{"type":"string","description":"ID of the student's points account"},"level":{"type":"number","description":"Current student level"},"badges":{"type":"array","items":{"type":"string"},"description":"IDs of badges earned by the student"},"lastCheckInDate":{"type":"string","format":"date-time","description":"Last attendance check-in date"},"attendanceStreak":{"type":"number","description":"Current consecutive attendance streak"},"createdAt":{"type":"string","format":"date-time","description":"Record creation timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"Record update timestamp"}}},"TeacherProfile":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the teacher profile"},"userId":{"type":"string","description":"Reference to the user account"},"schoolId":{"type":"string","description":"Reference to the school"},"classIds":{"type":"array","items":{"type":"string"},"description":"List of classes taught by the teacher"},"subjectsTaught":{"type":"array","items":{"type":"string"},"description":"List of subjects taught by the teacher"},"createdAt":{"type":"string","format":"date-time","description":"Profile creation timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"Profile update timestamp"}}},"User":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the user"},"email":{"type":"string","format":"email","description":"User's email address"},"roles":{"type":"array","items":{"type":"string","enum":["student","parent","teacher","school_admin","social_worker","platform_admin"]},"description":"User's roles in the system"},"firstName":{"type":"string","description":"User's first name"},"lastName":{"type":"string","description":"User's last name"},"dateOfBirth":{"type":"string","format":"date","description":"User's date of birth"},"avatar":{"type":"string","description":"URL to user's avatar image"},"phoneNumber":{"type":"string","description":"User's phone number"},"createdAt":{"type":"string","format":"date-time","description":"Account creation timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"Account update timestamp"},"isActive":{"type":"boolean","description":"Whether the user account is active"}}},"Task":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the task"},"title":{"type":"string","description":"Title of the task"},"description":{"type":"string","description":"Detailed description of the task"},"category":{"type":"string","enum":["academic","home","behavior","extracurricular","attendance","system"],"description":"Primary category of the task"},"subCategory":{"type":"string","description":"More specific subcategory (e.g., math, reading, chore)"},"pointValue":{"type":"number","description":"Points awarded upon completion","minimum":0},"createdBy":{"type":"string","description":"ID of the user who created the task"},"creatorRole":{"type":"string","enum":["student","parent","teacher","school_admin","social_worker","platform_admin","system"],"description":"Role of the creator"},"assignedTo":{"type":"string","description":"ID of the student this task is assigned to"},"status":{"type":"string","enum":["pending","completed","pending_approval","approved","rejected","expired"],"description":"Current status of the task"},"dueDate":{"type":"string","format":"date-time","description":"When the task is due"},"completedDate":{"type":"string","format":"date-time","description":"When the task was marked as completed"},"approvedBy":{"type":"string","description":"ID of the user who approved the task"},"approverRole":{"type":"string","enum":["parent","teacher","school_admin","social_worker","platform_admin","system"],"description":"Role of the approver"},"approvalDate":{"type":"string","format":"date-time","description":"When the task was approved"},"completion":{"type":"object","properties":{"note":{"type":"string","description":"Notes provided during completion"},"evidence":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["image","document","link","text"]},"url":{"type":"string"},"content":{"type":"string"}}}}}},"isRecurring":{"type":"boolean","description":"Whether this is a recurring task"},"recurringSchedule":{"type":"object","properties":{"frequency":{"type":"string","enum":["daily","weekly","monthly"]},"daysOfWeek":{"type":"array","items":{"type":"number","minimum":0,"maximum":6}},"interval":{"type":"number","default":1},"endDate":{"type":"string","format":"date-time"}}},"parentTaskId":{"type":"string","description":"ID of the parent recurring task (for task instances)"},"instanceDate":{"type":"string","format":"date-time","description":"Date of this recurring task instance"},"requiresApproval":{"type":"boolean","default":true,"description":"Whether this task requires approval when completed"},"approverType":{"type":"string","enum":["parent","teacher","school_admin","social_worker","platform_admin","system","none"],"description":"Who should approve this task"},"specificApproverId":{"type":"string","description":"ID of specific user who should approve (if applicable)"},"difficulty":{"type":"string","enum":["easy","medium","hard","challenging"],"description":"Difficulty level of the task"},"schoolId":{"type":"string","description":"ID of associated school (if applicable)"},"classId":{"type":"string","description":"ID of associated class (if applicable)"},"createdAt":{"type":"string","format":"date-time","description":"Task creation timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"Last update timestamp"}}},"TaskCreate":{"type":"object","required":["title","category","pointValue","assignedTo"],"properties":{"title":{"type":"string","example":"Complete math worksheet"},"description":{"type":"string","example":"Finish pages 10-12 in the math workbook"},"category":{"type":"string","enum":["academic","home","behavior","extracurricular","attendance","system"],"example":"academic"},"subCategory":{"type":"string","example":"Math"},"pointValue":{"type":"number","example":15},"assignedTo":{"type":"string","example":"60f8a9b5e6b3f32f8c9a8d7e"},"dueDate":{"type":"string","format":"date-time","example":"2023-11-15T18:00:00.000Z"},"isRecurring":{"type":"boolean","example":false},"recurringSchedule":{"type":"object","properties":{"frequency":{"type":"string","enum":["daily","weekly","monthly"],"example":"weekly"},"daysOfWeek":{"type":"array","items":{"type":"number"},"example":[1,3,5]},"interval":{"type":"number","example":1}}},"requiresApproval":{"type":"boolean","example":true},"approverType":{"type":"string","enum":["parent","teacher","school_admin","social_worker","platform_admin","system","none"],"example":"teacher"},"difficulty":{"type":"string","enum":["easy","medium","hard","challenging"],"example":"medium"}}},"TaskCategory":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the category"},"name":{"type":"string","description":"Name of the category"},"description":{"type":"string","description":"Detailed description of the category"},"icon":{"type":"string","description":"Icon or emoji for the category"},"color":{"type":"string","description":"Color for UI representation"},"parentCategory":{"type":"string","description":"ID of parent category if this is a subcategory"},"createdBy":{"type":"string","description":"ID of the user who created the category"},"creatorRole":{"type":"string","enum":["parent","teacher","school_admin","social_worker","platform_admin","system"],"description":"Role of the creator"},"type":{"type":"string","enum":["academic","home","behavior","extracurricular","attendance","system","custom"],"description":"Type of category"},"defaultPointValue":{"type":"number","description":"Default point value for tasks in this category"},"schoolId":{"type":"string","description":"ID of the school (for school-specific categories)"},"subject":{"type":"string","description":"Subject (for academic categories)"},"gradeLevel":{"type":"number","description":"Grade level (for grade-specific categories)"},"isSystem":{"type":"boolean","description":"Whether this is a system category that cannot be modified"},"visibility":{"type":"string","enum":["private","family","class","school","public"],"description":"Who can see and use this category"},"displayOrder":{"type":"number","description":"Ordering for display"},"isActive":{"type":"boolean","description":"Whether this category is active"},"createdAt":{"type":"string","format":"date-time","description":"Creation timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"Last update timestamp"}}},"TaskCategoryCreate":{"type":"object","required":["name","type"],"properties":{"name":{"type":"string","example":"Math Homework"},"description":{"type":"string","example":"Math assignments and practice problems"},"icon":{"type":"string","example":"calculator"},"color":{"type":"string","example":"#4285F4"},"parentCategory":{"type":"string","example":"60f8a9b5e6b3f32f8c9a8d7e"},"type":{"type":"string","enum":["academic","home","behavior","extracurricular","attendance","system","custom"],"example":"academic"},"defaultPointValue":{"type":"number","example":15},"schoolId":{"type":"string","example":"60f8a9b5e6b3f32f8c9a8d7e"},"subject":{"type":"string","example":"Mathematics"},"gradeLevel":{"type":"number","example":8},"visibility":{"type":"string","enum":["private","family","class","school","public"],"example":"school"},"displayOrder":{"type":"number","example":10}}},"TaskTemplate":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the template"},"title":{"type":"string","description":"Title of the task template"},"description":{"type":"string","description":"Detailed description of the task template"},"category":{"type":"string","enum":["academic","home","behavior","extracurricular","attendance","system"],"description":"Category of the task"},"subCategory":{"type":"string","description":"Sub-category of the task"},"suggestedPointValue":{"type":"number","description":"Recommended point value for tasks created from this template"},"createdBy":{"type":"string","description":"ID of the user who created the template"},"creatorRole":{"type":"string","enum":["parent","teacher","school_admin","social_worker","platform_admin","system"],"description":"Role of the creator"},"requiresApproval":{"type":"boolean","description":"Whether tasks created from this template require approval"},"defaultApproverType":{"type":"string","enum":["parent","teacher","school_admin","social_worker","platform_admin","system","none"],"description":"Default type of approver for tasks created from this template"},"isRecurring":{"type":"boolean","description":"Whether tasks created from this template should be recurring by default"},"defaultRecurringSchedule":{"type":"object","properties":{"frequency":{"type":"string","enum":["daily","weekly","monthly"]},"daysOfWeek":{"type":"array","items":{"type":"number"}},"interval":{"type":"number"}},"description":"Default recurring schedule for tasks created from this template"},"estimatedDuration":{"type":"number","description":"Estimated time to complete (in minutes)"},"difficulty":{"type":"string","enum":["easy","medium","hard","challenging"],"description":"Difficulty level of the task"},"recommendedAgeMin":{"type":"number","description":"Minimum recommended age for this template"},"recommendedAgeMax":{"type":"number","description":"Maximum recommended age for this template"},"recommendedGradeMin":{"type":"number","description":"Minimum recommended grade level for this template"},"recommendedGradeMax":{"type":"number","description":"Maximum recommended grade level for this template"},"externalResource":{"type":"object","properties":{"platform":{"type":"string"},"resourceId":{"type":"string"},"url":{"type":"string"}},"description":"External resource associated with this template"},"attachments":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","enum":["image","document","link","video"]},"url":{"type":"string"},"name":{"type":"string"},"contentType":{"type":"string"}}},"description":"Default attachments for tasks created from this template"},"schoolId":{"type":"string","description":"ID of the school (for school-specific templates)"},"visibility":{"type":"string","enum":["private","family","class","school","public"],"description":"Who can see and use this template"},"isFeatured":{"type":"boolean","description":"Whether this is a featured template"},"usageCount":{"type":"number","description":"Number of times this template has been used"},"isActive":{"type":"boolean","description":"Whether this template is active"},"metadata":{"type":"object","description":"Additional metadata for the template"},"createdAt":{"type":"string","format":"date-time","description":"Creation timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"Last update timestamp"}}},"TaskTemplateCreate":{"type":"object","required":["title","category","suggestedPointValue"],"properties":{"title":{"type":"string","example":"Daily Math Practice"},"description":{"type":"string","example":"Complete 20 minutes of math practice problems"},"category":{"type":"string","enum":["academic","home","behavior","extracurricular","attendance","system"],"example":"academic"},"subCategory":{"type":"string","example":"Math"},"suggestedPointValue":{"type":"number","example":15},"requiresApproval":{"type":"boolean","example":true},"defaultApproverType":{"type":"string","enum":["parent","teacher","school_admin","social_worker","platform_admin","system","none"],"example":"teacher"},"isRecurring":{"type":"boolean","example":true},"defaultRecurringSchedule":{"type":"object","properties":{"frequency":{"type":"string","example":"daily"},"daysOfWeek":{"type":"array","items":{"type":"number"},"example":[1,2,3,4,5]},"interval":{"type":"number","example":1}}},"estimatedDuration":{"type":"number","example":20},"difficulty":{"type":"string","enum":["easy","medium","hard","challenging"],"example":"medium"},"recommendedAgeMin":{"type":"number","example":8},"recommendedAgeMax":{"type":"number","example":12},"recommendedGradeMin":{"type":"number","example":3},"recommendedGradeMax":{"type":"number","example":6},"externalResource":{"type":"object","properties":{"platform":{"type":"string","example":"Khan Academy"},"url":{"type":"string","example":"https://www.khanacademy.org/math"}}},"schoolId":{"type":"string","example":"60f8a9b5e6b3f32f8c9a8d7e"},"visibility":{"type":"string","enum":["private","family","class","school","public"],"example":"school"}}},"TaskTemplateUpdate":{"type":"object","properties":{"title":{"type":"string"},"description":{"type":"string"},"category":{"type":"string","enum":["academic","home","behavior","extracurricular","attendance","system"]},"subCategory":{"type":"string"},"suggestedPointValue":{"type":"number"},"requiresApproval":{"type":"boolean"},"defaultApproverType":{"type":"string","enum":["parent","teacher","school_admin","social_worker","platform_admin","system","none"]},"isRecurring":{"type":"boolean"},"defaultRecurringSchedule":{"type":"object"},"estimatedDuration":{"type":"number"},"difficulty":{"type":"string","enum":["easy","medium","hard","challenging"]},"recommendedAgeMin":{"type":"number"},"recommendedAgeMax":{"type":"number"},"recommendedGradeMin":{"type":"number"},"recommendedGradeMax":{"type":"number"},"externalResource":{"type":"object"},"schoolId":{"type":"string"},"visibility":{"type":"string","enum":["private","family","class","school","public"]}}},"TaskFromTemplate":{"type":"object","required":["assignedTo"],"properties":{"assignedTo":{"type":"string","example":"60f8a9b5e6b3f32f8c9a8d7e","description":"ID of student to assign the task to"},"dueDate":{"type":"string","format":"date-time","example":"2023-05-15T18:00:00Z"},"pointValue":{"type":"number","example":20},"description":{"type":"string","example":"Custom description for this task instance"},"specificApproverId":{"type":"string","example":"60f8a9b5e6b3f32f8c9a8d7e"},"isRecurring":{"type":"boolean","example":true},"recurringSchedule":{"type":"object","properties":{"frequency":{"type":"string","example":"weekly"},"daysOfWeek":{"type":"array","items":{"type":"number"},"example":[1,3,5]},"interval":{"type":"number","example":1}}},"attachments":{"type":"array","items":{"type":"object"}},"visibility":{"type":"string","enum":["private","family","class","school","public"],"example":"family"},"metadata":{"type":"object"}}},"RewardRedemption":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the redemption"},"rewardId":{"type":"string","description":"ID of the redeemed reward"},"studentId":{"type":"string","description":"ID of the student who redeemed the reward"},"pointsSpent":{"type":"number","description":"Number of points spent for this redemption","minimum":0},"redemptionDate":{"type":"string","format":"date-time","description":"Date when the reward was redeemed"},"status":{"type":"string","enum":["pending","fulfilled","canceled","expired"],"description":"Current status of the redemption","default":"pending"},"fulfillmentDate":{"type":"string","format":"date-time","description":"Date when the redemption was fulfilled"},"fulfillerId":{"type":"string","description":"ID of the user who fulfilled the redemption"},"redemptionCode":{"type":"string","description":"Unique code for this redemption"},"feedback":{"type":"string","description":"Feedback provided during fulfillment"},"metadata":{"type":"object","additionalProperties":true,"description":"Additional metadata for the redemption"},"cancelReason":{"type":"string","description":"Reason for cancellation (if canceled)"},"cancelledBy":{"type":"string","description":"ID of the user who canceled the redemption"},"cancelledAt":{"type":"string","format":"date-time","description":"Date when the redemption was canceled"},"createdAt":{"type":"string","format":"date-time","description":"Creation timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"Last update timestamp"}}},"RedemptionRequest":{"type":"object","properties":{"studentId":{"type":"string","description":"ID of the student redeeming the reward (optional, defaults to authenticated user)","example":"60f8a9b5e6b3f32f8c9a8d7e"}}},"FulfillmentRequest":{"type":"object","properties":{"feedback":{"type":"string","description":"Feedback about the fulfillment","example":"Reward delivered successfully"}}},"CancellationRequest":{"type":"object","required":["reason"],"properties":{"reason":{"type":"string","description":"Reason for canceling the redemption","example":"Student changed their mind"}}},"Reward":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the reward"},"title":{"type":"string","description":"Title of the reward"},"description":{"type":"string","description":"Detailed description of the reward"},"category":{"type":"string","enum":["family","school","sponsor"],"description":"Main category of the reward (DEPRECATED)"},"subcategory":{"type":"string","enum":["privilege","item","experience","digital"],"description":"Subcategory of the reward (DEPRECATED)"},"categoryId":{"type":"string","description":"Reference to RewardCategory"},"categoryName":{"type":"string","description":"Category type from RewardCategory"},"subcategoryName":{"type":"string","description":"Subcategory type from RewardCategory"},"pointsCost":{"type":"number","description":"Number of points required to redeem the reward","minimum":0},"creatorId":{"type":"string","description":"ID of the user who created the reward"},"creatorType":{"type":"string","enum":["parent","school","sponsor","system"],"description":"Type of entity that created the reward"},"schoolId":{"type":"string","description":"ID of the school (for school rewards)"},"limitedQuantity":{"type":"boolean","description":"Whether the reward has limited quantity","default":false},"quantity":{"type":"number","description":"Available quantity (if limitedQuantity is true)","minimum":0},"expiryDate":{"type":"string","format":"date-time","description":"Expiration date of the reward"},"image":{"type":"string","description":"URL to reward image"},"isActive":{"type":"boolean","description":"Whether the reward is currently active","default":true},"redemptionInstructions":{"type":"string","description":"Instructions for how to redeem the reward"},"restrictions":{"type":"string","description":"Any restrictions or requirements for redemption"},"isDeleted":{"type":"boolean","description":"Whether the reward has been soft deleted","default":false},"metadata":{"type":"object","additionalProperties":true,"description":"Additional metadata for the reward"},"createdAt":{"type":"string","format":"date-time","description":"Creation timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"Last update timestamp"}}},"RewardCreate":{"type":"object","required":["title","description","pointsCost"],"properties":{"title":{"type":"string","description":"Title of the reward","example":"Extra Playtime"},"description":{"type":"string","description":"Detailed description of the reward","example":"30 minutes of extra playtime"},"category":{"type":"string","enum":["family","school","sponsor"],"description":"Main category of the reward (DEPRECATED)","example":"family"},"subcategory":{"type":"string","enum":["privilege","item","experience","digital"],"description":"Subcategory of the reward (DEPRECATED)","example":"privilege"},"categoryId":{"type":"string","description":"ID of the RewardCategory (recommended)","example":"60f8a9b5e6b3f32f8c9a8d7e"},"pointsCost":{"type":"number","description":"Number of points required to redeem the reward","minimum":0,"example":100},"limitedQuantity":{"type":"boolean","description":"Whether the reward has limited quantity","example":false},"quantity":{"type":"number","description":"Available quantity (required if limitedQuantity is true)","minimum":0,"example":10},"expiryDate":{"type":"string","format":"date-time","description":"Expiration date of the reward","example":"2023-12-31T23:59:59.000Z"},"image":{"type":"string","description":"URL to reward image","example":"https://example.com/reward-image.jpg"},"redemptionInstructions":{"type":"string","description":"Instructions for how to redeem the reward","example":"Show this to your parent to claim your extra playtime"},"restrictions":{"type":"string","description":"Any restrictions or requirements for redemption","example":"Must be used within 7 days of redemption"},"schoolId":{"type":"string","description":"ID of the school (for school rewards)","example":"60f8a9b5e6b3f32f8c9a8d7e"},"metadata":{"type":"object","additionalProperties":true,"description":"Additional metadata for the reward"}}},"RewardUpdate":{"type":"object","properties":{"title":{"type":"string","description":"Title of the reward"},"description":{"type":"string","description":"Detailed description of the reward"},"category":{"type":"string","enum":["family","school","sponsor"],"description":"Main category of the reward (DEPRECATED)"},"subcategory":{"type":"string","enum":["privilege","item","experience","digital"],"description":"Subcategory of the reward (DEPRECATED)"},"categoryId":{"type":"string","description":"ID of the RewardCategory"},"pointsCost":{"type":"number","description":"Number of points required to redeem the reward","minimum":0},"limitedQuantity":{"type":"boolean","description":"Whether the reward has limited quantity"},"quantity":{"type":"number","description":"Available quantity (if limitedQuantity is true)","minimum":0},"expiryDate":{"type":"string","format":"date-time","description":"Expiration date of the reward"},"image":{"type":"string","description":"URL to reward image"},"isActive":{"type":"boolean","description":"Whether the reward is currently active"},"redemptionInstructions":{"type":"string","description":"Instructions for how to redeem the reward"},"restrictions":{"type":"string","description":"Any restrictions or requirements for redemption"},"metadata":{"type":"object","additionalProperties":true,"description":"Additional metadata for the reward"}}},"RewardEligibility":{"type":"object","properties":{"studentId":{"type":"string","description":"ID of the student to check eligibility for","example":"60f8a9b5e6b3f32f8c9a8d7e"}}},"RewardCategory":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the category"},"name":{"type":"string","description":"Name of the category"},"description":{"type":"string","description":"Detailed description of the category"},"icon":{"type":"string","description":"Icon or emoji for the category"},"color":{"type":"string","description":"Color for UI representation"},"parentCategory":{"type":"string","description":"ID of parent category if this is a subcategory"},"createdBy":{"type":"string","description":"ID of the user who created the category"},"creatorRole":{"type":"string","enum":["parent","teacher","school_admin","social_worker","platform_admin","system"],"description":"Role of the creator"},"type":{"type":"string","enum":["family","school","sponsor","custom"],"description":"Type of category"},"subcategoryType":{"type":"string","enum":["privilege","item","experience","digital","custom"],"description":"Subcategory type"},"schoolId":{"type":"string","description":"ID of the school (for school-specific categories)"},"minPointValue":{"type":"number","description":"Minimum recommended point value for rewards in this category"},"maxPointValue":{"type":"number","description":"Maximum recommended point value for rewards in this category"},"isSystem":{"type":"boolean","description":"Whether this is a system category that cannot be modified"},"visibility":{"type":"string","enum":["private","family","class","school","public"],"description":"Who can see and use this category"},"displayOrder":{"type":"number","description":"Ordering for display"},"isActive":{"type":"boolean","description":"Whether this category is active"},"isDeleted":{"type":"boolean","description":"Whether this category is deleted (soft delete)"},"createdAt":{"type":"string","format":"date-time","description":"Creation timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"Last update timestamp"}}},"RewardCategoryCreate":{"type":"object","required":["name","type"],"properties":{"name":{"type":"string","example":"Extra Playtime"},"description":{"type":"string","example":"Additional recreational time as a reward"},"icon":{"type":"string","example":"game"},"color":{"type":"string","example":"#4285F4"},"parentCategory":{"type":"string","example":"60f8a9b5e6b3f32f8c9a8d7e"},"type":{"type":"string","enum":["family","school","sponsor","custom"],"example":"family"},"subcategoryType":{"type":"string","enum":["privilege","item","experience","digital","custom"],"example":"privilege"},"schoolId":{"type":"string","example":"60f8a9b5e6b3f32f8c9a8d7e"},"minPointValue":{"type":"number","example":10},"maxPointValue":{"type":"number","example":100},"visibility":{"type":"string","enum":["private","family","class","school","public"],"example":"family"},"displayOrder":{"type":"number","example":10}}},"RewardCategoryUpdate":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"icon":{"type":"string"},"color":{"type":"string"},"parentCategory":{"type":"string"},"type":{"type":"string","enum":["family","school","sponsor","custom"]},"subcategoryType":{"type":"string","enum":["privilege","item","experience","digital","custom"]},"schoolId":{"type":"string"},"minPointValue":{"type":"number"},"maxPointValue":{"type":"number"},"visibility":{"type":"string","enum":["private","family","class","school","public"]},"displayOrder":{"type":"number"},"isActive":{"type":"boolean"}}},"RewardCategoryHierarchy":{"type":"object","properties":{"category":{"$ref":"#/components/schemas/RewardCategory"},"subcategories":{"type":"array","items":{"$ref":"#/components/schemas/RewardCategory"}}}},"PointAccount":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the point account"},"studentId":{"type":"string","description":"ID of the student who owns this account"},"currentBalance":{"type":"number","description":"Current available point balance","minimum":0},"totalEarned":{"type":"number","description":"Total lifetime points earned","minimum":0},"totalSpent":{"type":"number","description":"Total lifetime points spent","minimum":0},"level":{"type":"number","description":"Current student level","minimum":1},"levelName":{"type":"string","description":"Current level name"},"lastUpdated":{"type":"string","format":"date-time","description":"Last account update timestamp"},"createdAt":{"type":"string","format":"date-time","description":"Account creation timestamp"}}},"PointConfiguration":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the configuration"},"version":{"type":"number","description":"Configuration version number"},"isActive":{"type":"boolean","description":"Whether this is the currently active configuration"},"activityPoints":{"type":"object","properties":{"attendance":{"type":"object","properties":{"dailyCheckIn":{"type":"number","description":"Points awarded for daily check-in"},"streak":{"type":"object","properties":{"enabled":{"type":"boolean"},"interval":{"type":"number"},"bonus":{"type":"number"}}},"perfectWeek":{"type":"object","properties":{"enabled":{"type":"boolean"},"bonus":{"type":"number"}}}}},"tasks":{"type":"object","properties":{"categories":{"type":"object","additionalProperties":{"type":"number"}},"difficultyMultipliers":{"type":"object","additionalProperties":{"type":"number"}}}},"badges":{"type":"object","properties":{"default":{"type":"number"},"special":{"type":"object","additionalProperties":{"type":"number"}}}},"behavior":{"type":"object","properties":{"positive":{"type":"number"},"negative":{"type":"number"}}}}},"limits":{"type":"object","properties":{"daily":{"type":"object","properties":{"enabled":{"type":"boolean"},"maxPoints":{"type":"number"}}},"weekly":{"type":"object","properties":{"enabled":{"type":"boolean"},"maxPoints":{"type":"number"}}},"monthly":{"type":"object","properties":{"enabled":{"type":"boolean"},"maxPoints":{"type":"number"}}},"sources":{"type":"object","additionalProperties":{"type":"object"}}}},"levelProgression":{"type":"object","additionalProperties":{"type":"number"},"description":"Map of level numbers to point thresholds"},"maxLevel":{"type":"number","description":"Maximum level defined in the system"},"levelNames":{"type":"object","additionalProperties":{"type":"string"},"description":"Map of level numbers to level names"},"createdBy":{"type":"string","description":"User ID who created this configuration"},"createdAt":{"type":"string","format":"date-time","description":"Creation timestamp"},"updatedBy":{"type":"string","description":"User ID who last updated this configuration"},"updatedAt":{"type":"string","format":"date-time","description":"Last update timestamp"}}},"LevelInfo":{"type":"object","properties":{"level":{"type":"number","description":"Level number"},"threshold":{"type":"number","description":"Points required to reach this level"},"name":{"type":"string","description":"Display name for the level"}}},"PointTransaction":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the transaction"},"accountId":{"type":"string","description":"ID of the associated point account"},"studentId":{"type":"string","description":"ID of the student"},"amount":{"type":"number","description":"Amount of points awarded/deducted"},"type":{"type":"string","enum":["earned","spent","adjusted"],"description":"Type of transaction"},"source":{"type":"string","enum":["task","attendance","behavior","badge","redemption","manual_adjustment"],"description":"Source of the transaction"},"sourceId":{"type":"string","description":"ID of the source entity (task, badge, etc.)"},"description":{"type":"string","description":"Description of the transaction"},"awardedBy":{"type":"string","description":"ID of the user who awarded the points"},"awardedByRole":{"type":"string","enum":["student","parent","teacher","school_admin","social_worker","platform_admin","system"],"description":"Role of the user who awarded the points"},"balanceAfter":{"type":"number","description":"Account balance after this transaction"},"metadata":{"type":"object","description":"Additional transaction metadata"},"createdAt":{"type":"string","format":"date-time","description":"Transaction creation timestamp"}}},"DashboardOverview":{"type":"object","properties":{"userMetrics":{"type":"object","properties":{"totalUsers":{"type":"number","description":"Total number of users in the system"},"activeUsers":{"type":"number","description":"Number of active users in the last 30 days"},"newUsers":{"type":"number","description":"Number of new users in the measurement period"},"change":{"type":"object","properties":{"totalUsers":{"type":"number","description":"Percentage change in total users"},"activeUsers":{"type":"number","description":"Percentage change in active users"}}}}},"taskMetrics":{"type":"object","properties":{"totalTasks":{"type":"number","description":"Total number of tasks in the system"},"completedTasks":{"type":"number","description":"Number of completed tasks"},"pendingTasks":{"type":"number","description":"Number of pending tasks"},"completionRate":{"type":"number","description":"Task completion rate as a percentage"},"change":{"type":"object","properties":{"completionRate":{"type":"number","description":"Percentage change in completion rate"}}}}},"pointMetrics":{"type":"object","properties":{"totalPointsEarned":{"type":"number","description":"Total points earned across the platform"},"totalPointsSpent":{"type":"number","description":"Total points spent across the platform"},"averagePointsPerAccount":{"type":"number","description":"Average points per student account"},"change":{"type":"object","properties":{"pointsEarned":{"type":"number","description":"Percentage change in points earned"}}}}},"badgeMetrics":{"type":"object","properties":{"totalBadgesAwarded":{"type":"number","description":"Total badges awarded"},"uniqueStudentsAwarded":{"type":"number","description":"Number of unique students who received badges"},"change":{"type":"object","properties":{"badgesAwarded":{"type":"number","description":"Percentage change in badges awarded"}}}}},"recentJobs":{"type":"array","items":{"type":"object","properties":{"jobType":{"type":"string","enum":["user","task","point","badge","full"]},"status":{"type":"string","enum":["pending","processing","completed","failed"]},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"processedRecords":{"type":"number"},"createdAt":{"type":"string","format":"date-time"}}}},"lastUpdated":{"type":"string","format":"date-time","description":"Timestamp of last update"}}},"SystemHealth":{"type":"object","properties":{"status":{"type":"string","enum":["healthy","degraded","unhealthy"],"description":"Overall system health status"},"database":{"type":"object","properties":{"status":{"type":"string","enum":["connected","disconnected"]},"collections":{"type":"object","properties":{"userMetrics":{"type":"number"},"taskMetrics":{"type":"number"},"pointMetrics":{"type":"number"},"badgeMetrics":{"type":"number"}}}}},"jobs":{"type":"object","properties":{"recent":{"type":"array","items":{"type":"object","properties":{"jobType":{"type":"string","enum":["user","task","point","badge","full"]},"status":{"type":"string","enum":["pending","processing","completed","failed"]},"lastRun":{"type":"string","format":"date-time"}}}},"lastRun":{"type":"string","format":"date-time","description":"Last job execution time"}}},"timestamp":{"type":"string","format":"date-time","description":"Current timestamp"}}},"AnalyticsUpdateRequest":{"type":"object","required":["type"],"properties":{"type":{"type":"string","enum":["user","task","point","badge","full"],"example":"full","description":"Type of analytics to update"},"startDate":{"type":"string","format":"date-time","example":"2023-01-01T00:00:00.000Z","description":"Start date for analytics data collection"},"endDate":{"type":"string","format":"date-time","example":"2023-01-31T23:59:59.999Z","description":"End date for analytics data collection"}}},"AnalyticsJob":{"type":"object","properties":{"jobId":{"type":"string","description":"Unique identifier for the analytics job"},"jobType":{"type":"string","enum":["user","task","point","badge","full"],"description":"Type of analytics job"},"startDate":{"type":"string","format":"date-time","description":"Start date for data collection"},"endDate":{"type":"string","format":"date-time","description":"End date for data collection"},"status":{"type":"string","enum":["pending","processing","completed","failed"],"description":"Current status of the job"}}},"BadgeAwardMetricsResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"period":{"type":"string","enum":["daily","weekly","monthly"],"example":"monthly"},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"schoolId":{"type":"string","nullable":true,"example":"60f8a9b5e6b3f32f8c9a8d7e"},"metrics":{"type":"array","items":{"type":"object","properties":{"date":{"type":"string","format":"date-time"},"totalBadgesAwarded":{"type":"number","example":157},"uniqueStudentsAwarded":{"type":"number","example":89},"badgesByConditionType":{"type":"object","properties":{"points_threshold":{"type":"number","example":58},"task_completion":{"type":"number","example":42},"attendance_streak":{"type":"number","example":37},"custom":{"type":"number","example":20}}},"badgesByIssuerType":{"type":"object","properties":{"system":{"type":"number","example":87},"school":{"type":"number","example":61},"parent":{"type":"number","example":9}}},"totalPointsFromBadges":{"type":"number","example":3750},"awardsPerStudent":{"type":"number","format":"float","example":1.76}}}}}}}},"PopularBadgesResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"schoolId":{"type":"string","nullable":true,"example":"60f8a9b5e6b3f32f8c9a8d7e"},"popularBadges":{"type":"array","items":{"type":"object","properties":{"badgeId":{"type":"string","example":"60f8a9b5e6b3f32f8c9a8d7e"},"badgeName":{"type":"string","example":"Math Wizard"},"count":{"type":"number","example":42}}}}}}}},"BadgeCategoryDistributionResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"schoolId":{"type":"string","nullable":true,"example":"60f8a9b5e6b3f32f8c9a8d7e"},"badgesByCategory":{"type":"object","additionalProperties":{"type":"number"},"example":{"academic":87,"behavior":42,"attendance":28}},"badgesByConditionType":{"type":"object","properties":{"points_threshold":{"type":"number","example":58},"task_completion":{"type":"number","example":42},"attendance_streak":{"type":"number","example":37},"custom":{"type":"number","example":20}}},"badgesByIssuerType":{"type":"object","properties":{"system":{"type":"number","example":87},"school":{"type":"number","example":61},"parent":{"type":"number","example":9}}}}}}},"PointsTransactionsResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"period":{"type":"string","enum":["daily","weekly","monthly"],"example":"monthly"},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"schoolId":{"type":"string","nullable":true,"example":"60f8a9b5e6b3f32f8c9a8d7e"},"metrics":{"type":"array","items":{"type":"object","properties":{"date":{"type":"string","format":"date-time"},"totalPointsEarned":{"type":"number","example":15750},"totalPointsSpent":{"type":"number","example":8450},"netPointsChange":{"type":"number","example":7300},"pointsBySource":{"type":"object","properties":{"task":{"type":"number","example":8750},"attendance":{"type":"number","example":3500},"behavior":{"type":"number","example":2250},"badge":{"type":"number","example":1000},"manual_adjustment":{"type":"number","example":250}}},"pointsByTransactionType":{"type":"object","properties":{"earned":{"type":"number","example":15500},"spent":{"type":"number","example":8450},"adjusted":{"type":"number","example":250}}}}}}}}}},"PointsEconomyHealthResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"schoolId":{"type":"string","nullable":true,"example":"60f8a9b5e6b3f32f8c9a8d7e"},"economyHealth":{"type":"object","properties":{"pointsEarningRate":{"type":"number","format":"float","example":525,"description":"Average points earned per day"},"pointsSpendingRate":{"type":"number","format":"float","example":281.7,"description":"Average points spent per day"},"economyBalance":{"type":"number","format":"float","example":53.7,"description":"Percentage of points spent relative to earned"},"pointsVelocity":{"type":"number","format":"float","example":243.3,"description":"Net points change per day"},"inflationRate":{"type":"number","format":"float","example":12.5,"description":"Percentage change in average points per account"}}},"pointsDistribution":{"type":"object","properties":{"bySource":{"type":"object","properties":{"task":{"type":"number","example":8750},"attendance":{"type":"number","example":3500},"behavior":{"type":"number","example":2250},"badge":{"type":"number","example":1000},"manual_adjustment":{"type":"number","example":250}}},"byTransactionType":{"type":"object","properties":{"earned":{"type":"number","example":15500},"spent":{"type":"number","example":8450},"adjusted":{"type":"number","example":250}}}}}}}}},"LevelDistributionResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"schoolId":{"type":"string","nullable":true,"example":"60f8a9b5e6b3f32f8c9a8d7e"},"levelDistribution":{"type":"object","additionalProperties":{"type":"number"},"example":{"1":45,"2":78,"3":56,"4":32,"5":14}}}}}},"TaskMetricsResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"period":{"type":"string","enum":["daily","weekly","monthly"],"example":"monthly"},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"schoolId":{"type":"string","nullable":true,"example":"60f8a9b5e6b3f32f8c9a8d7e"},"metrics":{"type":"array","items":{"type":"object","properties":{"date":{"type":"string","format":"date-time"},"totalTasks":{"type":"number","example":315},"newTasks":{"type":"number","example":78},"completedTasks":{"type":"number","example":215},"pendingTasks":{"type":"number","example":97},"completionRate":{"type":"number","format":"float","example":68.25,"description":"Percentage of tasks completed"}}}}}}}},"TaskCategoryDistributionResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"schoolId":{"type":"string","nullable":true,"example":"60f8a9b5e6b3f32f8c9a8d7e"},"categoryDistribution":{"type":"object","additionalProperties":{"type":"number"},"example":{"Homework":95,"Reading":68,"Math":45,"Science":32,"Household Chores":75}},"difficultyDistribution":{"type":"object","properties":{"easy":{"type":"number","example":120},"medium":{"type":"number","example":135},"hard":{"type":"number","example":45},"challenging":{"type":"number","example":15}}}}}}},"SchoolPerformanceResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"sortBy":{"type":"string","enum":["totalTasks","completedTasks","completionRate"],"example":"completionRate"},"schools":{"type":"array","items":{"type":"object","properties":{"schoolId":{"type":"string","example":"60f8a9b5e6b3f32f8c9a8d7e"},"schoolName":{"type":"string","example":"Lincoln Elementary School"},"totalTasks":{"type":"number","example":587},"completedTasks":{"type":"number","example":432},"completionRate":{"type":"number","format":"float","example":73.6}}}}}}}},"UserGrowthResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"period":{"type":"string","enum":["daily","weekly","monthly"],"example":"monthly"},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"schoolId":{"type":"string","nullable":true,"example":"60f8a9b5e6b3f32f8c9a8d7e"},"metrics":{"type":"array","items":{"type":"object","properties":{"date":{"type":"string","format":"date-time"},"totalUsers":{"type":"number","example":845},"newUsers":{"type":"number","example":32},"activeUsers":{"type":"number","example":567},"usersByRole":{"type":"object","properties":{"students":{"type":"number","example":425},"parents":{"type":"number","example":315},"teachers":{"type":"number","example":85},"school_admin":{"type":"number","example":15},"social_worker":{"type":"number","example":4},"platform_admin":{"type":"number","example":1}}}}}}}}}},"UserEngagementResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"period":{"type":"string","enum":["daily","weekly","monthly"],"example":"monthly"},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"schoolId":{"type":"string","nullable":true,"example":"60f8a9b5e6b3f32f8c9a8d7e"},"metrics":{"type":"object","properties":{"activeUsers":{"type":"number","example":567},"activeUserRate":{"type":"number","format":"float","example":67.1,"description":"Percentage of total users who are active"},"userDistribution":{"type":"object","properties":{"students":{"type":"number","example":425},"parents":{"type":"number","example":315},"teachers":{"type":"number","example":85},"school_admin":{"type":"number","example":15},"social_worker":{"type":"number","example":4},"platform_admin":{"type":"number","example":1}}}}}}}}},"SchoolComparisonResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"schools":{"type":"array","items":{"type":"object","properties":{"schoolId":{"type":"string","example":"60f8a9b5e6b3f32f8c9a8d7e"},"schoolName":{"type":"string","example":"Lincoln Elementary School"},"totalUsers":{"type":"number","example":845},"activeUsers":{"type":"number","example":567},"activeRate":{"type":"number","format":"float","example":67.1},"userDistribution":{"type":"object","properties":{"students":{"type":"number","example":425},"parents":{"type":"number","example":315},"teachers":{"type":"number","example":85},"school_admin":{"type":"number","example":15}}}}}}}}}},"UserDevice":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the device"},"userId":{"type":"string","description":"ID of the user who owns this device"},"token":{"type":"string","description":"Push notification token for the device"},"deviceType":{"type":"string","enum":["ios","android","web","other"],"description":"Type of device"},"deviceModel":{"type":"string","description":"Model name of the device"},"deviceName":{"type":"string","description":"Custom name for the device"},"osVersion":{"type":"string","description":"Operating system version"},"appVersion":{"type":"string","description":"App version installed on the device"},"active":{"type":"boolean","description":"Whether the device is currently active","default":true},"lastActive":{"type":"string","format":"date-time","description":"When the device was last active"},"notificationEnabled":{"type":"boolean","description":"Whether notifications are enabled for this device","default":true},"language":{"type":"string","description":"Preferred language for notifications","default":"en"},"timezone":{"type":"string","description":"Device timezone","default":"UTC"},"createdAt":{"type":"string","format":"date-time","description":"When the device was first registered"},"updatedAt":{"type":"string","format":"date-time","description":"When the device was last updated"}}},"DeviceRegister":{"type":"object","required":["token","deviceType"],"properties":{"token":{"type":"string","description":"Push notification token from FCM or APNS","example":"fcm:APA91bHun4MxP5egoKMwt2KZFBaFUH-1RYqx..."},"deviceType":{"type":"string","enum":["ios","android","web","other"],"description":"Type of device","example":"android"},"deviceModel":{"type":"string","description":"Model of the device","example":"Pixel 6"},"deviceName":{"type":"string","description":"Name of the device","example":"My Phone"},"osVersion":{"type":"string","description":"OS version of the device","example":"Android 12"},"appVersion":{"type":"string","description":"Version of the app","example":"1.2.0"}}},"DeviceUpdate":{"type":"object","properties":{"active":{"type":"boolean","description":"Whether the device is active"},"notificationEnabled":{"type":"boolean","description":"Whether notifications are enabled"},"language":{"type":"string","description":"Preferred language","example":"en"},"timezone":{"type":"string","description":"User's timezone","example":"America/New_York"}}},"Notification":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the notification"},"userId":{"type":"string","description":"ID of the user who received this notification"},"title":{"type":"string","description":"Notification title"},"content":{"type":"string","description":"Notification content/message"},"type":{"type":"string","enum":["task","point","badge","attendance","reward","system","user"],"description":"Type of notification"},"sourceType":{"type":"string","description":"Specific notification source type (e.g., task.assigned, point.earned)"},"sourceId":{"type":"string","description":"ID of the associated entity (task, badge, etc.)"},"read":{"type":"boolean","description":"Whether the notification has been read"},"readAt":{"type":"string","format":"date-time","description":"When the notification was marked as read"},"isArchived":{"type":"boolean","description":"Whether the notification is archived"},"priority":{"type":"string","enum":["low","normal","high","urgent"],"description":"Notification priority level"},"createdAt":{"type":"string","format":"date-time","description":"When the notification was created"},"actionLink":{"type":"string","description":"Optional link for the notification action"},"actionText":{"type":"string","description":"Text for the action button"}}},"NotificationSend":{"type":"object","required":["userId","templateId"],"properties":{"userId":{"type":"string","description":"ID of the user to send notification to","example":"60f8a9b5e6b3f32f8c9a8d7e"},"templateId":{"type":"string","description":"ID of the notification template to use","example":"60f8a9b5e6b3f32f8c9a8d7f"},"data":{"type":"object","description":"Data to populate the template","example":{"email":"user@example.com","taskTitle":"Complete Project","pointsEarned":50}},"channels":{"type":"array","description":"Channels to send notification through","items":{"type":"string","enum":["in_app","email","push","sms"]},"example":["in_app","email"]}}},"NotificationBulkSend":{"type":"object","required":["userIds","templateId"],"properties":{"userIds":{"type":"array","description":"Array of user IDs to send notifications to","items":{"type":"string"},"example":["60f8a9b5e6b3f32f8c9a8d7e","60f8a9b5e6b3f32f8c9a8d7f"]},"templateId":{"type":"string","description":"ID of the notification template to use","example":"60f8a9b5e6b3f32f8c9a8d7f"},"data":{"type":"object","description":"Data to populate the template","example":{"title":"New Announcement","message":"School closed due to weather"}},"channels":{"type":"array","description":"Channels to send notification through","items":{"type":"string"},"example":["in_app","email"]}}},"NotificationPreference":{"type":"object","properties":{"_id":{"type":"string","description":"Unique identifier for the preference document"},"userId":{"type":"string","description":"ID of the user these preferences belong to"},"enabled":{"type":"boolean","description":"Whether notifications are globally enabled for this user","default":true},"channels":{"type":"object","description":"Channel-level preferences","properties":{"inApp":{"type":"boolean","description":"Whether in-app notifications are enabled","default":true},"email":{"type":"boolean","description":"Whether email notifications are enabled","default":true},"push":{"type":"boolean","description":"Whether push notifications are enabled","default":true},"sms":{"type":"boolean","description":"Whether SMS notifications are enabled","default":false}}},"quietHours":{"type":"object","description":"Quiet hours settings","properties":{"enabled":{"type":"boolean","description":"Whether quiet hours are enabled","default":false},"start":{"type":"string","description":"Start time for quiet hours (24h format)","example":"22:00"},"end":{"type":"string","description":"End time for quiet hours (24h format)","example":"08:00"},"timezone":{"type":"string","description":"User's timezone","default":"UTC"}}},"preferences":{"type":"object","description":"Notification type specific preferences","properties":{"taskAssignment":{"type":"object","properties":{"enabled":{"type":"boolean","default":true},"channels":{"type":"object","properties":{"inApp":{"type":"boolean","default":true},"email":{"type":"boolean","default":true},"push":{"type":"boolean","default":true},"sms":{"type":"boolean","default":false}}}}},"taskReminder":{"type":"object","properties":{"enabled":{"type":"boolean","default":true},"channels":{"type":"object","properties":{"inApp":{"type":"boolean","default":true},"email":{"type":"boolean","default":true},"push":{"type":"boolean","default":true},"sms":{"type":"boolean","default":false}}}}}}},"createdAt":{"type":"string","format":"date-time","description":"When the preferences were created"},"updatedAt":{"type":"string","format":"date-time","description":"When the preferences were last updated"}}},"PreferenceUpdate":{"type":"object","description":"Fields to update in notification preferences","properties":{"enabled":{"type":"boolean","description":"Whether notifications are globally enabled"},"channels":{"type":"object","description":"Channel-level preferences","properties":{"inApp":{"type":"boolean"},"email":{"type":"boolean"},"push":{"type":"boolean"},"sms":{"type":"boolean"}}},"quietHours":{"type":"object","properties":{"enabled":{"type":"boolean"},"start":{"type":"string","example":"22:00"},"end":{"type":"string","example":"08:00"},"timezone":{"type":"string"}}},"preferences":{"type":"object","description":"Updates to specific notification type preferences"}}},"RoleDefaultsRequest":{"type":"object","description":"Default preferences for a specific role","properties":{"enabled":{"type":"boolean"},"channels":{"type":"object"},"quietHours":{"type":"object"},"preferences":{"type":"object"}}}}},"security":[{"bearerAuth":[]}],"paths":{"/auth/register":{"post":{"summary":"Register a new user","tags":["Authentication"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["email","password","firstName","lastName"],"properties":{"email":{"type":"string","format":"email"},"password":{"type":"string","minLength":8},"firstName":{"type":"string"},"lastName":{"type":"string"},"roles":{"type":"array","items":{"type":"string","enum":["student","parent","teacher","school_admin","social_worker","platform_admin"]}}}}}}},"responses":{"201":{"description":"Registration successful","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean"},"message":{"type":"string"},"emailSent":{"type":"boolean"},"data":{"type":"object","properties":{"user":{"type":"object"},"accessToken":{"type":"string"},"refreshToken":{"type":"string"}}}}}}}},"400":{"description":"Bad request or user already exists"},"500":{"description":"Server error"}}}},"/auth/verify-email":{"get":{"summary":"Verify user email","tags":["Authentication"],"parameters":[{"in":"query","name":"email","required":true,"schema":{"type":"string","format":"email"}},{"in":"query","name":"token","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Email verified"},"400":{"description":"Invalid or expired token"},"500":{"description":"Server error"}}}},"/auth/resend-verification":{"post":{"summary":"Resend email verification link","tags":["Authentication"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["email"],"properties":{"email":{"type":"string","format":"email"}}}}}},"responses":{"200":{"description":"Link resent or error message"},"400":{"description":"Missing email or user already verified"},"500":{"description":"Server error"}}}},"/auth/login":{"post":{"summary":"User login","tags":["Authentication"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["email","password"],"properties":{"email":{"type":"string","format":"email"},"password":{"type":"string"}}}}}},"responses":{"200":{"description":"Login successful","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean"},"message":{"type":"string"},"data":{"type":"object","properties":{"user":{"type":"object"},"accessToken":{"type":"string"},"refreshToken":{"type":"string"}}}}}}}},"401":{"description":"Invalid credentials"},"403":{"description":"User not verified"},"500":{"description":"Server error"}}}},"/auth/refresh-token":{"post":{"summary":"Refresh access token","tags":["Authentication"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["refreshToken"],"properties":{"refreshToken":{"type":"string"}}}}}},"responses":{"200":{"description":"Token refreshed successfully"},"400":{"description":"Missing refresh token"},"401":{"description":"Invalid or expired refresh token"},"500":{"description":"Server error"}}}},"/auth/forgot-password":{"post":{"summary":"Request password reset","tags":["Authentication"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["email"],"properties":{"email":{"type":"string","format":"email"}}}}}},"responses":{"200":{"description":"Reset instructions sent if email exists"},"400":{"description":"Missing email"},"500":{"description":"Server error"}}}},"/auth/reset-password":{"get":{"summary":"Verify reset password token","tags":["Authentication"],"parameters":[{"in":"query","name":"email","required":true,"schema":{"type":"string","format":"email"}},{"in":"query","name":"token","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Valid reset token"},"400":{"description":"Invalid or expired token"},"500":{"description":"Server error"}}},"post":{"summary":"Reset user password","tags":["Authentication"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["email","token","newPassword"],"properties":{"email":{"type":"string","format":"email"},"token":{"type":"string"},"newPassword":{"type":"string","minLength":8}}}}}},"responses":{"200":{"description":"Password reset successful"},"400":{"description":"Invalid or expired token, or missing fields"},"500":{"description":"Server error"}}}},"/auth/logout":{"post":{"summary":"User logout","tags":["Authentication"],"responses":{"200":{"description":"Logged out successfully"}}}},"/auth/update-password":{"put":{"summary":"Update user password","tags":["Authentication"],"security":[{"bearerAuth":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["currentPassword","newPassword"],"properties":{"currentPassword":{"type":"string"},"newPassword":{"type":"string","minLength":8}}}}}},"responses":{"200":{"description":"Password updated successfully"},"400":{"description":"Missing fields or invalid password"},"401":{"description":"Unauthorized"},"500":{"description":"Server error"}}}},"/auth/me":{"get":{"summary":"Get current user profile","tags":["Authentication"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"User profile retrieved"},"401":{"description":"Unauthorized"},"404":{"description":"User not found"},"500":{"description":"Server error"}}}},"/attendance":{"get":{"summary":"Get all attendance records with filters","description":"Retrieve attendance records with optional filtering. Limited to teachers, school admins, platform admins, and parents.","tags":["Attendance"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"studentId","in":"query","description":"Filter by student ID","schema":{"type":"string"}},{"name":"schoolId","in":"query","description":"Filter by school ID","schema":{"type":"string"}},{"name":"startDate","in":"query","description":"Start date for filtering (YYYY-MM-DD)","schema":{"type":"string","format":"date"}},{"name":"endDate","in":"query","description":"End date for filtering (YYYY-MM-DD)","schema":{"type":"string","format":"date"}},{"name":"status","in":"query","description":"Filter by attendance status","schema":{"type":"string","enum":["present","absent","tardy","excused"]}},{"name":"page","in":"query","description":"Page number for pagination","schema":{"type":"integer","default":1}},{"name":"limit","in":"query","description":"Number of items per page","schema":{"type":"integer","default":20}}],"responses":{"200":{"description":"Attendance records retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"records":{"type":"array","items":{"$ref":"#/components/schemas/Attendance"}},"pagination":{"type":"object","properties":{"total":{"type":"integer","example":45},"page":{"type":"integer","example":1},"limit":{"type":"integer","example":20},"pages":{"type":"integer","example":3}}}}}}}}}},"500":{"description":"Failed to get attendance records","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get attendance records"},"error":{"type":"string"}}}}}}}},"post":{"summary":"Record attendance for a student","description":"Records attendance for a single student. Limited to teachers, school admins, and platform admins.","tags":["Attendance"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Attendance record details","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"studentId":{"type":"string","description":"ID of the student","example":"60d21b4667d0d8992e610c85"},"date":{"type":"string","format":"date","description":"Date for attendance (defaults to today if not provided)","example":"2023-10-05"},"status":{"type":"string","enum":["present","absent","tardy","excused"],"description":"Attendance status","example":"present"},"comments":{"type":"string","description":"Additional comments (optional)","example":"Arrived on time"}},"required":["studentId","status"]}}}},"responses":{"200":{"description":"Attendance recorded successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Attendance recorded successfully"},"data":{"$ref":"#/components/schemas/Attendance"}}}}}},"400":{"description":"Student ID and status are required","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student ID and status are required"}}}}}},"404":{"description":"Student not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student not found"}}}}}},"500":{"description":"Failed to record attendance","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to record attendance"},"error":{"type":"string"}}}}}}}}},"/attendance/today":{"get":{"summary":"Get today's attendance for a class","description":"Retrieves the attendance status for all students in a specific class for today.","tags":["Attendance"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"classId","in":"query","description":"ID of the class","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Today's attendance retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"class":{"type":"object","properties":{"id":{"type":"string","example":"60d21b4667d0d8992e610c88"},"name":{"type":"string","example":"5th Grade - Room 2B"},"grade":{"type":"number","example":5}}},"date":{"type":"string","format":"date","example":"2023-10-05T00:00:00.000Z"},"attendance":{"type":"array","items":{"type":"object","properties":{"studentId":{"type":"string","example":"60d21b4667d0d8992e610c85"},"studentName":{"type":"string","example":"John Smith"},"status":{"type":"string","enum":["present","absent","tardy","excused","not_recorded"],"example":"present"},"recordId":{"type":"string","example":"60d21b4667d0d8992e610c90"}}}}}}}}}}},"400":{"description":"Class ID is required","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Class ID is required"}}}}}},"404":{"description":"Class not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Class not found"}}}}}},"500":{"description":"Failed to get today's attendance","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get today's attendance"},"error":{"type":"string"}}}}}}}}},"/attendance/report":{"get":{"summary":"Generate attendance report","description":"Generates a comprehensive attendance report with filtering options","tags":["Attendance"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"schoolId","in":"query","description":"Filter by school ID","schema":{"type":"string"}},{"name":"classId","in":"query","description":"Filter by class ID","schema":{"type":"string"}},{"name":"startDate","in":"query","description":"Start date for report (YYYY-MM-DD)","required":true,"schema":{"type":"string","format":"date"}},{"name":"endDate","in":"query","description":"End date for report (YYYY-MM-DD)","required":true,"schema":{"type":"string","format":"date"}}],"responses":{"200":{"description":"Report generated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"dateRange":{"type":"object","properties":{"start":{"type":"string","format":"date","example":"2023-10-01"},"end":{"type":"string","format":"date","example":"2023-10-31"},"totalDays":{"type":"integer","example":31}}},"students":{"type":"array","items":{"type":"object","properties":{"studentId":{"type":"string","example":"60d21b4667d0d8992e610c85"},"studentName":{"type":"string","example":"John Smith"},"totalDays":{"type":"integer","example":31},"present":{"type":"integer","example":28},"absent":{"type":"integer","example":1},"tardy":{"type":"integer","example":1},"excused":{"type":"integer","example":1},"percentage":{"type":"number","example":90},"days":{"type":"object","additionalProperties":{"type":"string","enum":["present","absent","tardy","excused","none"]}}}}}}}}}}}},"400":{"description":"Start date and end date are required","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Start date and end date are required"}}}}}},"404":{"description":"Class not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Class not found"}}}}}},"500":{"description":"Failed to generate attendance report","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to generate attendance report"},"error":{"type":"string"}}}}}}}}},"/attendance/bulk":{"post":{"summary":"Record attendance for multiple students","description":"Records attendance for multiple students at once. Limited to teachers, school admins, and platform admins.","tags":["Attendance"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Bulk attendance records","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"records":{"type":"array","description":"Array of attendance records","items":{"type":"object","properties":{"studentId":{"type":"string","description":"ID of the student","example":"60d21b4667d0d8992e610c85"},"status":{"type":"string","enum":["present","absent","tardy","excused"],"description":"Attendance status","example":"present"},"comments":{"type":"string","description":"Optional comments","example":"Arrived on time"}},"required":["studentId","status"]}},"date":{"type":"string","format":"date","description":"Date for all records (defaults to today if not provided)","example":"2023-10-05"}},"required":["records"]}}}},"responses":{"200":{"description":"Bulk attendance processed successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Processed 25 attendance records, 0 failed"},"data":{"type":"object","properties":{"success":{"type":"array","items":{"type":"object","properties":{"studentId":{"type":"string","example":"60d21b4667d0d8992e610c85"},"status":{"type":"string","example":"present"},"date":{"type":"string","format":"date-time","example":"2023-10-05T00:00:00.000Z"}}}},"failed":{"type":"array","items":{"type":"object","properties":{"studentId":{"type":"string","example":"60d21b4667d0d8992e610c99"},"error":{"type":"string","example":"Student not found"}}}}}}}}}}},"400":{"description":"Attendance records are required","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Attendance records are required"}}}}}},"500":{"description":"Failed to process bulk attendance","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to process bulk attendance"},"error":{"type":"string"}}}}}}}}},"/attendance/{id}":{"get":{"summary":"Get attendance records for a specific student","description":"Retrieves a student's attendance records with optional date range filtering","tags":["Attendance"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Student ID","required":true,"schema":{"type":"string"}},{"name":"startDate","in":"query","description":"Start date for filtering (YYYY-MM-DD)","schema":{"type":"string","format":"date"}},{"name":"endDate","in":"query","description":"End date for filtering (YYYY-MM-DD)","schema":{"type":"string","format":"date"}}],"responses":{"200":{"description":"Attendance records retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"$ref":"#/components/schemas/Attendance"}}}}}}},"500":{"description":"Failed to get attendance records","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get attendance records"},"error":{"type":"string"}}}}}}}}},"/attendance/{id}/check-in":{"post":{"summary":"Record daily check-in for a student","description":"Allows a student to check in for attendance. Also accessible to teachers, admins, and parents.","tags":["Attendance"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Student ID","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Check-in successful","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Check-in successful"},"data":{"type":"object","properties":{"attendance":{"$ref":"#/components/schemas/Attendance"},"pointsAwarded":{"type":"number","example":5},"currentStreak":{"type":"number","example":7}}}}}}}},"400":{"description":"Already checked in today","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Already checked in today"}}}}}},"404":{"description":"Student not found or not authorized","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student not found or not authorized"}}}}}},"500":{"description":"Failed to check in","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to check in"},"error":{"type":"string"}}}}}}}}},"/attendance/{id}/summary":{"get":{"summary":"Get attendance summary with points","description":"Retrieves a summary of attendance records with points earned for a student","tags":["Attendance"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Student ID","required":true,"schema":{"type":"string"}},{"name":"startDate","in":"query","description":"Start date for filtering (YYYY-MM-DD)","schema":{"type":"string","format":"date"}},{"name":"endDate","in":"query","description":"End date for filtering (YYYY-MM-DD)","schema":{"type":"string","format":"date"}}],"responses":{"200":{"description":"Attendance summary retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"student":{"type":"object","properties":{"id":{"type":"string","example":"60d21b4667d0d8992e610c85"},"currentStreak":{"type":"number","example":7},"longestStreak":{"type":"number","example":15}}},"summary":{"type":"object","properties":{"totalDays":{"type":"number","example":30},"present":{"type":"number","example":27},"absent":{"type":"number","example":1},"tardy":{"type":"number","example":1},"excused":{"type":"number","example":1},"attendanceRate":{"type":"number","example":90},"pointsEarned":{"type":"number","example":135}}},"records":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","example":"60d21b4667d0d8992e610c90"},"date":{"type":"string","format":"date-time","example":"2023-10-05T00:00:00.000Z"},"status":{"type":"string","enum":["present","absent","tardy","excused"],"example":"present"},"points":{"type":"number","example":5},"recordedBy":{"type":"string","example":"student"},"comments":{"type":"string","example":"Self check-in"}}}}}}}}}}},"404":{"description":"Student not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student not found"}}}}}},"500":{"description":"Failed to get attendance summary","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get attendance summary"},"error":{"type":"string"}}}}}}}}},"/badges":{"get":{"summary":"Get all badges","description":"Retrieves the complete list of available badges","tags":["Badges"],"responses":{"200":{"description":"Badges retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"$ref":"#/components/schemas/Badge"}}}}}}},"500":{"description":"Failed to get badges","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get badges"},"error":{"type":"string"}}}}}}}},"post":{"summary":"Create a new badge","description":"Creates a new badge definition. Limited to platform admins and school admins.","tags":["Badges"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Badge information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Badge name","example":"Perfect Attendance"},"description":{"type":"string","description":"Badge description","example":"Awarded for maintaining perfect attendance for 30 days"},"category":{"type":"string","description":"Badge category","example":"Attendance"},"image":{"type":"string","description":"URL to badge image","example":"https://example.com/badges/attendance.png"},"conditions":{"type":"object","properties":{"type":{"type":"string","enum":["points_threshold","task_completion","attendance_streak","custom"],"example":"attendance_streak"},"threshold":{"type":"number","example":100},"taskCategory":{"type":"string","example":"homework"},"streak":{"type":"number","example":30}}},"pointsBonus":{"type":"number","description":"Bonus points awarded when badge is earned","example":50},"issuerType":{"type":"string","enum":["system","school","parent"],"description":"Type of issuer","example":"school"}},"required":["name","description","conditions"]}}}},"responses":{"201":{"description":"Badge created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Badge created successfully"},"data":{"$ref":"#/components/schemas/Badge"}}}}}},"500":{"description":"Failed to create badge","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to create badge"},"error":{"type":"string"}}}}}}}}},"/badges/{id}":{"get":{"summary":"Get badge by ID","description":"Retrieve a specific badge by its ID","tags":["Badges"],"parameters":[{"name":"id","in":"path","description":"ID of the badge to retrieve","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Badge retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/Badge"}}}}}},"404":{"description":"Badge not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Badge not found"}}}}}},"500":{"description":"Failed to get badge","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get badge"},"error":{"type":"string"}}}}}}}}},"/badges/award":{"post":{"summary":"Award a badge to a student","description":"Manually awards a badge to a specific student. Available to platform admins, school admins, teachers, and parents.","tags":["Badges"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Badge award information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"studentId":{"type":"string","description":"ID of the student to award the badge to","example":"60d21b4667d0d8992e610c85"},"badgeId":{"type":"string","description":"ID of the badge to award","example":"60d21b4667d0d8992e610c88"}},"required":["studentId","badgeId"]}}}},"responses":{"200":{"description":"Badge awarded successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Badge awarded successfully"}}}}}},"400":{"description":"Missing required fields or badge already awarded","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Badge was already awarded to this student or could not be awarded"}}}}}},"500":{"description":"Failed to award badge","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to award badge"},"error":{"type":"string"}}}}}}}}},"/badges/check":{"post":{"summary":"Check if student qualifies for badges","description":"Checks if a student qualifies for badges based on a specific trigger type and metadata","tags":["Badges"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Student and trigger information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"studentId":{"type":"string","description":"ID of the student to check","example":"60d21b4667d0d8992e610c85"},"triggerType":{"type":"string","description":"Type of trigger event","enum":["points_threshold","task_completion","attendance_streak"],"example":"attendance_streak"},"metadata":{"type":"object","description":"Additional metadata about the event","example":{"streak":30,"taskCategory":"homework","totalPoints":500}}},"required":["studentId","triggerType"]}}}},"responses":{"200":{"description":"Badge check completed successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"2 badges awarded"},"data":{"type":"object","properties":{"awardedBadges":{"type":"array","items":{"$ref":"#/components/schemas/Badge"}}}}}}}}},"400":{"description":"Student ID and trigger type are required","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student ID and trigger type are required"}}}}}},"500":{"description":"Failed to check badges","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to check badges"},"error":{"type":"string"}}}}}}}}},"/badges/criteria":{"get":{"summary":"Get available badge criteria","description":"Retrieves information about the different types of badge criteria","tags":["Badges"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Badge criteria retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"criteriaTypes":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","example":"points_threshold"},"description":{"type":"string","example":"Awarded when student reaches a specific points total"},"metadata":{"type":"object","properties":{"threshold":{"type":"string","example":"Number of points required (e.g., 100)"}}}}}}}}}}}}},"500":{"description":"Failed to get badge criteria","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get badge criteria"},"error":{"type":"string"}}}}}}}}},"/badges/check-all/{studentId}":{"get":{"summary":"Check all badge types for a student","description":"Performs a comprehensive check across all badge criteria for a specific student","tags":["Badges"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"studentId","in":"path","description":"ID of the student to check","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Badge check completed successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"3 badges awarded"},"data":{"type":"object","properties":{"awardedBadges":{"type":"array","items":{"$ref":"#/components/schemas/Badge"}}}}}}}}},"400":{"description":"Student ID is required","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student ID is required"}}}}}},"500":{"description":"Failed to check badges","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to check badges"},"error":{"type":"string"}}}}}}}}},"/badges/timeline/{studentId}":{"get":{"summary":"Get achievement timeline for a student","description":"Retrieves a chronological history of badge achievements for a student","tags":["Badges"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"studentId","in":"path","description":"ID of the student","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Achievement timeline retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"student":{"type":"object","properties":{"id":{"type":"string","example":"60d21b4667d0d8992e610c85"},"name":{"type":"string","example":"John Smith"},"badgeCount":{"type":"integer","example":12}}},"timeline":{"type":"array","items":{"type":"object","properties":{"date":{"type":"string","format":"date-time","example":"2023-10-01T08:30:00.000Z"},"badgeId":{"type":"string","example":"60d21b4667d0d8992e610c88"},"badgeName":{"type":"string","example":"Perfect Attendance"},"badgeDescription":{"type":"string","example":"Awarded for maintaining perfect attendance for 30 days"},"badgeImage":{"type":"string","example":"https://example.com/badges/attendance.png"},"pointsAwarded":{"type":"number","example":50},"transaction":{"type":"string","example":"60d21b4667d0d8992e610c95"}}}}}}}}}}},"404":{"description":"Student not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student not found"}}}}}},"500":{"description":"Failed to get achievement timeline","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get achievement timeline"},"error":{"type":"string"}}}}}}}}},"/badges/collections":{"get":{"summary":"Get badge collections","description":"Retrieves all badge collections with their badges","tags":["Badges"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Badge collections retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","example":"Attendance Badges"},"badgeCount":{"type":"integer","example":5},"badges":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","example":"60d21b4667d0d8992e610c88"},"name":{"type":"string","example":"Perfect Attendance"},"description":{"type":"string","example":"Awarded for maintaining perfect attendance for 30 days"},"image":{"type":"string","example":"https://example.com/badges/attendance.png"},"collectionOrder":{"type":"number","example":1},"conditions":{"type":"object"},"pointsBonus":{"type":"number","example":50}}}}}}}}}}}},"500":{"description":"Failed to get badge collections","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get badge collections"},"error":{"type":"string"}}}}}}}},"post":{"summary":"Create or update a badge collection","description":"Creates or updates a collection of badges. Limited to platform admins.","tags":["Badges"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Collection information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"badgeIds":{"type":"array","description":"Array of badge IDs to include in the collection","items":{"type":"string"},"example":["60d21b4667d0d8992e610c88","60d21b4667d0d8992e610c89"]},"collectionName":{"type":"string","description":"Name of the collection","example":"Attendance Badges"}},"required":["badgeIds","collectionName"]}}}},"responses":{"200":{"description":"Badge collection updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Badges updated to collection \"Attendance Badges\""},"data":{"type":"object","properties":{"collection":{"type":"string","example":"Attendance Badges"},"badgeCount":{"type":"integer","example":2}}}}}}}},"400":{"description":"Badge IDs array and collection name are required","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Badge IDs array and collection name are required"}}}}}},"403":{"description":"Only platform administrators can manage badge collections","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Only platform administrators can manage badge collections"}}}}}},"500":{"description":"Failed to update badge collection","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to update badge collection"},"error":{"type":"string"}}}}}}}}},"/badges/collections/{id}":{"delete":{"summary":"Remove a badge from a collection","description":"Removes a specific badge from its collection. Limited to platform admins.","tags":["Badges"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the badge to remove from its collection","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Badge removed from collection successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Badge removed from collection"},"data":{"type":"object","properties":{"badgeId":{"type":"string","example":"60d21b4667d0d8992e610c88"},"previousCollection":{"type":"string","example":"Attendance Badges"}}}}}}}},"403":{"description":"Only platform administrators can manage badge collections","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Only platform administrators can manage badge collections"}}}}}},"404":{"description":"Badge not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Badge not found"}}}}}},"500":{"description":"Failed to remove badge from collection","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to remove badge from collection"},"error":{"type":"string"}}}}}}}}},"/link-requests/parent":{"post":{"summary":"Request to link with a parent","description":"Student creates a request to link their account with a parent's account","tags":["Link Requests"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Parent email information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"parentEmail":{"type":"string","format":"email","description":"Email address of the parent to link with","example":"parent@example.com"}},"required":["parentEmail"]}}}},"responses":{"201":{"description":"Parent link request created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Parent link request created successfully"},"data":{"type":"object","properties":{"requestId":{"type":"string","example":"60d21b4667d0d8992e610c95"},"code":{"type":"string","example":"A5C7D9"},"expiresAt":{"type":"string","format":"date-time"}}}}}}}},"400":{"description":"Parent email is required","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Parent email is required"}}}}}},"404":{"description":"Student profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student profile not found"}}}}}},"500":{"description":"Failed to request parent link","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to request parent link"},"error":{"type":"string"}}}}}}}}},"/link-requests/school":{"post":{"summary":"Request to link with a school","description":"Student creates a request to link their account with a school using a class/school code","tags":["Link Requests"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"School code information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"schoolCode":{"type":"string","description":"Join code for the school/class","example":"XYZ123"}},"required":["schoolCode"]}}}},"responses":{"201":{"description":"School link request created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"School link request created successfully"},"data":{"type":"object","properties":{"requestId":{"type":"string","example":"60d21b4667d0d8992e610c97"},"schoolName":{"type":"string","example":"Springfield Elementary"},"className":{"type":"string","example":"5th Grade - Room 2B"},"code":{"type":"string","example":"B3D7F9"},"expiresAt":{"type":"string","format":"date-time"}}}}}}}},"400":{"description":"School code is required","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"School code is required"}}}}}},"404":{"description":"Invalid school code or student profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Invalid school code"}}}}}},"500":{"description":"Failed to request school link","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to request school link"},"error":{"type":"string"}}}}}}}}},"/link-requests/pending":{"get":{"summary":"Get pending link requests","description":"Retrieves all pending link requests initiated by the student","tags":["Link Requests"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Pending requests retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"$ref":"#/components/schemas/LinkRequest"}}}}}}},"404":{"description":"Student profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student profile not found"}}}}}},"500":{"description":"Failed to get pending link requests","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get pending link requests"},"error":{"type":"string"}}}}}}}}},"/link-requests/{requestId}":{"delete":{"summary":"Cancel a link request","description":"Cancels a pending link request initiated by the student","tags":["Link Requests"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"requestId","in":"path","description":"ID of the link request to cancel","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Link request cancelled successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Link request cancelled successfully"}}}}}},"404":{"description":"Link request not found or already processed","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Link request not found or already processed"}}}}}},"500":{"description":"Failed to cancel link request","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to cancel link request"},"error":{"type":"string"}}}}}}}}},"/parents/me":{"get":{"summary":"Get parent profile","description":"Retrieves the authenticated user's parent profile","tags":["Parents"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Parent profile retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/Parent"}}}}}},"404":{"description":"Parent profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Parent profile not found"}}}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get parent profile"},"error":{"type":"string"}}}}}}}}},"/parents/me/children":{"get":{"summary":"Get all children","description":"Retrieves all children linked to the authenticated parent","tags":["Parents"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Children retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"$ref":"#/components/schemas/Child"}}}}}}},"404":{"description":"Parent profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Parent profile not found"}}}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get children"},"error":{"type":"string"}}}}}}}}},"/parents/children":{"post":{"summary":"Add child (create or link)","description":"Creates a new child account or links with an existing one","tags":["Parents"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Child information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"childEmail":{"type":"string","format":"email","description":"Email of existing child account (optional)","example":"child@example.com"},"childName":{"type":"string","description":"Full name of child (required when creating new account)","example":"John Doe"},"childAge":{"type":"number","description":"Age of child (optional)","example":12},"grade":{"type":"number","description":"Grade level of child (optional)","example":7}},"required":["childName"]}}}},"responses":{"201":{"description":"Child added successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Child added successfully"},"data":{"type":"object","properties":{"childId":{"type":"string","example":"60d21b4667d0d8992e610c85"},"userId":{"type":"string","example":"60d21b4667d0d8992e610c84"},"name":{"type":"string","example":"John Doe"},"email":{"type":"string","example":"john.doe.1632908361234@placeholder.com"},"grade":{"type":"number","example":7}}}}}}}},"404":{"description":"Parent profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Parent profile not found"}}}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to add child"},"error":{"type":"string"}}}}}}}}},"/parents/profile":{"post":{"summary":"Create parent profile","description":"Creates a new parent profile for the authenticated user","tags":["Parents"],"security":[{"bearerAuth":[]}],"responses":{"201":{"description":"Parent profile created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Parent profile created successfully"},"data":{"$ref":"#/components/schemas/Parent"}}}}}},"400":{"description":"Parent profile already exists","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Parent profile already exists"}}}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to create parent profile"},"error":{"type":"string"}}}}}}}}},"/parents/{id}":{"put":{"summary":"Update parent profile","description":"Update a parent profile (own profile or as admin)","tags":["Parents"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Parent ID","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Updated profile information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"tuitPoints":{"type":"number","description":"Updated TUIT points","example":100}}}}}},"responses":{"200":{"description":"Parent profile updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Parent profile updated successfully"},"data":{"$ref":"#/components/schemas/Parent"}}}}}},"403":{"description":"Not authorized to update this profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to update this profile"}}}}}},"404":{"description":"Parent profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Parent profile not found"}}}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to update parent profile"},"error":{"type":"string"}}}}}}}}},"/parents/link-code":{"post":{"summary":"Generate link code","description":"Generates a new code for linking with student accounts","tags":["Parents"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Link code generated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Link code generated successfully"},"data":{"type":"object","properties":{"linkCode":{"type":"string","example":"ABC123"}}}}}}}},"404":{"description":"Parent profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Parent profile not found"}}}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to generate link code"},"error":{"type":"string"}}}}}}}}},"/parents/children/{childId}":{"delete":{"summary":"Remove child from parent","description":"Removes the link between parent and child","tags":["Parents"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"childId","in":"path","description":"ID of the child to remove","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Child removed successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Successfully removed child from parent"}}}}}},"400":{"description":"Child is not linked to this parent","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Child is not linked to this parent"}}}}}},"404":{"description":"Parent profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Parent profile not found"}}}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to remove child from parent"},"error":{"type":"string"}}}}}}}}},"/parents/link-requests":{"get":{"summary":"Get pending link requests","description":"Retrieves pending student-parent link requests for the authenticated parent","tags":["Parents"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Link requests retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string","example":"60d21b4667d0d8992e610c99"},"studentId":{"type":"object","properties":{"_id":{"type":"string"},"userId":{"type":"string"}}},"requestType":{"type":"string","example":"parent"},"targetEmail":{"type":"string","example":"parent@example.com"},"status":{"type":"string","example":"pending"},"code":{"type":"string","example":"DEF456"},"createdAt":{"type":"string","format":"date-time"},"expiresAt":{"type":"string","format":"date-time"},"studentName":{"type":"string","example":"Jane Smith"}}}}}}}}},"404":{"description":"Parent profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Parent profile not found"}}}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get pending link requests"},"error":{"type":"string"}}}}}}}}},"/parents/link-requests/{requestId}":{"post":{"summary":"Respond to a link request","description":"Approve or reject a student-parent link request","tags":["Parents"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"requestId","in":"path","description":"ID of the link request","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Response to the link request","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"action":{"type":"string","enum":["approve","reject"],"description":"Action to take on the request","example":"approve"}},"required":["action"]}}}},"responses":{"200":{"description":"Link request processed successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Link request approved successfully"}}}}}},"400":{"description":"Invalid action or missing parameters","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Action must be either 'approve' or 'reject'"}}}}}},"404":{"description":"Parent profile not found or link request not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Link request not found or already processed"}}}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to respond to link request"},"error":{"type":"string"}}}}}}}}},"/schools":{"post":{"summary":"Create a new school","description":"Creates a new school and makes the current user a school admin","tags":["Schools"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"School details","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name of the school","example":"Springfield Elementary School"},"address":{"type":"string","description":"Physical address","example":"123 School Lane"},"city":{"type":"string","description":"City","example":"Springfield"},"state":{"type":"string","description":"State/province","example":"IL"},"zipCode":{"type":"string","description":"Postal/ZIP code","example":"62701"},"country":{"type":"string","description":"Country","example":"USA"},"phone":{"type":"string","description":"Contact phone","example":"555-123-4567"},"email":{"type":"string","description":"Contact email","example":"info@springfield.edu"},"website":{"type":"string","description":"Website URL","example":"https://springfield.edu"},"logo":{"type":"string","description":"Logo URL","example":"https://example.com/logo.png"}},"required":["name"]}}}},"responses":{"201":{"description":"School created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"School created successfully"},"data":{"$ref":"#/components/schemas/School"}}}}}},"400":{"description":"School name is required","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"School name is required"}}}}}},"500":{"description":"Failed to create school","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to create school"},"error":{"type":"string"}}}}}}}}},"/schools/me":{"get":{"summary":"Get current user's school profile","description":"Retrieves the school profile that the current user is an admin of","tags":["Schools"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"School profile retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/School"}}}}}},"404":{"description":"School profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"School profile not found"}}}}}},"500":{"description":"Failed to get school profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get school profile"},"error":{"type":"string"}}}}}}}},"put":{"summary":"Update school profile","description":"Updates the school profile that the current user is an admin of","tags":["Schools"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Updated school details","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"School name"},"address":{"type":"string","description":"Physical address"},"city":{"type":"string","description":"City"},"state":{"type":"string","description":"State/province"},"zipCode":{"type":"string","description":"Postal/ZIP code"},"country":{"type":"string","description":"Country"},"phone":{"type":"string","description":"Contact phone"},"email":{"type":"string","description":"Contact email"},"website":{"type":"string","description":"Website URL"},"logo":{"type":"string","description":"Logo URL"}}}}}},"responses":{"200":{"description":"School profile updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"School profile updated successfully"},"data":{"$ref":"#/components/schemas/School"}}}}}},"404":{"description":"School profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"School profile not found"}}}}}},"500":{"description":"Failed to update school profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to update school profile"},"error":{"type":"string"}}}}}}}}},"/schools/me/teachers":{"get":{"summary":"Get all teachers for a school","description":"Retrieves all teachers associated with the current user's school","tags":["Schools","Teachers"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Teachers retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string"},"userId":{"type":"object","properties":{"_id":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"avatar":{"type":"string"}}},"schoolId":{"type":"string"},"classIds":{"type":"array","items":{"type":"string"}},"subjectsTaught":{"type":"array","items":{"type":"string"}},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}}}}}}}}},"404":{"description":"School profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"School profile not found"}}}}}},"500":{"description":"Failed to get teachers","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get teachers"},"error":{"type":"string"}}}}}}}}},"/schools/teachers":{"post":{"summary":"Add a teacher to the school","description":"Adds a teacher to the current user's school by email","tags":["Schools","Teachers"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Teacher details","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"teacherEmail":{"type":"string","format":"email","description":"Email of the user to add as teacher","example":"teacher@example.com"},"subjectsTaught":{"type":"array","description":"Subjects taught by the teacher (optional)","items":{"type":"string","example":"Mathematics"}}},"required":["teacherEmail"]}}}},"responses":{"201":{"description":"Teacher added successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Teacher added successfully"},"data":{"type":"object","properties":{"_id":{"type":"string"},"userId":{"type":"string"},"schoolId":{"type":"string"},"subjectsTaught":{"type":"array","items":{"type":"string"}},"classIds":{"type":"array","items":{"type":"string"}}}}}}}}},"400":{"description":"User is already a teacher","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"User is already a teacher"}}}}}},"404":{"description":"User not found or school profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"User not found with this email"}}}}}},"500":{"description":"Failed to add teacher","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to add teacher"},"error":{"type":"string"}}}}}}}}},"/schools/teachers/{id}":{"delete":{"summary":"Remove a teacher from the school","description":"Removes a teacher from the current user's school","tags":["Schools","Teachers"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the teacher to remove","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Teacher removed successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Teacher removed successfully"}}}}}},"403":{"description":"Not authorized to remove this teacher","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to remove this teacher"}}}}}},"404":{"description":"Teacher not found or school profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Teacher not found"}}}}}},"500":{"description":"Failed to remove teacher","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to remove teacher"},"error":{"type":"string"}}}}}}}}},"/schools/me/students":{"get":{"summary":"Get all students for a school","description":"Retrieves all students associated with the current user's school","tags":["Schools","Students"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Students retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string"},"userId":{"type":"object","properties":{"_id":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"avatar":{"type":"string"},"dateOfBirth":{"type":"string","format":"date-time"}}},"grade":{"type":"number"},"schoolId":{"type":"string"},"parentIds":{"type":"array","items":{"type":"string"}},"teacherIds":{"type":"array","items":{"type":"string"}}}}}}}}}},"404":{"description":"School profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"School profile not found"}}}}}},"500":{"description":"Failed to get students","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get students"},"error":{"type":"string"}}}}}}}}},"/schools/me/classes":{"get":{"summary":"Get all classes for a school","description":"Retrieves all classes associated with the current user's school","tags":["Schools","Classes"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Classes retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string"},"name":{"type":"string"},"grade":{"type":"number"},"schoolId":{"type":"string"},"teacherId":{"type":"object","properties":{"_id":{"type":"string"},"userId":{"type":"string"}}},"studentIds":{"type":"array","items":{"type":"string"}},"joinCode":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}}}}}}}}},"404":{"description":"School profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"School profile not found"}}}}}},"500":{"description":"Failed to get classes","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get classes"},"error":{"type":"string"}}}}}}}}},"/schools/import/students":{"post":{"summary":"Bulk import students","description":"Imports multiple students at once for the school","tags":["Schools","Students"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Student data for import","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"students":{"type":"array","description":"Array of student data to import","items":{"type":"object","properties":{"firstName":{"type":"string","description":"Student's first name"},"lastName":{"type":"string","description":"Student's last name"},"email":{"type":"string","description":"Student's email"},"grade":{"type":"number","description":"Student's grade level"},"classId":{"type":"string","description":"Optional class ID to assign the student to"}}}}},"required":["students"]}}}},"responses":{"200":{"description":"Students imported successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"25 students imported successfully"}}}}}},"400":{"description":"No students provided for import","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"No students provided for import"}}}}}},"404":{"description":"School profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"School profile not found"}}}}}},"500":{"description":"Failed to import students","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to import students"},"error":{"type":"string"}}}}}}}}},"/schools/{id}/points-account":{"patch":{"summary":"Update student's points account ID","description":"Updates the points account ID for a student. Used by the points service.","tags":["Students"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Student ID","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Points account details","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"pointsAccountId":{"type":"string","description":"Points account ID from the points service","example":"60d21b4667d0d8992e610c96"}},"required":["pointsAccountId"]}}}},"responses":{"200":{"description":"Points account ID updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Points account ID updated successfully"},"data":{"type":"object","properties":{"studentId":{"type":"string","example":"60d21b4667d0d8992e610c85"},"pointsAccountId":{"type":"string","example":"60d21b4667d0d8992e610c96"}}}}}}}},"400":{"description":"Points account ID is required","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Points account ID is required"}}}}}},"404":{"description":"Student not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student not found"}}}}}},"500":{"description":"Failed to update points account ID","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to update points account ID"},"error":{"type":"string"}}}}}}}}},"/schools/{id}/administrators":{"put":{"summary":"Update school administrators","description":"Replaces the list of administrators for a school","tags":["Schools"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"School ID","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Administrator details","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"adminIds":{"type":"array","description":"Array of user IDs to set as administrators","items":{"type":"string","example":"60d21b4667d0d8992e610c87"}}},"required":["adminIds"]}}}},"responses":{"200":{"description":"School administrators updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"School administrators updated successfully"},"data":{"type":"object","properties":{"schoolId":{"type":"string","example":"60d21b4667d0d8992e610c88"},"administrators":{"type":"array","items":{"type":"string","example":"60d21b4667d0d8992e610c87"}}}}}}}}},"400":{"description":"Administrator IDs are required","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Administrator IDs are required (must be a non-empty array)"}}}}}},"403":{"description":"Not authorized to update school administrators","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to update school administrators"}}}}}},"404":{"description":"School not found or user not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"School not found"}}}}}},"500":{"description":"Failed to update administrators","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to update school administrators"},"error":{"type":"string"}}}}}}}},"post":{"summary":"Add an administrator to a school","description":"Adds a new administrator to a school by email","tags":["Schools"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"School ID","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Administrator details","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"userEmail":{"type":"string","format":"email","description":"Email of the user to add as administrator","example":"admin@example.com"}},"required":["userEmail"]}}}},"responses":{"200":{"description":"Administrator added successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Administrator added successfully"},"data":{"type":"object","properties":{"schoolId":{"type":"string","example":"60d21b4667d0d8992e610c88"},"administrators":{"type":"array","items":{"type":"string","example":"60d21b4667d0d8992e610c87"}}}}}}}}},"400":{"description":"User email is required or user is already an administrator","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"User email is required"}}}}}},"403":{"description":"Not authorized to add school administrators","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to add school administrators"}}}}}},"404":{"description":"School not found or user not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"User not found with this email"}}}}}},"500":{"description":"Failed to add administrator","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to add administrator"},"error":{"type":"string"}}}}}}}},"get":{"summary":"Get all administrators for a school","description":"Retrieves all administrators for a school","tags":["Schools"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"School ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Administrators retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string"},"email":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"roles":{"type":"array","items":{"type":"string"}},"avatar":{"type":"string"}}}}}}}}},"404":{"description":"School not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"School not found"}}}}}},"500":{"description":"Failed to get school administrators","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get school administrators"},"error":{"type":"string"}}}}}}}}},"/schools/{id}/administrators/{userId}":{"delete":{"summary":"Remove an administrator from a school","description":"Removes an administrator from a school","tags":["Schools"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"School ID","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User ID of the administrator to remove","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Administrator removed successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Administrator removed successfully"},"data":{"type":"object","properties":{"schoolId":{"type":"string","example":"60d21b4667d0d8992e610c88"},"administrators":{"type":"array","items":{"type":"string","example":"60d21b4667d0d8992e610c87"}}}}}}}}},"400":{"description":"Cannot remove yourself or the last administrator","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Cannot remove the last administrator of a school"}}}}}},"403":{"description":"Not authorized to remove school administrators","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to remove school administrators"}}}}}},"404":{"description":"School not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"School not found"}}}}}},"500":{"description":"Failed to remove administrator","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to remove administrator"},"error":{"type":"string"}}}}}}}}},"/schools/join-requests":{"get":{"summary":"Get all pending join requests","description":"Retrieves all pending join requests for the school","tags":["Schools","Link Requests"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Join requests retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string"},"studentId":{"type":"object","properties":{"_id":{"type":"string"},"userId":{"type":"string"}}},"requestType":{"type":"string","enum":["school"]},"targetId":{"type":"string"},"status":{"type":"string","enum":["pending"]},"code":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"expiresAt":{"type":"string","format":"date-time"},"studentName":{"type":"string"},"studentGrade":{"type":"number"}}}}}}}}},"404":{"description":"School profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"School profile not found"}}}}}},"500":{"description":"Failed to get pending join requests","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get pending join requests"},"error":{"type":"string"}}}}}}}}},"/schools/join-requests/{requestId}":{"post":{"summary":"Respond to a join request","description":"Approve or reject a student's request to join the school","tags":["Schools","Link Requests"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"requestId","in":"path","description":"ID of the join request","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Response to the join request","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"action":{"type":"string","enum":["approve","reject"],"description":"Action to take on the request","example":"approve"}},"required":["action"]}}}},"responses":{"200":{"description":"Join request processed successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Join request approved successfully"}}}}}},"400":{"description":"Action must be either 'approve' or 'reject'","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Action must be either 'approve' or 'reject'"}}}}}},"404":{"description":"Join request not found or school profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Join request not found or already processed"}}}}}},"500":{"description":"Failed to respond to join request","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to respond to join request"},"error":{"type":"string"}}}}}}}}},"/classes/classes/{id}":{"get":{"summary":"Get class details","description":"Retrieves detailed information about a specific class. Limited to teachers assigned to the class, school admins, and platform admins.","tags":["School Classes"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the class","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Class details retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/SchoolClass"}}}}}},"403":{"description":"Not authorized to access this class","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to access this class"}}}}}},"404":{"description":"Class not found or teacher profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Class not found"}}}}}},"500":{"description":"Failed to get class details","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get class details"},"error":{"type":"string"}}}}}}}},"put":{"summary":"Update a class","description":"Updates an existing class. Limited to teachers assigned to the class, school admins, and platform admins.","tags":["School Classes"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the class to update","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Updated class information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name of the class (optional)","example":"5th Grade - Room 2C"},"grade":{"type":"number","description":"Grade level (optional)","example":5}}}}}},"responses":{"200":{"description":"Class updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Class updated successfully"},"data":{"$ref":"#/components/schemas/SchoolClass"}}}}}},"403":{"description":"Not authorized to update this class","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to update this class"}}}}}},"404":{"description":"Class not found or teacher profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Class not found"}}}}}},"500":{"description":"Failed to update class","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to update class"},"error":{"type":"string"}}}}}}}},"delete":{"summary":"Delete a class","description":"Deletes an existing class. Limited to teachers assigned to the class, school admins, and platform admins.","tags":["School Classes"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the class to delete","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Class deleted successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Class deleted successfully"}}}}}},"403":{"description":"Not authorized to delete this class","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to delete this class"}}}}}},"404":{"description":"Class not found or teacher profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Class not found"}}}}}},"500":{"description":"Failed to delete class","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to delete class"},"error":{"type":"string"}}}}}}}}},"/classes/classes/{id}/students":{"get":{"summary":"Get students in a class","description":"Retrieves a list of all students enrolled in a specific class. Limited to teachers assigned to the class, school admins, and platform admins.","tags":["School Classes"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the class","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Class students retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string","example":"60d21b4667d0d8992e610c85"},"userId":{"type":"object","properties":{"_id":{"type":"string"},"firstName":{"type":"string","example":"John"},"lastName":{"type":"string","example":"Smith"},"email":{"type":"string","example":"john.smith@example.com"},"avatar":{"type":"string"},"dateOfBirth":{"type":"string","format":"date"}}},"grade":{"type":"number","example":5}}}}}}}}},"403":{"description":"Not authorized to access this class","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to access this class"}}}}}},"404":{"description":"Class not found or teacher profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Class not found"}}}}}},"500":{"description":"Failed to get class students","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get class students"},"error":{"type":"string"}}}}}}}},"post":{"summary":"Add a student to a class","description":"Adds a student to a class. Limited to teachers assigned to the class, school admins, and platform admins.","tags":["School Classes"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the class","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Student information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"studentId":{"type":"string","description":"ID of the student to add","example":"60d21b4667d0d8992e610c85"}},"required":["studentId"]}}}},"responses":{"200":{"description":"Student added to class successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Student added to class successfully"},"data":{"$ref":"#/components/schemas/SchoolClass"}}}}}},"400":{"description":"Student ID is required or student already in class","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student already in this class"}}}}}},"403":{"description":"Not authorized to manage this class","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to manage this class"}}}}}},"404":{"description":"Class, student, or teacher profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student not found"}}}}}},"500":{"description":"Failed to add student to class","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to add student to class"},"error":{"type":"string"}}}}}}}}},"/classes/classes":{"post":{"summary":"Create a new class","description":"Creates a new class for a teacher. Limited to teachers, school admins, and platform admins.","tags":["School Classes"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Class information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name of the class","example":"5th Grade - Room 2B"},"grade":{"type":"number","description":"Grade level (optional)","example":5},"schoolId":{"type":"string","description":"ID of the school","example":"60d21b4667d0d8992e610c87"}},"required":["name","schoolId"]}}}},"responses":{"201":{"description":"Class created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Class created successfully"},"data":{"$ref":"#/components/schemas/SchoolClass"}}}}}},"400":{"description":"Class name and school ID are required","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Class name and school ID are required"}}}}}},"403":{"description":"Not authorized to create a class for this school","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to create a class for this school"}}}}}},"404":{"description":"Teacher profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Teacher profile not found"}}}}}},"500":{"description":"Failed to create class","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to create class"},"error":{"type":"string"}}}}}}}}},"/classes/classes/{id}/join-code":{"post":{"summary":"Generate a new join code for a class","description":"Creates a new unique code for students to join the class. Limited to teachers assigned to the class, school admins, and platform admins.","tags":["School Classes"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the class","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Join code generated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Join code generated successfully"},"data":{"type":"object","properties":{"joinCode":{"type":"string","example":"XYZ123"}}}}}}}},"403":{"description":"Not authorized to manage this class","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to manage this class"}}}}}},"404":{"description":"Class not found or teacher profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Class not found"}}}}}},"500":{"description":"Failed to generate join code","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to generate join code"},"error":{"type":"string"}}}}}}}}},"/classes/classes/{id}/students/{studentId}":{"delete":{"summary":"Remove a student from a class","description":"Removes a student from a class. Limited to teachers assigned to the class, school admins, and platform admins.","tags":["School Classes"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the class","required":true,"schema":{"type":"string"}},{"name":"studentId","in":"path","description":"ID of the student to remove","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Student removed from class successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Student removed from class successfully"}}}}}},"400":{"description":"Student not in this class","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student not in this class"}}}}}},"403":{"description":"Not authorized to manage this class","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to manage this class"}}}}}},"404":{"description":"Class or teacher profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Class not found"}}}}}},"500":{"description":"Failed to remove student from class","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to remove student from class"},"error":{"type":"string"}}}}}}}}},"/classes/classes/{id}/join-requests":{"get":{"summary":"Get pending join requests for a class","description":"Retrieves all pending join requests for a specific class. Limited to teachers assigned to the class, school admins, and platform admins.","tags":["School Classes"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the class","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Join requests retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string","example":"60d21b4667d0d8992e610c95"},"studentId":{"type":"object","properties":{"_id":{"type":"string","example":"60d21b4667d0d8992e610c85"},"userId":{"type":"string","example":"60d21b4667d0d8992e610c80"}}},"requestType":{"type":"string","example":"school"},"targetId":{"type":"string","example":"60d21b4667d0d8992e610c87"},"status":{"type":"string","example":"pending"},"code":{"type":"string","example":"XYZ123"},"createdAt":{"type":"string","format":"date-time"},"studentName":{"type":"string","example":"John Smith"},"studentGrade":{"type":"number","example":5}}}}}}}}},"403":{"description":"Not authorized to view join requests for this class","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to view join requests for this class"}}}}}},"404":{"description":"Class not found or teacher profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Class not found"}}}}}},"500":{"description":"Failed to get pending join requests","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get pending join requests"},"error":{"type":"string"}}}}}}}}},"/classes/classes/{id}/join-requests/{requestId}":{"post":{"summary":"Respond to a join request","description":"Approve or reject a student's request to join a class. Limited to teachers assigned to the class, school admins, and platform admins.","tags":["School Classes"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the class","required":true,"schema":{"type":"string"}},{"name":"requestId","in":"path","description":"ID of the join request","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Response to the join request","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"action":{"type":"string","enum":["approve","reject"],"description":"Whether to approve or reject the request","example":"approve"}},"required":["action"]}}}},"responses":{"200":{"description":"Join request processed successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Join request approved successfully"}}}}}},"400":{"description":"Action must be either 'approve' or 'reject'","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Action must be either 'approve' or 'reject'"}}}}}},"403":{"description":"Not authorized to manage join requests for this class","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to manage join requests for this class"}}}}}},"404":{"description":"Class, join request, or teacher profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Join request not found or already processed"}}}}}},"500":{"description":"Failed to respond to join request","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to respond to join request"},"error":{"type":"string"}}}}}}}}},"/search/students":{"get":{"summary":"Search for students","description":"Search for students with various filtering options and pagination","tags":["Search"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"name","in":"query","description":"Search by first or last name (case-insensitive)","schema":{"type":"string"}},{"name":"email","in":"query","description":"Search by email address (case-insensitive)","schema":{"type":"string"}},{"name":"grade","in":"query","description":"Filter by grade level","schema":{"type":"integer"}},{"name":"schoolId","in":"query","description":"Filter by school ID","schema":{"type":"string"}},{"name":"page","in":"query","description":"Page number for pagination","schema":{"type":"integer","default":1}},{"name":"limit","in":"query","description":"Number of items per page","schema":{"type":"integer","default":20}},{"name":"sortBy","in":"query","description":"Field to sort by (prefix with 'user.' for user fields like user.firstName)","schema":{"type":"string","default":"createdAt"}},{"name":"sortOrder","in":"query","description":"Sort direction","schema":{"type":"string","enum":["asc","desc"],"default":"desc"}}],"responses":{"200":{"description":"List of students matching search criteria","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"students":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string"},"grade":{"type":"number"},"schoolId":{"type":"string"},"parentIds":{"type":"array","items":{"type":"string"}},"teacherIds":{"type":"array","items":{"type":"string"}},"pointsAccountId":{"type":"string"},"level":{"type":"number"},"badges":{"type":"array","items":{"type":"string"}},"attendanceStreak":{"type":"number"},"createdAt":{"type":"string","format":"date-time"},"user":{"type":"object","properties":{"_id":{"type":"string"},"email":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"dateOfBirth":{"type":"string","format":"date-time"},"avatar":{"type":"string"}}}}}},"pagination":{"type":"object","properties":{"total":{"type":"integer","example":45},"page":{"type":"integer","example":1},"limit":{"type":"integer","example":20},"pages":{"type":"integer","example":3},"hasNext":{"type":"boolean","example":true},"hasPrev":{"type":"boolean","example":false}}}}}}}}}},"500":{"description":"Failed to search students","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to search students"},"error":{"type":"string"}}}}}}}}},"/search/parents":{"get":{"summary":"Search for parents","description":"Search for parents with various filtering options and pagination","tags":["Search"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"name","in":"query","description":"Search by first or last name (case-insensitive)","schema":{"type":"string"}},{"name":"email","in":"query","description":"Search by email address (case-insensitive)","schema":{"type":"string"}},{"name":"childCount","in":"query","description":"Filter by number of children","schema":{"type":"integer"}},{"name":"page","in":"query","description":"Page number for pagination","schema":{"type":"integer","default":1}},{"name":"limit","in":"query","description":"Number of items per page","schema":{"type":"integer","default":20}},{"name":"sortBy","in":"query","description":"Field to sort by (prefix with 'user.' for user fields like user.firstName)","schema":{"type":"string","default":"createdAt"}},{"name":"sortOrder","in":"query","description":"Sort direction","schema":{"type":"string","enum":["asc","desc"],"default":"desc"}}],"responses":{"200":{"description":"List of parents matching search criteria","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"parents":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string"},"childIds":{"type":"array","items":{"type":"string"}},"tuitPoints":{"type":"number"},"createdAt":{"type":"string","format":"date-time"},"user":{"type":"object","properties":{"_id":{"type":"string"},"email":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"avatar":{"type":"string"}}},"childCount":{"type":"number"}}}},"pagination":{"type":"object","properties":{"total":{"type":"integer","example":45},"page":{"type":"integer","example":1},"limit":{"type":"integer","example":20},"pages":{"type":"integer","example":3},"hasNext":{"type":"boolean","example":true},"hasPrev":{"type":"boolean","example":false}}}}}}}}}},"500":{"description":"Failed to search parents","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to search parents"},"error":{"type":"string"}}}}}}}}},"/search/teachers":{"get":{"summary":"Search for teachers","description":"Search for teachers with various filtering options and pagination","tags":["Search"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"name","in":"query","description":"Search by first or last name (case-insensitive)","schema":{"type":"string"}},{"name":"email","in":"query","description":"Search by email address (case-insensitive)","schema":{"type":"string"}},{"name":"schoolId","in":"query","description":"Filter by school ID","schema":{"type":"string"}},{"name":"subject","in":"query","description":"Filter by subject taught","schema":{"type":"string"}},{"name":"page","in":"query","description":"Page number for pagination","schema":{"type":"integer","default":1}},{"name":"limit","in":"query","description":"Number of items per page","schema":{"type":"integer","default":20}},{"name":"sortBy","in":"query","description":"Field to sort by (prefix with 'user.' for user fields like user.firstName)","schema":{"type":"string","default":"createdAt"}},{"name":"sortOrder","in":"query","description":"Sort direction","schema":{"type":"string","enum":["asc","desc"],"default":"desc"}}],"responses":{"200":{"description":"List of teachers matching search criteria","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"teachers":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string"},"schoolId":{"type":"string"},"classIds":{"type":"array","items":{"type":"string"}},"subjectsTaught":{"type":"array","items":{"type":"string"}},"createdAt":{"type":"string","format":"date-time"},"user":{"type":"object","properties":{"_id":{"type":"string"},"email":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"avatar":{"type":"string"}}}}}},"pagination":{"type":"object","properties":{"total":{"type":"integer","example":45},"page":{"type":"integer","example":1},"limit":{"type":"integer","example":20},"pages":{"type":"integer","example":3},"hasNext":{"type":"boolean","example":true},"hasPrev":{"type":"boolean","example":false}}}}}}}}}},"500":{"description":"Failed to search teachers","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to search teachers"},"error":{"type":"string"}}}}}}}}},"/search/schools":{"get":{"summary":"Search for schools","description":"Search for schools with various filtering options and pagination","tags":["Search"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"name","in":"query","description":"Search by school name (case-insensitive)","schema":{"type":"string"}},{"name":"city","in":"query","description":"Filter by city (case-insensitive)","schema":{"type":"string"}},{"name":"state","in":"query","description":"Filter by state (case-insensitive)","schema":{"type":"string"}},{"name":"zipCode","in":"query","description":"Filter by ZIP code (case-insensitive)","schema":{"type":"string"}},{"name":"country","in":"query","description":"Filter by country (case-insensitive)","schema":{"type":"string"}},{"name":"page","in":"query","description":"Page number for pagination","schema":{"type":"integer","default":1}},{"name":"limit","in":"query","description":"Number of items per page","schema":{"type":"integer","default":20}},{"name":"sortBy","in":"query","description":"Field to sort by","schema":{"type":"string","default":"name"}},{"name":"sortOrder","in":"query","description":"Sort direction","schema":{"type":"string","enum":["asc","desc"],"default":"asc"}}],"responses":{"200":{"description":"List of schools matching search criteria","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"schools":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string"},"name":{"type":"string"},"address":{"type":"string"},"city":{"type":"string"},"state":{"type":"string"},"zipCode":{"type":"string"},"country":{"type":"string"},"phone":{"type":"string"},"email":{"type":"string"},"website":{"type":"string"},"logo":{"type":"string"},"adminIds":{"type":"array","items":{"type":"string"}},"createdAt":{"type":"string","format":"date-time"}}}},"pagination":{"type":"object","properties":{"total":{"type":"integer","example":45},"page":{"type":"integer","example":1},"limit":{"type":"integer","example":20},"pages":{"type":"integer","example":3},"hasNext":{"type":"boolean","example":true},"hasPrev":{"type":"boolean","example":false}}}}}}}}}},"500":{"description":"Failed to search schools","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to search schools"},"error":{"type":"string"}}}}}}}}},"/social-workers/me":{"get":{"summary":"Get current social worker profile","description":"Retrieves the profile of the currently authenticated social worker","tags":["Social Workers"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Social worker profile retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/SocialWorker"}}}}}},"404":{"description":"Social worker profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Social worker profile not found"}}}}}},"500":{"description":"Failed to get social worker profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get social worker profile"},"error":{"type":"string"}}}}}}}}},"/social-workers/me/children":{"get":{"summary":"Get children assigned to current social worker","description":"Retrieves all children assigned to the currently authenticated social worker","tags":["Social Workers"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Assigned children retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string","description":"Student ID"},"userId":{"type":"object","properties":{"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"avatar":{"type":"string"},"dateOfBirth":{"type":"string","format":"date-time"}}},"grade":{"type":"number"},"schoolId":{"type":"string"}}}}}}}}},"404":{"description":"Social worker profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Social worker profile not found"}}}}}},"500":{"description":"Failed to get assigned children","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get assigned children"},"error":{"type":"string"}}}}}}}}},"/social-workers/profile":{"post":{"summary":"Create social worker profile","description":"Creates a new social worker profile for the authenticated user","tags":["Social Workers"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Social worker profile information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"organization":{"type":"string","description":"Organization the social worker belongs to","example":"Child Services Department"},"caseloadLimit":{"type":"number","description":"Maximum number of cases to handle","example":20}}}}}},"responses":{"201":{"description":"Social worker profile created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Social worker profile created successfully"},"data":{"$ref":"#/components/schemas/SocialWorker"}}}}}},"400":{"description":"Social worker profile already exists","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Social worker profile already exists"}}}}}},"500":{"description":"Failed to create social worker profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to create social worker profile"},"error":{"type":"string"}}}}}}}}},"/social-workers/{id}":{"put":{"summary":"Update social worker profile","description":"Updates an existing social worker profile. Limited to the profile owner and platform admins.","tags":["Social Workers"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Social worker profile ID","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Updated profile information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"organization":{"type":"string","description":"Organization the social worker belongs to","example":"Child Services Department"},"caseloadLimit":{"type":"number","description":"Maximum number of cases to handle","example":25}}}}}},"responses":{"200":{"description":"Social worker profile updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Social worker profile updated successfully"},"data":{"$ref":"#/components/schemas/SocialWorker"}}}}}},"403":{"description":"Not authorized to update this profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to update this profile"}}}}}},"404":{"description":"Social worker profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Social worker profile not found"}}}}}},"500":{"description":"Failed to update social worker profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to update social worker profile"},"error":{"type":"string"}}}}}}}}},"/social-workers/{id}/children":{"post":{"summary":"Assign child to social worker","description":"Assigns a student to a social worker's caseload","tags":["Social Workers"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Social worker profile ID","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Student assignment information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"studentId":{"type":"string","description":"ID of student to assign","example":"60d21b4667d0d8992e610c85"}},"required":["studentId"]}}}},"responses":{"200":{"description":"Student assigned successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Student assigned to social worker successfully"},"data":{"$ref":"#/components/schemas/SocialWorker"}}}}}},"400":{"description":"Student already assigned or caseload limit reached","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student is already assigned to this social worker"}}}}}},"403":{"description":"Not authorized to modify assignments","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to modify this social worker's assignments"}}}}}},"404":{"description":"Social worker profile or student not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Social worker profile not found"}}}}}},"500":{"description":"Failed to assign child","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to assign child to social worker"},"error":{"type":"string"}}}}}}}}},"/social-workers/{id}/children/{childId}":{"delete":{"summary":"Remove child from social worker","description":"Removes a student from a social worker's caseload","tags":["Social Workers"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Social worker profile ID","required":true,"schema":{"type":"string"}},{"name":"childId","in":"path","description":"Student ID to remove","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Student removed successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Student removed from social worker successfully"}}}}}},"400":{"description":"Student not assigned to this social worker","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student is not assigned to this social worker"}}}}}},"403":{"description":"Not authorized to modify assignments","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to modify this social worker's assignments"}}}}}},"404":{"description":"Social worker profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Social worker profile not found"}}}}}},"500":{"description":"Failed to remove child","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to remove child from social worker"},"error":{"type":"string"}}}}}}}}},"/social-workers/{id}/case-notes":{"post":{"summary":"Add case note for a child","description":"Creates a new case note for an assigned student","tags":["Social Workers"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Social worker profile ID","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Case note information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"studentId":{"type":"string","description":"ID of the student the note is about","example":"60d21b4667d0d8992e610c85"},"note":{"type":"string","description":"Content of the case note","example":"Meeting with student went well. Discussed academic progress and set goals for the semester."}},"required":["studentId","note"]}}}},"responses":{"201":{"description":"Case note added successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Case note added successfully"},"data":{"type":"object","properties":{"studentId":{"type":"string","example":"60d21b4667d0d8992e610c85"},"note":{"type":"string","example":"Meeting with student went well. Discussed academic progress and set goals for the semester."},"date":{"type":"string","format":"date-time"}}}}}}}},"400":{"description":"Missing fields or student not assigned","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student ID and note are required"}}}}}},"403":{"description":"Not authorized to add case notes","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to add case notes for this social worker"}}}}}},"404":{"description":"Social worker profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Social worker profile not found"}}}}}},"500":{"description":"Failed to add case note","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to add case note"},"error":{"type":"string"}}}}}}}}},"/social-workers/{id}/case-notes/{studentId}":{"get":{"summary":"Get case notes for a specific child","description":"Retrieves all case notes for a specific student assigned to the social worker","tags":["Social Workers"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Social worker profile ID","required":true,"schema":{"type":"string"}},{"name":"studentId","in":"path","description":"Student ID to get notes for","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Case notes retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"type":"object","properties":{"studentId":{"type":"string","example":"60d21b4667d0d8992e610c85"},"note":{"type":"string","example":"Meeting with student went well. Discussed academic progress and set goals for the semester."},"date":{"type":"string","format":"date-time"}}}}}}}}},"400":{"description":"Student not assigned to this social worker","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student is not assigned to this social worker"}}}}}},"403":{"description":"Not authorized to view case notes","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to view case notes for this social worker"}}}}}},"404":{"description":"Social worker profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Social worker profile not found"}}}}}},"500":{"description":"Failed to get case notes","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get case notes"},"error":{"type":"string"}}}}}}}}},"/students/me":{"get":{"summary":"Get current student profile","description":"Retrieves the student profile for the authenticated student user","tags":["Students"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Student profile retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"allOf":[{"$ref":"#/components/schemas/Student"},{"type":"object","properties":{"parentIds":{"type":"array","items":{"type":"object","properties":{"userId":{"type":"object"},"firstName":{"type":"string"},"lastName":{"type":"string"}}}},"teacherIds":{"type":"array","items":{"type":"object","properties":{"userId":{"type":"object"},"firstName":{"type":"string"},"lastName":{"type":"string"}}}}}}]}}}}}},"404":{"description":"Student profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student profile not found"}}}}}},"500":{"description":"Failed to get student profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get student profile"},"error":{"type":"string"}}}}}}}}},"/students/{id}":{"get":{"summary":"Get student by ID","description":"Retrieves a student profile by its ID","tags":["Students"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Student's unique ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Student retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"allOf":[{"$ref":"#/components/schemas/Student"},{"type":"object","properties":{"userId":{"type":"object","properties":{"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"avatar":{"type":"string"},"dateOfBirth":{"type":"string","format":"date"}}},"parentIds":{"type":"array","items":{"type":"object"}},"teacherIds":{"type":"array","items":{"type":"object"}}}}]}}}}}},"404":{"description":"Student not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student not found"}}}}}},"500":{"description":"Failed to get student","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get student"},"error":{"type":"string"}}}}}}}},"put":{"summary":"Update student profile","description":"Updates a student's profile information","tags":["Students"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Student's unique ID","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Student profile updates","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"grade":{"type":"number","description":"Updated grade level","example":10},"level":{"type":"number","description":"Updated level (rarely set manually)","example":2}}}}}},"responses":{"200":{"description":"Student profile updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Student profile updated successfully"},"data":{"$ref":"#/components/schemas/Student"}}}}}},"403":{"description":"Not authorized to update this profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to update this profile"}}}}}},"404":{"description":"Student not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student not found"}}}}}},"500":{"description":"Failed to update student profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to update student profile"},"error":{"type":"string"}}}}}}}}},"/students/profile":{"post":{"summary":"Create student profile","description":"Creates a new student profile for the authenticated user","tags":["Students"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Student profile data","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"grade":{"type":"number","description":"Student's grade level","example":9},"schoolId":{"type":"string","description":"ID of the school (optional)","example":"60d21b4667d0d8992e610c88"}}}}}},"responses":{"201":{"description":"Student profile created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Student profile created successfully"},"data":{"$ref":"#/components/schemas/Student"}}}}}},"400":{"description":"Student profile already exists","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student profile already exists"}}}}}},"500":{"description":"Failed to create student profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to create student profile"},"error":{"type":"string"}}}}}}}}},"/students/link/parent":{"post":{"summary":"Link with parent","description":"Links a student account with a parent using a link code","tags":["Students"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Parent link code","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"parentLinkCode":{"type":"string","description":"Link code from parent","example":"ABC123"}},"required":["parentLinkCode"]}}}},"responses":{"200":{"description":"Successfully linked with parent","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Successfully linked with parent"},"data":{"type":"object","properties":{"parentId":{"type":"string","example":"60d21b4667d0d8992e610c89"}}}}}}}},"400":{"description":"Invalid parent link code or already linked","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Parent link code is required"}}}}}},"404":{"description":"Student profile not found or invalid parent link code","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Invalid parent link code"}}}}}},"500":{"description":"Failed to link with parent","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to link with parent"},"error":{"type":"string"}}}}}}}}},"/students/{id}/badges":{"get":{"summary":"Get student badges","description":"Retrieves all badges earned by a student","tags":["Students"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Student's unique ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Student badges retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"},"category":{"type":"string"},"image":{"type":"string"},"pointsBonus":{"type":"number"}}}}}}}}},"404":{"description":"Student not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student not found"}}}}}},"500":{"description":"Failed to get student badges","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get student badges"},"error":{"type":"string"}}}}}}}}},"/students/{id}/attendance":{"get":{"summary":"Get student attendance","description":"Retrieves attendance records for a student","tags":["Students"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Student's unique ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Student attendance retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string"},"date":{"type":"string","format":"date-time"},"status":{"type":"string","enum":["present","absent","tardy","excused"]},"recordedBy":{"type":"object","properties":{"firstName":{"type":"string"},"lastName":{"type":"string"}}}}}}}}}}},"500":{"description":"Failed to get attendance records","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get attendance records"},"error":{"type":"string"}}}}}}}}},"/students/{id}/check-in":{"post":{"summary":"Daily attendance check-in","description":"Records daily attendance check-in for a student","tags":["Students"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Student's unique ID","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Check-in successful","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Check-in successful"},"data":{"type":"object","properties":{"attendance":{"type":"object"},"pointsAwarded":{"type":"number","example":5},"currentStreak":{"type":"number","example":7}}}}}}}},"400":{"description":"Already checked in today","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Already checked in today"}}}}}},"404":{"description":"Student not found or not authorized","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student not found or not authorized"}}}}}},"500":{"description":"Failed to check in","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to check in"},"error":{"type":"string"}}}}}}}}},"/students/{id}/level":{"get":{"summary":"Get student level info","description":"Retrieves the current level and progress information for a student","tags":["Students"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Student's unique ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Student level info retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"level":{"type":"number","example":3},"currentPoints":{"type":"number","example":350},"pointsNeededForNextLevel":{"type":"number","example":150},"progressPercentage":{"type":"number","example":70}}}}}}}},"404":{"description":"Student not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student not found"}}}}}},"500":{"description":"Failed to get student level","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get student level"},"error":{"type":"string"}}}}}}}}},"/students/link/school":{"post":{"summary":"Link with school","description":"Links a student account with a school using a school code","tags":["Students"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"School join code","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"schoolCode":{"type":"string","description":"Join code for the school/class","example":"XYZ123"}},"required":["schoolCode"]}}}},"responses":{"200":{"description":"Successfully linked with school","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Successfully linked with school"},"data":{"type":"object","properties":{"schoolId":{"type":"string","example":"60d21b4667d0d8992e610c87"},"classId":{"type":"string","example":"60d21b4667d0d8992e610c88"}}}}}}}},"400":{"description":"Invalid school code or already enrolled","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"School join code is required"}}}}}},"404":{"description":"Student profile not found or invalid school code","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Invalid school code"}}}}}},"500":{"description":"Failed to link with school","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to link with school"},"error":{"type":"string"}}}}}}}}},"/students/{id}/points-account":{"patch":{"summary":"Update student's points account ID","description":"Updates the reference to a student's points account (system use)","tags":["Students"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Student's unique ID","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Points account information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"pointsAccountId":{"type":"string","description":"ID of the points account","example":"60d21b4667d0d8992e610c99"}},"required":["pointsAccountId"]}}}},"responses":{"200":{"description":"Points account ID updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Points account ID updated successfully"},"data":{"type":"object","properties":{"studentId":{"type":"string","example":"60d21b4667d0d8992e610c85"},"pointsAccountId":{"type":"string","example":"60d21b4667d0d8992e610c99"}}}}}}}},"400":{"description":"Points account ID is required","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Points account ID is required"}}}}}},"404":{"description":"Student not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student not found"}}}}}},"500":{"description":"Failed to update points account ID","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to update points account ID"},"error":{"type":"string"}}}}}}}}},"/students/{id}/parent/{parentId}":{"delete":{"summary":"Unlink student from parent","description":"Removes the relationship between a student and a parent","tags":["Students"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Student's unique ID","required":true,"schema":{"type":"string"}},{"name":"parentId","in":"path","description":"Parent's unique ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Successfully unlinked student from parent","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Successfully unlinked student from parent"}}}}}},"400":{"description":"Parent is not linked to this student","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Parent is not linked to this student"}}}}}},"403":{"description":"Not authorized to unlink this relationship","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to unlink this relationship"}}}}}},"404":{"description":"Student not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student not found"}}}}}},"500":{"description":"Failed to unlink from parent","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to unlink from parent"},"error":{"type":"string"}}}}}}}}},"/students/{id}/school":{"delete":{"summary":"Unlink student from school","description":"Removes the relationship between a student and their school","tags":["Students"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Student's unique ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Successfully unlinked student from school","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Successfully unlinked student from school"}}}}}},"400":{"description":"Student is not linked to any school","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student is not linked to any school"}}}}}},"403":{"description":"Not authorized to unlink from school","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to unlink from school"}}}}}},"404":{"description":"Student not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Student not found"}}}}}},"500":{"description":"Failed to unlink from school","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to unlink from school"},"error":{"type":"string"}}}}}}}}},"/students/request-parent":{"post":{"summary":"Request link with parent","description":"Initiates a request to link with a parent via email","tags":["Students"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Parent email information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"parentEmail":{"type":"string","format":"email","description":"Email address of the parent to link with","example":"parent@example.com"}},"required":["parentEmail"]}}}},"responses":{"201":{"description":"Parent link request created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Parent link request created successfully"},"data":{"type":"object","properties":{"requestId":{"type":"string","example":"60d21b4667d0d8992e610c95"},"code":{"type":"string","example":"A5C7D9"},"expiresAt":{"type":"string","format":"date-time"}}}}}}}},"400":{"description":"Parent email is required","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Parent email is required"}}}}}},"500":{"description":"Failed to request parent link","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to request parent link"},"error":{"type":"string"}}}}}}}}},"/students/request-school":{"post":{"summary":"Request link with school","description":"Initiates a request to link with a school using a school code","tags":["Students"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"School code information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"schoolCode":{"type":"string","description":"Join code for the school/class","example":"XYZ123"}},"required":["schoolCode"]}}}},"responses":{"201":{"description":"School link request created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"School link request created successfully"},"data":{"type":"object","properties":{"requestId":{"type":"string","example":"60d21b4667d0d8992e610c97"},"schoolName":{"type":"string","example":"Springfield Elementary"},"className":{"type":"string","example":"5th Grade - Room 2B"},"code":{"type":"string","example":"B3D7F9"},"expiresAt":{"type":"string","format":"date-time"}}}}}}}},"400":{"description":"School code is required","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"School code is required"}}}}}},"500":{"description":"Failed to request school link","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to request school link"},"error":{"type":"string"}}}}}}}}},"/teachers/me":{"get":{"summary":"Get current teacher profile","description":"Retrieves the profile for the currently authenticated teacher user","tags":["Teachers"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Teacher profile retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/TeacherProfile"}}}}}},"404":{"description":"Teacher profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Teacher profile not found"}}}}}},"500":{"description":"Failed to get teacher profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get teacher profile"},"error":{"type":"string"}}}}}}}}},"/teachers/me/classes":{"get":{"summary":"Get classes for current teacher","description":"Retrieves all classes associated with the currently authenticated teacher","tags":["Teachers"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Classes retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string","example":"60d21b4667d0d8992e610c88"},"name":{"type":"string","example":"5th Grade Math"},"grade":{"type":"number","example":5},"schoolId":{"type":"string","example":"60d21b4667d0d8992e610c80"},"teacherId":{"type":"string","example":"60d21b4667d0d8992e610c82"},"studentIds":{"type":"array","items":{"type":"string"},"example":["60d21b4667d0d8992e610c85","60d21b4667d0d8992e610c86"]},"joinCode":{"type":"string","example":"ABC123"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}}}}}}}}},"404":{"description":"Teacher profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Teacher profile not found"}}}}}},"500":{"description":"Failed to get classes","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get classes"},"error":{"type":"string"}}}}}}}}},"/teachers/profile":{"post":{"summary":"Create teacher profile","description":"Creates a new teacher profile for the authenticated user","tags":["Teachers"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Teacher profile information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"schoolId":{"type":"string","description":"ID of the school where the teacher works","example":"60d21b4667d0d8992e610c80"},"subjectsTaught":{"type":"array","description":"List of subjects taught by the teacher","items":{"type":"string"},"example":["Math","Science"]}},"required":["schoolId"]}}}},"responses":{"201":{"description":"Teacher profile created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Teacher profile created successfully"},"data":{"$ref":"#/components/schemas/TeacherProfile"}}}}}},"400":{"description":"Teacher profile already exists","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Teacher profile already exists"}}}}}},"500":{"description":"Failed to create teacher profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to create teacher profile"},"error":{"type":"string"}}}}}}}}},"/teachers/{id}":{"put":{"summary":"Update teacher profile","description":"Updates an existing teacher profile","tags":["Teachers"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the teacher profile to update","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Updated teacher information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"subjectsTaught":{"type":"array","description":"Updated list of subjects taught by the teacher","items":{"type":"string"},"example":["Math","Science","Computer Science"]}}}}}},"responses":{"200":{"description":"Teacher profile updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Teacher profile updated successfully"},"data":{"$ref":"#/components/schemas/TeacherProfile"}}}}}},"403":{"description":"Not authorized to update this profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to update this profile"}}}}}},"404":{"description":"Teacher profile not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Teacher profile not found"}}}}}},"500":{"description":"Failed to update teacher profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to update teacher profile"},"error":{"type":"string"}}}}}}}}},"/users/me":{"get":{"summary":"Get current user profile","description":"Retrieves the profile for the currently authenticated user including role-specific profile if available","tags":["Users"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"User profile retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"user":{"$ref":"#/components/schemas/User"},"roleProfile":{"type":"object","description":"Role-specific profile information (student, parent, teacher, etc.)"}}}}}}}},"404":{"description":"User not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"User not found"}}}}}},"500":{"description":"Failed to get user profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get user profile"},"error":{"type":"string"}}}}}}}},"put":{"summary":"Update current user profile","description":"Updates the basic profile information for the currently authenticated user","tags":["Users"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"User profile data to update","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"firstName":{"type":"string","description":"User's first name","example":"John"},"lastName":{"type":"string","description":"User's last name","example":"Smith"},"phoneNumber":{"type":"string","description":"User's phone number","example":"+1234567890"},"dateOfBirth":{"type":"string","format":"date","description":"User's date of birth","example":"2000-01-01"}}}}}},"responses":{"200":{"description":"Profile updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Profile updated successfully"},"data":{"$ref":"#/components/schemas/User"}}}}}},"404":{"description":"User not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"User not found"}}}}}},"500":{"description":"Failed to update profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to update profile"},"error":{"type":"string"}}}}}}}}},"/users/me/password":{"put":{"summary":"Change user password","description":"Updates the password for the currently authenticated user","tags":["Users"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Current and new password","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"currentPassword":{"type":"string","format":"password","description":"User's current password","example":"CurrentPassword123"},"newPassword":{"type":"string","format":"password","description":"User's new password","example":"NewPassword456"}},"required":["currentPassword","newPassword"]}}}},"responses":{"200":{"description":"Password changed successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Password changed successfully"}}}}}},"400":{"description":"Current password and new password are required","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Current password and new password are required"}}}}}},"401":{"description":"Current password is incorrect","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Current password is incorrect"}}}}}},"404":{"description":"User not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"User not found"}}}}}},"500":{"description":"Failed to change password","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to change password"},"error":{"type":"string"}}}}}}}}},"/users/me/avatar":{"post":{"summary":"Upload user avatar","description":"Uploads a profile image for the currently authenticated user","tags":["Users"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Avatar image file","required":true,"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"file":{"type":"string","format":"binary","description":"Image file (jpg, jpeg, png, gif)"}},"required":["file"]}}}},"responses":{"200":{"description":"Avatar updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Avatar updated successfully"},"data":{"type":"object","properties":{"avatar":{"type":"string","description":"URL to the uploaded avatar","example":"http://localhost:3002/uploads/1631234567890-abc123.jpg"}}}}}}}},"400":{"description":"No file uploaded","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"No file uploaded"}}}}}},"404":{"description":"User not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"User not found"}}}}}},"500":{"description":"Failed to upload avatar","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to upload avatar"},"error":{"type":"string"}}}}}}}}},"/users/{id}":{"get":{"summary":"Get user by ID","description":"Retrieves a user profile by ID. Limited to platform admins and school admins.","tags":["Users"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"User ID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"User retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/User"}}}}}},"403":{"description":"Not authorized to access this user","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: insufficient permissions"}}}}}},"404":{"description":"User not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"User not found"}}}}}},"500":{"description":"Failed to get user","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get user"},"error":{"type":"string"}}}}}}}}},"/tasks":{"post":{"summary":"Create a new task","description":"Creates a new task with the provided details","tags":["Tasks"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Task details","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskCreate"}}}},"responses":{"201":{"description":"Task created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Task created successfully"},"data":{"$ref":"#/components/schemas/Task"}}}}}},"400":{"description":"Missing required fields","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Missing required fields: title, category, assignedTo, and pointValue are required"}}}}}},"403":{"description":"Not authorized to create tasks"},"500":{"description":"Failed to create task","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to create task"},"error":{"type":"string"}}}}}}}},"get":{"summary":"Get tasks with filtering","description":"Retrieves tasks based on various filter criteria","tags":["Tasks"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"assignedTo","in":"query","description":"ID of student assigned to tasks","schema":{"type":"string"}},{"name":"createdBy","in":"query","description":"ID of user who created tasks","schema":{"type":"string"}},{"name":"category","in":"query","description":"Task category","schema":{"type":"string"}},{"name":"subCategory","in":"query","description":"Task subcategory","schema":{"type":"string"}},{"name":"status","in":"query","description":"Task status","schema":{"type":"string","enum":["pending","completed","pending_approval","approved","rejected","expired"]}},{"name":"startDate","in":"query","description":"Filter tasks due after this date (YYYY-MM-DD)","schema":{"type":"string","format":"date"}},{"name":"endDate","in":"query","description":"Filter tasks due before this date (YYYY-MM-DD)","schema":{"type":"string","format":"date"}},{"name":"isRecurring","in":"query","description":"Filter recurring tasks","schema":{"type":"boolean"}},{"name":"schoolId","in":"query","description":"Filter by school ID","schema":{"type":"string"}},{"name":"classId","in":"query","description":"Filter by class ID","schema":{"type":"string"}},{"name":"page","in":"query","description":"Page number for pagination","schema":{"type":"integer","default":1}},{"name":"limit","in":"query","description":"Number of items per page","schema":{"type":"integer","default":20}},{"name":"sort","in":"query","description":"Field to sort by","schema":{"type":"string","default":"dueDate"}},{"name":"order","in":"query","description":"Sort order (asc or desc)","schema":{"type":"string","enum":["asc","desc"],"default":"asc"}}],"responses":{"200":{"description":"Tasks retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"tasks":{"type":"array","items":{"$ref":"#/components/schemas/Task"}},"pagination":{"type":"object","properties":{"total":{"type":"integer","example":45},"page":{"type":"integer","example":1},"limit":{"type":"integer","example":20},"pages":{"type":"integer","example":3}}}}}}}}}},"500":{"description":"Failed to get tasks"}}}},"/tasks/{id}":{"get":{"summary":"Get a specific task by ID","description":"Retrieves detailed information about a task by its ID","tags":["Tasks"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the task to retrieve","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Task retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/Task"}}}}}},"400":{"description":"Invalid task ID format"},"403":{"description":"Not authorized to view this task"},"404":{"description":"Task not found"},"500":{"description":"Failed to get task"}}},"put":{"summary":"Update a task","description":"Updates a task with the provided details","tags":["Tasks"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the task to update","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Updated task details","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"title":{"type":"string"},"description":{"type":"string"},"category":{"type":"string"},"subCategory":{"type":"string"},"pointValue":{"type":"number"},"dueDate":{"type":"string","format":"date-time"},"isRecurring":{"type":"boolean"},"recurringSchedule":{"type":"object"},"requiresApproval":{"type":"boolean"},"approverType":{"type":"string"},"difficulty":{"type":"string"}}}}}},"responses":{"200":{"description":"Task updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Task updated successfully"},"data":{"$ref":"#/components/schemas/Task"}}}}}},"400":{"description":"Invalid task ID format"},"403":{"description":"Not authorized to update this task"},"404":{"description":"Task not found"},"500":{"description":"Failed to update task"}}},"delete":{"summary":"Delete a task (soft delete)","description":"Marks a task as deleted (soft delete)","tags":["Tasks"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the task to delete","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Task deleted successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Task deleted successfully"}}}}}},"400":{"description":"Invalid task ID format"},"403":{"description":"Not authorized to delete this task"},"404":{"description":"Task not found"},"500":{"description":"Failed to delete task"}}}},"/tasks/{id}/complete":{"post":{"summary":"Mark a task as completed","description":"Student marks a task as completed, potentially with evidence","tags":["Tasks"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the task to mark as completed","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Completion details","content":{"application/json":{"schema":{"type":"object","properties":{"note":{"type":"string","description":"Note about task completion","example":"I finished all the math problems"},"evidence":{"type":"array","description":"Evidence of task completion","items":{"type":"object","properties":{"type":{"type":"string","enum":["image","document","link","text"],"example":"image"},"url":{"type":"string","example":"https://example.com/evidence1.jpg"},"content":{"type":"string","example":"Image of completed work"}}}}}}}}},"responses":{"200":{"description":"Task marked as completed","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Task marked as completed, awaiting approval"},"data":{"$ref":"#/components/schemas/Task"}}}}}},"400":{"description":"Invalid request or task already approved"},"403":{"description":"Only the assigned student can mark this task as completed"},"404":{"description":"Task not found"},"500":{"description":"Failed to complete task"}}}},"/tasks/{id}/review":{"post":{"summary":"Approve or reject a completed task","description":"Parent, teacher, or admin reviews a completed task","tags":["Tasks"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the task to review","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Review details","required":true,"content":{"application/json":{"schema":{"type":"object","required":["action"],"properties":{"action":{"type":"string","enum":["approve","reject"],"example":"approve","description":"Whether to approve or reject the task"},"feedback":{"type":"string","example":"Great job on the math problems!","description":"Feedback for the student"}}}}}},"responses":{"200":{"description":"Task reviewed successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Task approved successfully"},"data":{"$ref":"#/components/schemas/Task"}}}}}},"400":{"description":"Invalid action or task not awaiting approval"},"403":{"description":"Not authorized to review this task"},"404":{"description":"Task not found"},"500":{"description":"Failed to review task"}}}},"/tasks/stats/analytics":{"get":{"summary":"Get task statistics","description":"Retrieves task statistics and analytics","tags":["Tasks"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"studentId","in":"query","description":"Filter by student ID","schema":{"type":"string"}},{"name":"schoolId","in":"query","description":"Filter by school ID","schema":{"type":"string"}},{"name":"classId","in":"query","description":"Filter by class ID","schema":{"type":"string"}},{"name":"startDate","in":"query","description":"Start date for statistics (YYYY-MM-DD)","schema":{"type":"string","format":"date"}},{"name":"endDate","in":"query","description":"End date for statistics (YYYY-MM-DD)","schema":{"type":"string","format":"date"}},{"name":"groupBy","in":"query","description":"How to group the statistics","schema":{"type":"string","enum":["category","status","creatorRole","date"],"default":"category"}}],"responses":{"200":{"description":"Statistics retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"statistics":{"type":"array","items":{"type":"object"}},"summary":{"type":"object"},"groupBy":{"type":"string"},"filters":{"type":"object"}}}}}}}},"403":{"description":"Not authorized to view these statistics"},"500":{"description":"Failed to get task statistics"}}}},"/tasks/student/{studentId}/summary":{"get":{"summary":"Get tasks summary for a student","description":"Retrieves dashboard data summarizing tasks for a student","tags":["Tasks"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"studentId","in":"path","description":"ID of the student","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Summary retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"summary":{"type":"object"},"categorySummary":{"type":"array","items":{"type":"object"}},"upcomingTasks":{"type":"array","items":{"$ref":"#/components/schemas/Task"}},"recentlyCompletedTasks":{"type":"array","items":{"$ref":"#/components/schemas/Task"}}}}}}}}},"403":{"description":"Not authorized to view this student's tasks summary"},"500":{"description":"Failed to get student tasks summary"}}}},"/tasks/{id}/comments":{"post":{"summary":"Add a comment to a task","description":"Adds a comment to a task from a student, parent, teacher, or admin","tags":["Tasks"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the task to comment on","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Comment details","required":true,"content":{"application/json":{"schema":{"type":"object","required":["text"],"properties":{"text":{"type":"string","example":"How are you progressing on this task?"}}}}}},"responses":{"200":{"description":"Comment added successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Comment added successfully"},"data":{"type":"object","properties":{"text":{"type":"string"},"createdBy":{"type":"string"},"creatorRole":{"type":"string"},"createdAt":{"type":"string","format":"date-time"}}}}}}}},"400":{"description":"Comment text is required or invalid task ID"},"403":{"description":"Not authorized to comment on this task"},"404":{"description":"Task not found"},"500":{"description":"Failed to add comment"}}}},"/tasks/{id}/generate-instance":{"post":{"summary":"Generate next recurring task instance","description":"Creates the next instance of a recurring task","tags":["Tasks"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the task instance to generate next from","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Instance already exists or end date reached"},"201":{"description":"New task instance generated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"New task instance generated successfully"},"data":{"$ref":"#/components/schemas/Task"}}}}}},"400":{"description":"Invalid task ID or not a recurring task"},"403":{"description":"Not authorized to generate task instances"},"404":{"description":"Task not found"},"500":{"description":"Failed to generate next task instance"}}}},"/tasks/categories":{"post":{"summary":"Create a new task category","description":"Creates a new category for organizing tasks","tags":["Task Categories"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Category details","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskCategoryCreate"}}}},"responses":{"201":{"description":"Category created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Category created successfully"},"data":{"$ref":"#/components/schemas/TaskCategory"}}}}}},"400":{"description":"Missing required fields or category with same name already exists","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Missing required fields: name and type are required"}}}}}},"500":{"description":"Failed to create category","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to create category"},"error":{"type":"string"}}}}}}}},"get":{"summary":"Get task categories with filtering","description":"Retrieves task categories based on various filter criteria","tags":["Task Categories"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"type","in":"query","description":"Category type","schema":{"type":"string","enum":["academic","home","behavior","extracurricular","attendance","system","custom"]}},{"name":"createdBy","in":"query","description":"ID of user who created categories","schema":{"type":"string"}},{"name":"visibility","in":"query","description":"Category visibility","schema":{"type":"string","enum":["private","family","class","school","public"]}},{"name":"schoolId","in":"query","description":"Filter by school ID","schema":{"type":"string"}},{"name":"isSystem","in":"query","description":"Filter system categories","schema":{"type":"boolean"}},{"name":"subject","in":"query","description":"Filter by subject","schema":{"type":"string"}},{"name":"gradeLevel","in":"query","description":"Filter by grade level","schema":{"type":"number"}},{"name":"search","in":"query","description":"Search by name","schema":{"type":"string"}}],"responses":{"200":{"description":"Categories retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"$ref":"#/components/schemas/TaskCategory"}}}}}}},"500":{"description":"Failed to get categories"}}}},"/tasks/categories/{id}":{"get":{"summary":"Get a specific task category by ID","description":"Retrieves detailed information about a task category by its ID","tags":["Task Categories"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the category to retrieve","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Category retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/TaskCategory"}}}}}},"400":{"description":"Invalid category ID format"},"403":{"description":"Not authorized to view this category"},"404":{"description":"Category not found"},"500":{"description":"Failed to get category"}}},"put":{"summary":"Update a task category","description":"Updates a task category with the provided details","tags":["Task Categories"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the category to update","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Updated category details","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"icon":{"type":"string"},"color":{"type":"string"},"parentCategory":{"type":"string"},"defaultPointValue":{"type":"number"},"subject":{"type":"string"},"gradeLevel":{"type":"number"},"visibility":{"type":"string"},"displayOrder":{"type":"number"}}}}}},"responses":{"200":{"description":"Category updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Category updated successfully"},"data":{"$ref":"#/components/schemas/TaskCategory"}}}}}},"400":{"description":"Invalid category ID format"},"403":{"description":"Not authorized to update this category or system categories cannot be modified"},"404":{"description":"Category not found"},"500":{"description":"Failed to update category"}}},"delete":{"summary":"Delete a task category (soft delete)","description":"Marks a task category as deleted (soft delete)","tags":["Task Categories"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the category to delete","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Category deleted successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Category deleted successfully"}}}}}},"400":{"description":"Invalid category ID format"},"403":{"description":"Not authorized to delete this category or system categories cannot be deleted"},"404":{"description":"Category not found"},"500":{"description":"Failed to delete category"}}}},"/tasks/categories/defaults":{"post":{"summary":"Create default system categories","description":"Initializes the system with default task categories","tags":["Task Categories"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Default categories initialized successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Default categories initialized: 10 created, 0 already existed"}}}}}},"403":{"description":"Only platform administrators can create system categories"},"500":{"description":"Failed to create default categories"}}}},"/tasks/categories/context/{context}":{"get":{"summary":"Get categories for a specific user context","description":"Retrieves categories relevant to a specific context (e.g., academic, home)","tags":["Task Categories"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"context","in":"path","description":"Context to retrieve categories for","required":true,"schema":{"type":"string","enum":["academic","home","behavior","extracurricular","attendance","all"]}}],"responses":{"200":{"description":"Categories retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"categories":{"type":"array","items":{"type":"object","properties":{"parent":{"type":"object","nullable":true},"subcategories":{"type":"array","items":{"$ref":"#/components/schemas/TaskCategory"}}}}},"context":{"type":"string","example":"academic"}}}}}}}},"400":{"description":"Invalid context"},"500":{"description":"Failed to get categories"}}}},"/tasks/templates":{"post":{"summary":"Create a new task template","description":"Creates a new template for organizing and reusing tasks","tags":["Task Templates"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Template details","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskTemplateCreate"}}}},"responses":{"201":{"description":"Template created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Template created successfully"},"data":{"$ref":"#/components/schemas/TaskTemplate"}}}}}},"400":{"description":"Missing required fields","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Missing required fields: title, category, and suggestedPointValue are required"}}}}}},"500":{"description":"Failed to create template","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to create template"},"error":{"type":"string"}}}}}}}},"get":{"summary":"Get task templates with filtering","description":"Retrieves task templates based on various filter criteria","tags":["Task Templates"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"category","in":"query","description":"Filter by category","schema":{"type":"string","enum":["academic","home","behavior","extracurricular","attendance","system"]}},{"name":"createdBy","in":"query","description":"Filter by creator ID","schema":{"type":"string"}},{"name":"visibility","in":"query","description":"Filter by visibility","schema":{"type":"string","enum":["private","family","class","school","public"]}},{"name":"schoolId","in":"query","description":"Filter by school ID","schema":{"type":"string"}},{"name":"isFeatured","in":"query","description":"Filter featured templates","schema":{"type":"boolean"}},{"name":"search","in":"query","description":"Search by title or description","schema":{"type":"string"}},{"name":"gradeMin","in":"query","description":"Filter by minimum grade level","schema":{"type":"number"}},{"name":"gradeMax","in":"query","description":"Filter by maximum grade level","schema":{"type":"number"}},{"name":"ageMin","in":"query","description":"Filter by minimum age","schema":{"type":"number"}},{"name":"ageMax","in":"query","description":"Filter by maximum age","schema":{"type":"number"}},{"name":"difficulty","in":"query","description":"Filter by difficulty level","schema":{"type":"string","enum":["easy","medium","hard","challenging"]}},{"name":"page","in":"query","description":"Page number for pagination","schema":{"type":"number","default":1}},{"name":"limit","in":"query","description":"Number of items per page","schema":{"type":"number","default":20}},{"name":"sort","in":"query","description":"Field to sort by","schema":{"type":"string","default":"title"}},{"name":"order","in":"query","description":"Sort order (asc or desc)","schema":{"type":"string","enum":["asc","desc"],"default":"asc"}}],"responses":{"200":{"description":"Templates retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"templates":{"type":"array","items":{"$ref":"#/components/schemas/TaskTemplate"}},"pagination":{"type":"object","properties":{"total":{"type":"number","example":45},"page":{"type":"number","example":1},"limit":{"type":"number","example":20},"pages":{"type":"number","example":3}}}}}}}}}},"500":{"description":"Failed to get templates"}}}},"/tasks/templates/{id}":{"get":{"summary":"Get a specific task template by ID","description":"Retrieves detailed information about a task template by its ID","tags":["Task Templates"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the template to retrieve","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Template retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/TaskTemplate"}}}}}},"400":{"description":"Invalid template ID format"},"403":{"description":"Not authorized to view this template"},"404":{"description":"Template not found"},"500":{"description":"Failed to get template"}}},"put":{"summary":"Update a task template","description":"Updates a task template with the provided details","tags":["Task Templates"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the template to update","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Updated template details","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskTemplateUpdate"}}}},"responses":{"200":{"description":"Template updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Template updated successfully"},"data":{"$ref":"#/components/schemas/TaskTemplate"}}}}}},"400":{"description":"Invalid template ID format"},"403":{"description":"Not authorized to update this template"},"404":{"description":"Template not found"},"500":{"description":"Failed to update template"}}},"delete":{"summary":"Delete a task template (soft delete)","description":"Marks a task template as deleted (soft delete)","tags":["Task Templates"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the template to delete","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Template deleted successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Template deleted successfully"}}}}}},"400":{"description":"Invalid template ID format"},"403":{"description":"Not authorized to delete this template"},"404":{"description":"Template not found"},"500":{"description":"Failed to delete template"}}}},"/tasks/templates/{id}/use":{"post":{"summary":"Use a template to create a task","description":"Creates a new task using an existing template","tags":["Task Templates"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the template to use","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Task details to override template defaults","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskFromTemplate"}}}},"responses":{"201":{"description":"Task created from template successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Task created from template successfully"},"data":{"type":"object"}}}}}},"400":{"description":"Invalid template ID format or missing required fields"},"403":{"description":"Not authorized to use this template"},"404":{"description":"Template not found"},"500":{"description":"Failed to create task from template"}}}},"/tasks/templates/{id}/featured":{"put":{"summary":"Toggle featured status for a template","description":"Marks or unmarks a template as featured (admin only)","tags":["Task Templates"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the template to feature/unfeature","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Template featured status toggled successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Template featured successfully"}}}}}},"400":{"description":"Invalid template ID format"},"403":{"description":"Only administrators can feature or unfeature templates"},"404":{"description":"Template not found"},"500":{"description":"Failed to update template featured status"}}}},"/tasks/templates/system/defaults":{"post":{"summary":"Create default system templates","description":"Initializes the system with default task templates (admin only)","tags":["Task Templates"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Default templates initialized successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Default templates initialized: 7 created, 0 already existed"}}}}}},"403":{"description":"Only platform administrators can create system templates"},"500":{"description":"Failed to create default templates"}}}},"/tasks/templates/suggestions/{studentId}":{"get":{"summary":"Get suggested templates for a student","description":"Retrieves task templates suggested for a specific student based on their profile","tags":["Task Templates"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"studentId","in":"path","description":"ID of the student to get suggestions for","required":true,"schema":{"type":"string"}},{"name":"grade","in":"query","description":"Student's grade level","schema":{"type":"number"}},{"name":"age","in":"query","description":"Student's age","schema":{"type":"number"}},{"name":"schoolId","in":"query","description":"Student's school ID","schema":{"type":"string"}}],"responses":{"200":{"description":"Suggested templates retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"featured":{"type":"array","items":{"$ref":"#/components/schemas/TaskTemplate"}},"byCategory":{"type":"array","items":{"$ref":"#/components/schemas/TaskTemplate"}},"studentProfile":{"type":"object","properties":{"id":{"type":"string"},"grade":{"type":"number"},"age":{"type":"number"},"schoolId":{"type":"string"}}}}}}}}}},"403":{"description":"Not authorized to get suggested templates for this student"},"500":{"description":"Failed to get suggested templates"}}}},"/rewards/redemptions/{id}/redeem":{"post":{"summary":"Redeem a reward","description":"Redeems a reward using the student's points. Students can redeem for themselves, parents can redeem for their children.","tags":["Reward Redemptions"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the reward to redeem","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Redemption request details","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RedemptionRequest"}}}},"responses":{"201":{"description":"Reward redeemed successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Reward redeemed successfully"},"data":{"type":"object","properties":{"redemption":{"$ref":"#/components/schemas/RewardRedemption"},"redemptionCode":{"type":"string","example":"RDM-19F2Y3-A9B2C8"}}}}}}}},"400":{"description":"Invalid reward ID, insufficient points, or reward cannot be redeemed","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Insufficient points for redemption"},"data":{"type":"object","properties":{"currentBalance":{"type":"number","example":50},"required":{"type":"number","example":100}}}}}}}},"403":{"description":"Not authorized to redeem this reward","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Students can only redeem rewards for themselves"}}}}}},"404":{"description":"Reward not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Reward not found"}}}}}},"500":{"description":"Failed to redeem reward","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to redeem reward"},"error":{"type":"string"}}}}}}}}},"/rewards/redemptions":{"get":{"summary":"Get redemption history","description":"Retrieves a list of redemptions with filtering options. Results are filtered based on user role.","tags":["Reward Redemptions"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"studentId","in":"query","description":"Filter by student ID (students can only see their own)","schema":{"type":"string"}},{"name":"rewardId","in":"query","description":"Filter by reward ID","schema":{"type":"string"}},{"name":"status","in":"query","description":"Filter by redemption status","schema":{"type":"string","enum":["pending","fulfilled","canceled","expired"]}},{"name":"startDate","in":"query","description":"Filter redemptions after this date (YYYY-MM-DD)","schema":{"type":"string","format":"date"}},{"name":"endDate","in":"query","description":"Filter redemptions before this date (YYYY-MM-DD)","schema":{"type":"string","format":"date"}},{"name":"page","in":"query","description":"Page number for pagination","schema":{"type":"integer","default":1}},{"name":"limit","in":"query","description":"Number of items per page","schema":{"type":"integer","default":20}},{"name":"sort","in":"query","description":"Field to sort by","schema":{"type":"string","default":"redemptionDate"}},{"name":"order","in":"query","description":"Sort order (asc or desc)","schema":{"type":"string","enum":["asc","desc"],"default":"desc"}}],"responses":{"200":{"description":"Redemption history retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"redemptions":{"type":"array","items":{"allOf":[{"$ref":"#/components/schemas/RewardRedemption"},{"type":"object","properties":{"rewardId":{"type":"object","properties":{"_id":{"type":"string"},"title":{"type":"string"},"category":{"type":"string"},"subcategory":{"type":"string"},"pointsCost":{"type":"number"}}}}}]}},"pagination":{"type":"object","properties":{"total":{"type":"integer","example":45},"page":{"type":"integer","example":1},"limit":{"type":"integer","example":20},"pages":{"type":"integer","example":3}}}}}}}}}},"500":{"description":"Failed to get redemption history","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get redemption history"},"error":{"type":"string"}}}}}}}}},"/rewards/redemptions/pending":{"get":{"summary":"Get pending redemptions for fulfillment","description":"Retrieves a list of pending redemptions that need to be fulfilled. Only available to reward creators and admins.","tags":["Reward Redemptions"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"page","in":"query","description":"Page number for pagination","schema":{"type":"integer","default":1}},{"name":"limit","in":"query","description":"Number of items per page","schema":{"type":"integer","default":20}}],"responses":{"200":{"description":"Pending redemptions retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"redemptions":{"type":"array","items":{"allOf":[{"$ref":"#/components/schemas/RewardRedemption"},{"type":"object","properties":{"rewardId":{"type":"object","properties":{"_id":{"type":"string"},"title":{"type":"string"},"category":{"type":"string"},"subcategory":{"type":"string"},"pointsCost":{"type":"number"}}}}}]}},"pagination":{"type":"object","properties":{"total":{"type":"integer","example":10},"page":{"type":"integer","example":1},"limit":{"type":"integer","example":20},"pages":{"type":"integer","example":1}}}}}}}}}},"403":{"description":"Not authorized to view pending redemptions","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to view pending redemptions"}}}}}},"500":{"description":"Failed to get pending redemptions","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get pending redemptions"},"error":{"type":"string"}}}}}}}}},"/rewards/redemptions/{id}":{"get":{"summary":"Get redemption by ID","description":"Retrieves detailed information about a specific redemption. Students can view their own, creators can view theirs.","tags":["Reward Redemptions"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the redemption to retrieve","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Redemption retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"allOf":[{"$ref":"#/components/schemas/RewardRedemption"},{"type":"object","properties":{"rewardId":{"type":"object","properties":{"_id":{"type":"string"},"title":{"type":"string"},"category":{"type":"string"},"subcategory":{"type":"string"},"pointsCost":{"type":"number"},"creatorId":{"type":"string"},"creatorType":{"type":"string"}}}}}]}}}}}},"400":{"description":"Invalid redemption ID format","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Invalid redemption ID format"}}}}}},"403":{"description":"Not authorized to view this redemption","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to view this redemption"}}}}}},"404":{"description":"Redemption not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Redemption not found"}}}}}},"500":{"description":"Failed to get redemption","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get redemption"},"error":{"type":"string"}}}}}}}}},"/rewards/redemptions/{id}/fulfill":{"put":{"summary":"Fulfill a redemption","description":"Marks a pending redemption as fulfilled. Only the reward creator or admin can fulfill.","tags":["Reward Redemptions"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the redemption to fulfill","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Fulfillment details","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FulfillmentRequest"}}}},"responses":{"200":{"description":"Redemption fulfilled successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Redemption fulfilled successfully"},"data":{"$ref":"#/components/schemas/RewardRedemption"}}}}}},"400":{"description":"Invalid redemption ID format or redemption not in pending status","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Can only fulfill pending redemptions"}}}}}},"403":{"description":"Not authorized to fulfill this redemption","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to fulfill this redemption"}}}}}},"404":{"description":"Redemption not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Redemption not found"}}}}}},"500":{"description":"Failed to fulfill redemption","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to fulfill redemption"},"error":{"type":"string"}}}}}}}}},"/rewards/redemptions/{id}/cancel":{"post":{"summary":"Cancel a redemption","description":"Cancels a pending redemption and refunds points. Students can cancel their own, reward creators can cancel any.","tags":["Reward Redemptions"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the redemption to cancel","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Cancellation details","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CancellationRequest"}}}},"responses":{"200":{"description":"Redemption cancelled successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Redemption cancelled successfully"},"data":{"$ref":"#/components/schemas/RewardRedemption"}}}}}},"400":{"description":"Invalid redemption ID format or redemption not in pending status","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Can only cancel pending redemptions"}}}}}},"403":{"description":"Not authorized to cancel this redemption","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to cancel this redemption"}}}}}},"404":{"description":"Redemption not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Redemption not found"}}}}}},"500":{"description":"Failed to cancel redemption","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to cancel redemption"},"error":{"type":"string"}}}}}}}}},"/rewards":{"post":{"summary":"Create a new reward","description":"Creates a new reward in the system. Only parents, school admins, and platform admins can create rewards.","tags":["Rewards"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Reward details","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RewardCreate"}}}},"responses":{"201":{"description":"Reward created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Reward created successfully"},"data":{"$ref":"#/components/schemas/Reward"}}}}}},"400":{"description":"Missing required fields","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Missing required fields"}}}}}},"403":{"description":"Not authorized to create rewards","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to create rewards"}}}}}},"500":{"description":"Failed to create reward","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to create reward"},"error":{"type":"string"}}}}}}}},"get":{"summary":"Get available rewards with filtering","description":"Retrieves a list of available rewards based on various filters. Results are filtered based on user role.","tags":["Rewards"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"category","in":"query","description":"Filter by reward category","schema":{"type":"string","enum":["family","school","sponsor"]}},{"name":"subcategory","in":"query","description":"Filter by reward subcategory","schema":{"type":"string","enum":["privilege","item","experience","digital"]}},{"name":"categoryId","in":"query","description":"Filter by RewardCategory ID","schema":{"type":"string"}},{"name":"creatorType","in":"query","description":"Filter by creator type","schema":{"type":"string","enum":["parent","school","sponsor","system"]}},{"name":"schoolId","in":"query","description":"Filter by school ID","schema":{"type":"string"}},{"name":"minPoints","in":"query","description":"Minimum points cost filter","schema":{"type":"number"}},{"name":"maxPoints","in":"query","description":"Maximum points cost filter","schema":{"type":"number"}},{"name":"search","in":"query","description":"Search by title or description","schema":{"type":"string"}},{"name":"page","in":"query","description":"Page number for pagination","schema":{"type":"integer","default":1}},{"name":"limit","in":"query","description":"Number of items per page","schema":{"type":"integer","default":20}},{"name":"sort","in":"query","description":"Field to sort by","schema":{"type":"string","default":"pointsCost"}},{"name":"order","in":"query","description":"Sort order (asc or desc)","schema":{"type":"string","enum":["asc","desc"],"default":"asc"}}],"responses":{"200":{"description":"Rewards retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"rewards":{"type":"array","items":{"$ref":"#/components/schemas/Reward"}},"pagination":{"type":"object","properties":{"total":{"type":"integer","example":45},"page":{"type":"integer","example":1},"limit":{"type":"integer","example":20},"pages":{"type":"integer","example":3}}}}}}}}}},"500":{"description":"Failed to get rewards","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get rewards"},"error":{"type":"string"}}}}}}}}},"/rewards/{id}":{"get":{"summary":"Get reward by ID","description":"Retrieves detailed information about a specific reward","tags":["Rewards"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the reward to retrieve","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Reward retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/Reward"}}}}}},"400":{"description":"Invalid reward ID format","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Invalid reward ID format"}}}}}},"404":{"description":"Reward not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Reward not found"}}}}}},"500":{"description":"Failed to get reward","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get reward"},"error":{"type":"string"}}}}}}}},"put":{"summary":"Update a reward","description":"Updates an existing reward. Only the creator or platform admin can update a reward.","tags":["Rewards"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the reward to update","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Updated reward details","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RewardUpdate"}}}},"responses":{"200":{"description":"Reward updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Reward updated successfully"},"data":{"$ref":"#/components/schemas/Reward"}}}}}},"400":{"description":"Invalid reward ID format","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Invalid reward ID format"}}}}}},"403":{"description":"Not authorized to update this reward","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to update this reward"}}}}}},"404":{"description":"Reward not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Reward not found"}}}}}},"500":{"description":"Failed to update reward","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to update reward"},"error":{"type":"string"}}}}}}}},"delete":{"summary":"Delete a reward (soft delete)","description":"Marks a reward as deleted (soft delete). Only the creator or platform admin can delete a reward.","tags":["Rewards"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the reward to delete","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Reward deleted successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Reward deleted successfully"}}}}}},"400":{"description":"Invalid reward ID format","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Invalid reward ID format"}}}}}},"403":{"description":"Not authorized to delete this reward","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to delete this reward"}}}}}},"404":{"description":"Reward not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Reward not found"}}}}}},"500":{"description":"Failed to delete reward","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to delete reward"},"error":{"type":"string"}}}}}}}}},"/rewards/{id}/check-eligibility":{"post":{"summary":"Check if a reward can be redeemed","description":"Checks whether a reward is eligible for redemption by a student","tags":["Rewards"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the reward to check","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Student information for eligibility check","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RewardEligibility"}}}},"responses":{"200":{"description":"Eligibility check completed","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"eligible":{"type":"boolean","example":true},"pointsRequired":{"type":"number","example":100},"reason":{"type":"string","example":"Reward is active and available"}}}}}}}},"400":{"description":"Invalid reward ID format","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Invalid reward ID format"}}}}}},"404":{"description":"Reward not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Reward not found"}}}}}},"500":{"description":"Failed to check redemption eligibility","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to check redemption eligibility"},"error":{"type":"string"}}}}}}}}},"/rewards/categories":{"post":{"summary":"Create a new reward category","description":"Creates a new category for organizing rewards","tags":["Reward Categories"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Category details","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RewardCategoryCreate"}}}},"responses":{"201":{"description":"Category created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Category created successfully"},"data":{"$ref":"#/components/schemas/RewardCategory"}}}}}},"400":{"description":"Missing required fields or category with same name already exists","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Missing required fields: name and type are required"}}}}}},"403":{"description":"Not authorized to create reward categories","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to create reward categories"}}}}}},"500":{"description":"Failed to create category","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to create category"},"error":{"type":"string"}}}}}}}},"get":{"summary":"Get reward categories with filtering","description":"Retrieves reward categories based on various filter criteria","tags":["Reward Categories"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"type","in":"query","description":"Category type","schema":{"type":"string","enum":["family","school","sponsor","custom"]}},{"name":"subcategoryType","in":"query","description":"Subcategory type","schema":{"type":"string","enum":["privilege","item","experience","digital","custom"]}},{"name":"createdBy","in":"query","description":"ID of user who created categories","schema":{"type":"string"}},{"name":"visibility","in":"query","description":"Category visibility","schema":{"type":"string","enum":["private","family","class","school","public"]}},{"name":"schoolId","in":"query","description":"Filter by school ID","schema":{"type":"string"}},{"name":"isSystem","in":"query","description":"Filter system categories","schema":{"type":"boolean"}},{"name":"search","in":"query","description":"Search by name","schema":{"type":"string"}},{"name":"page","in":"query","description":"Page number for pagination","schema":{"type":"integer","default":1}},{"name":"limit","in":"query","description":"Number of items per page","schema":{"type":"integer","default":50}}],"responses":{"200":{"description":"Categories retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"categories":{"type":"array","items":{"$ref":"#/components/schemas/RewardCategory"}},"pagination":{"type":"object","properties":{"total":{"type":"integer","example":45},"page":{"type":"integer","example":1},"limit":{"type":"integer","example":50},"pages":{"type":"integer","example":1}}}}}}}}}},"500":{"description":"Failed to get categories"}}}},"/rewards/categories/{id}":{"get":{"summary":"Get a specific reward category by ID","description":"Retrieves detailed information about a reward category by its ID","tags":["Reward Categories"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the category to retrieve","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Category retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/RewardCategory"}}}}}},"400":{"description":"Invalid category ID format"},"403":{"description":"Not authorized to view this category"},"404":{"description":"Category not found"},"500":{"description":"Failed to get category"}}},"put":{"summary":"Update a reward category","description":"Updates a reward category with the provided details","tags":["Reward Categories"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the category to update","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Updated category details","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RewardCategoryUpdate"}}}},"responses":{"200":{"description":"Category updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Category updated successfully"},"data":{"$ref":"#/components/schemas/RewardCategory"}}}}}},"400":{"description":"Invalid category ID format"},"403":{"description":"Not authorized to update this category or system categories cannot be modified"},"404":{"description":"Category not found"},"500":{"description":"Failed to update category"}}},"delete":{"summary":"Delete a reward category (soft delete)","description":"Marks a reward category as deleted (soft delete)","tags":["Reward Categories"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the category to delete","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Category deleted successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Category deleted successfully"}}}}}},"400":{"description":"Invalid category ID format"},"403":{"description":"Not authorized to delete this category or system categories cannot be deleted"},"404":{"description":"Category not found"},"500":{"description":"Failed to delete category"}}}},"/rewards/categories/defaults":{"post":{"summary":"Create default system categories","description":"Initializes the system with default reward categories. Only platform admins can perform this action.","tags":["Reward Categories"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Default categories initialized successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Default categories initialized: 9 created, 0 already existed"}}}}}},"403":{"description":"Only platform administrators can create system categories"},"500":{"description":"Failed to create default categories"}}}},"/rewards/categories/hierarchy":{"get":{"summary":"Get hierarchical category structure","description":"Retrieves reward categories in a hierarchical structure with parent-child relationships","tags":["Reward Categories"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"type","in":"query","description":"Filter by category type","schema":{"type":"string","enum":["family","school","sponsor","custom"]}}],"responses":{"200":{"description":"Category hierarchy retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"$ref":"#/components/schemas/RewardCategoryHierarchy"}}}}}}},"500":{"description":"Failed to get category hierarchy"}}}},"/points/accounts":{"post":{"summary":"Create a new point account","description":"Creates a new point account for a student. Limited to platform admins, school admins, and the student themselves.","tags":["Point Accounts"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Student account information","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"studentId":{"type":"string","description":"ID of the student","example":"60d21b4667d0d8992e610c85"}},"required":["studentId"]}}}},"responses":{"201":{"description":"Point account created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Point account created successfully"},"data":{"$ref":"#/components/schemas/PointAccount"}}}}}},"400":{"description":"Point account already exists for this student or missing student ID","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Point account already exists for this student"}}}}}},"500":{"description":"Failed to create point account","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to create point account"},"error":{"type":"string"}}}}}}}}},"/points/accounts/student/{studentId}":{"get":{"summary":"Get a student's point account details","description":"Retrieves complete point account information for a specific student","tags":["Point Accounts"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"studentId","in":"path","description":"ID of the student","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Point account retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"_id":{"type":"string","example":"60d21b4667d0d8992e610c86"},"studentId":{"type":"string","example":"60d21b4667d0d8992e610c85"},"currentBalance":{"type":"number","example":350},"totalEarned":{"type":"number","example":500},"totalSpent":{"type":"number","example":150},"level":{"type":"number","example":3},"levelName":{"type":"string","example":"Developing Scholar"},"lastUpdated":{"type":"string","format":"date-time"},"createdAt":{"type":"string","format":"date-time"},"pointsToNextLevel":{"type":"number","example":250},"progressPercentage":{"type":"number","example":45.2}}}}}}}},"404":{"description":"Point account not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Point account not found"}}}}}},"500":{"description":"Failed to get point account","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get point account"},"error":{"type":"string"}}}}}}}}},"/points/accounts/student/{studentId}/balance":{"get":{"summary":"Get a student's point balance","description":"Retrieves the current point balance and related statistics","tags":["Point Accounts"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"studentId","in":"path","description":"ID of the student","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Point balance retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"currentBalance":{"type":"number","example":350},"totalEarned":{"type":"number","example":500},"totalSpent":{"type":"number","example":150},"level":{"type":"number","example":3}}}}}}}},"404":{"description":"Point account not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Point account not found"}}}}}},"500":{"description":"Failed to get balance","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get balance"},"error":{"type":"string"}}}}}}}}},"/points/accounts/student/{studentId}/level":{"get":{"summary":"Get a student's level and progress information","description":"Retrieves detailed information about the student's current level and progress towards next level","tags":["Point Accounts"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"studentId","in":"path","description":"ID of the student","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Level information retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"level":{"type":"number","example":3},"totalEarned":{"type":"number","example":500},"currentBalance":{"type":"number","example":350},"pointsToNextLevel":{"type":"number","example":250},"progressPercentage":{"type":"number","example":45.2},"isMaxLevel":{"type":"boolean","example":false}}}}}}}},"404":{"description":"Point account not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Point account not found"}}}}}},"500":{"description":"Failed to get level information","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get level information"},"error":{"type":"string"}}}}}}}}},"/points/accounts/student/{studentId}/history":{"get":{"summary":"Get a student's point transaction history","description":"Retrieves paginated transaction history for a student with optional filters","tags":["Point Accounts"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"studentId","in":"path","description":"ID of the student","required":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Page number for pagination","schema":{"type":"integer","default":1}},{"name":"limit","in":"query","description":"Number of items per page","schema":{"type":"integer","default":20}},{"name":"type","in":"query","description":"Filter by transaction type","schema":{"type":"string","enum":["earned","spent","adjusted"]}},{"name":"source","in":"query","description":"Filter by transaction source","schema":{"type":"string","enum":["task","attendance","behavior","badge","redemption","manual_adjustment"]}},{"name":"startDate","in":"query","description":"Start date for filtering (YYYY-MM-DD)","schema":{"type":"string","format":"date"}},{"name":"endDate","in":"query","description":"End date for filtering (YYYY-MM-DD)","schema":{"type":"string","format":"date"}}],"responses":{"200":{"description":"Transaction history retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"transactions":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string"},"accountId":{"type":"string"},"studentId":{"type":"string"},"amount":{"type":"number"},"type":{"type":"string","enum":["earned","spent","adjusted"]},"source":{"type":"string","enum":["task","attendance","behavior","badge","redemption","manual_adjustment"]},"sourceId":{"type":"string"},"description":{"type":"string"},"awardedBy":{"type":"string"},"awardedByRole":{"type":"string"},"balanceAfter":{"type":"number"},"metadata":{"type":"object"},"createdAt":{"type":"string","format":"date-time"}}}},"pagination":{"type":"object","properties":{"total":{"type":"integer","example":45},"page":{"type":"integer","example":1},"limit":{"type":"integer","example":20},"pages":{"type":"integer","example":3}}}}}}}}}},"404":{"description":"Point account not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Point account not found"}}}}}},"500":{"description":"Failed to get transaction history","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get transaction history"},"error":{"type":"string"}}}}}}}}},"/points/configuration/active":{"get":{"summary":"Get active point system configuration","description":"Retrieves the currently active configuration for points, levels, and limits","tags":["Point Configuration"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Active configuration retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/PointConfiguration"}}}}}},"500":{"description":"Failed to get configuration","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get point configuration"},"error":{"type":"string"}}}}}}}}},"/points/configuration/history":{"get":{"summary":"Get configuration version history","description":"Retrieves a history of configuration versions (platform admin only)","tags":["Point Configuration"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Configuration history retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"$ref":"#/components/schemas/PointConfiguration"}}}}}}},"403":{"description":"Access denied - platform admin only","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: platform admin only"}}}}}},"500":{"description":"Failed to get configuration history","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get configuration history"},"error":{"type":"string"}}}}}}}}},"/points/configuration":{"post":{"summary":"Create new configuration version","description":"Create a new configuration version based on current settings (platform admin only)","tags":["Point Configuration"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Updated configuration data","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"activityPoints":{"type":"object","description":"Point values for different activities"},"limits":{"type":"object","description":"Daily, weekly, and source limits"},"levelProgression":{"type":"object","description":"Map of levels to point thresholds"},"levelNames":{"type":"object","description":"Map of levels to display names"}}}}}},"responses":{"200":{"description":"Configuration updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Point configuration updated successfully"},"data":{"$ref":"#/components/schemas/PointConfiguration"}}}}}},"403":{"description":"Access denied - platform admin only","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Only platform administrators can update point configuration"}}}}}},"500":{"description":"Failed to update configuration","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to update point configuration"},"error":{"type":"string"}}}}}}}}},"/points/configuration/{version}":{"get":{"summary":"Get specific configuration version","description":"Retrieves a specific version of the configuration (platform admin only)","tags":["Point Configuration"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"version","in":"path","description":"Configuration version number","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"Configuration version retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/PointConfiguration"}}}}}},"403":{"description":"Access denied - platform admin only","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: platform admin only"}}}}}},"404":{"description":"Configuration version not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Configuration version not found"}}}}}},"500":{"description":"Failed to get configuration version","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get configuration version"},"error":{"type":"string"}}}}}}}}},"/points/configuration/{version}/activate":{"post":{"summary":"Activate a specific configuration version","description":"Sets a specific configuration version as the active one (platform admin only)","tags":["Point Configuration"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"version","in":"path","description":"Configuration version number to activate","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"Configuration version activated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Configuration version 5 activated successfully"},"data":{"$ref":"#/components/schemas/PointConfiguration"}}}}}},"403":{"description":"Access denied - platform admin only","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Only platform administrators can activate configuration versions"}}}}}},"404":{"description":"Configuration version not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Configuration version not found"}}}}}},"500":{"description":"Failed to activate configuration version","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to activate configuration version"},"error":{"type":"string"}}}}}}}}},"/points/configuration/levels":{"get":{"summary":"Get all levels information","description":"Retrieves all level definitions, thresholds, and names","tags":["Point Configuration"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Levels retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"levels":{"type":"array","items":{"$ref":"#/components/schemas/LevelInfo"}},"maxLevel":{"type":"number","example":10}}}}}}}},"500":{"description":"Failed to get levels","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get levels"},"error":{"type":"string"}}}}}}}},"post":{"summary":"Add or update a level","description":"Creates a new level or updates an existing one (platform admin only)","tags":["Point Configuration"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Level details","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"level":{"type":"number","description":"Level number (2-100)","minimum":2,"maximum":100,"example":11},"threshold":{"type":"number","description":"Points required to reach this level","minimum":1,"example":10000},"name":{"type":"string","description":"Display name for the level (optional)","example":"Elite Scholar"}},"required":["level","threshold"]}}}},"responses":{"200":{"description":"Level added/updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Level 11 added/updated successfully"},"data":{"$ref":"#/components/schemas/LevelInfo"}}}}}},"400":{"description":"Invalid level parameters","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Valid level number (2-100) and threshold are required"}}}}}},"403":{"description":"Access denied - platform admin only","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Only platform administrators can manage levels"}}}}}},"500":{"description":"Failed to add/update level","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to add/update level"},"error":{"type":"string"}}}}}}}}},"/points/configuration/levels/{level}":{"delete":{"summary":"Delete a level","description":"Removes a level definition (platform admin only). Core levels (1-10) cannot be deleted.","tags":["Point Configuration"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"level","in":"path","description":"Level number to delete","required":true,"schema":{"type":"integer","minimum":11}}],"responses":{"200":{"description":"Level deleted successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Level 11 deleted successfully"},"data":{"type":"object","properties":{"maxLevel":{"type":"number","example":10}}}}}}}},"400":{"description":"Cannot delete core levels","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Cannot delete core levels (1-10)"}}}}}},"403":{"description":"Access denied - platform admin only","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Only platform administrators can manage levels"}}}}}},"404":{"description":"Level not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Level 11 not found"}}}}}},"500":{"description":"Failed to delete level","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to delete level"},"error":{"type":"string"}}}}}}}}},"/points/transactions":{"post":{"summary":"Create a new point transaction (award or deduct points)","tags":["Point Transactions"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Transaction details","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"studentId":{"type":"string","description":"ID of the student"},"amount":{"type":"number","description":"Amount of points to award or deduct"},"type":{"type":"string","enum":["earned","spent","adjusted"],"description":"Type of transaction"},"source":{"type":"string","enum":["task","attendance","behavior","badge","redemption","manual_adjustment"],"description":"Source of the transaction"},"sourceId":{"type":"string","description":"ID of the source entity (task, badge, etc.)"},"description":{"type":"string","description":"Description of the transaction"},"awardedBy":{"type":"string","description":"ID of the user awarding the points"},"awardedByRole":{"type":"string","enum":["student","parent","teacher","school_admin","social_worker","platform_admin","system"],"description":"Role of the user awarding the points"},"metadata":{"type":"object","description":"Additional data about the transaction","properties":{"sourceType":{"type":"string","description":"Specific sub-type of the source"},"category":{"type":"string","description":"Category for task-related transactions"},"difficulty":{"type":"string","enum":["easy","medium","hard"],"description":"Difficulty level for tasks"},"streak":{"type":"number","description":"Current streak count for attendance"},"badgeType":{"type":"string","description":"Type of badge for badge transactions"},"isPositive":{"type":"boolean","description":"Whether behavior is positive or negative"}}}},"required":["studentId","amount","type","source","description","awardedBy","awardedByRole"]}}}},"responses":{"201":{"description":"Transaction created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Transaction created successfully"},"data":{"type":"object","properties":{"transaction":{"$ref":"#/components/schemas/PointTransaction"},"accountBalance":{"type":"number","example":150},"accountLevel":{"type":"number","example":2}}}}}}}},"400":{"description":"Missing required fields or limit exceeded","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Missing required fields"}}}}}},"500":{"description":"Internal server error"}}}},"/points/transactions/{id}":{"get":{"summary":"Retrieve a point transaction by its ID","tags":["Point Transactions"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"Unique identifier of the transaction","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Transaction data returned successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/PointTransaction"}}}}}},"404":{"description":"Transaction not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Transaction not found"}}}}}},"500":{"description":"Internal server error"}}}},"/points/transactions/source/{source}/{sourceId}":{"get":{"summary":"Get transactions filtered by source and entity","tags":["Point Transactions"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"source","in":"path","description":"Transaction source type","required":true,"schema":{"type":"string","enum":["task","attendance","behavior","badge","redemption","manual_adjustment"]}},{"name":"sourceId","in":"path","description":"Identifier of the source entity","required":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Page number for pagination","schema":{"type":"integer","default":1}},{"name":"limit","in":"query","description":"Number of items per page","schema":{"type":"integer","default":20}}],"responses":{"200":{"description":"Array of transactions matching criteria","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"transactions":{"type":"array","items":{"$ref":"#/components/schemas/PointTransaction"}},"pagination":{"type":"object","properties":{"total":{"type":"integer","example":45},"page":{"type":"integer","example":1},"limit":{"type":"integer","example":20},"pages":{"type":"integer","example":3}}}}}}}}}},"500":{"description":"Internal server error"}}}},"/points/transactions/student/{studentId}":{"get":{"summary":"List all transactions for a student with optional filters","tags":["Point Transactions"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"studentId","in":"path","description":"Student's unique ID","required":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Page number for pagination","schema":{"type":"integer","default":1}},{"name":"limit","in":"query","description":"Items per page","schema":{"type":"integer","default":20}},{"name":"type","in":"query","description":"Filter by transaction type","schema":{"type":"string","enum":["earned","spent","adjusted"]}},{"name":"source","in":"query","description":"Filter by transaction source","schema":{"type":"string","enum":["task","attendance","behavior","badge","redemption","manual_adjustment"]}},{"name":"startDate","in":"query","description":"Start date for filtering (YYYY-MM-DD)","schema":{"type":"string","format":"date"}},{"name":"endDate","in":"query","description":"End date for filtering (YYYY-MM-DD)","schema":{"type":"string","format":"date"}}],"responses":{"200":{"description":"Paginated list of student transactions","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"transactions":{"type":"array","items":{"$ref":"#/components/schemas/PointTransaction"}},"pagination":{"type":"object","properties":{"total":{"type":"integer","example":45},"page":{"type":"integer","example":1},"limit":{"type":"integer","example":20},"pages":{"type":"integer","example":3}}}}}}}}}},"500":{"description":"Internal server error"}}}},"/points/transactions/student/{studentId}/summary":{"get":{"summary":"Get aggregated transaction summary for a student","tags":["Point Transactions"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"studentId","in":"path","description":"Student's unique ID","required":true,"schema":{"type":"string"}},{"name":"startDate","in":"query","description":"Start date for filtering (YYYY-MM-DD)","schema":{"type":"string","format":"date"}},{"name":"endDate","in":"query","description":"End date for filtering (YYYY-MM-DD)","schema":{"type":"string","format":"date"}}],"responses":{"200":{"description":"Summary of transactions by type and source","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","example":"earned"},"sources":{"type":"array","items":{"type":"object","properties":{"source":{"type":"string","example":"task"},"totalPoints":{"type":"number","example":125},"count":{"type":"integer","example":10}}}},"totalPoints":{"type":"number","example":350}}}}}}}}},"500":{"description":"Internal server error"}}}},"/points/transactions/{transactionId}/reverse":{"post":{"summary":"Reverse a specific transaction","description":"Reverse a transaction and create a compensating transaction. Limited to admins.","tags":["Point Transactions"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"transactionId","in":"path","description":"ID of the transaction to reverse","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Reason for reversal","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"reason":{"type":"string","description":"Reason for reversing the transaction","example":"Transaction was made in error"}},"required":["reason"]}}}},"responses":{"200":{"description":"Transaction reversed successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Transaction reversed successfully"},"data":{"type":"object","properties":{"originalTransaction":{"$ref":"#/components/schemas/PointTransaction"},"reversalTransaction":{"$ref":"#/components/schemas/PointTransaction"},"accountBalance":{"type":"number","example":100}}}}}}}},"400":{"description":"Bad request or already reversed","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Transaction has already been reversed"}}}}}},"404":{"description":"Transaction not found"},"500":{"description":"Internal server error"}}}},"/points/transactions/visualization/timeseries":{"get":{"summary":"Retrieve time series data for charting student points over time","tags":["Point Transactions"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"studentId","in":"query","description":"Filter by student ID","required":true,"schema":{"type":"string"}},{"name":"timeFrame","in":"query","description":"Preset timeframe (week, month, year)","schema":{"type":"string","enum":["week","month","year"]}},{"name":"startDate","in":"query","description":"Custom start date (YYYY-MM-DD)","schema":{"type":"string","format":"date"}},{"name":"endDate","in":"query","description":"Custom end date (YYYY-MM-DD)","schema":{"type":"string","format":"date"}},{"name":"groupBy","in":"query","description":"Interval grouping (day, week, month)","schema":{"type":"string","enum":["day","week","month"]}}],"responses":{"200":{"description":"Time series data returned","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"timeSeries":{"type":"array","items":{"type":"object","properties":{"date":{"type":"string","example":"2023-09-15"},"timestamp":{"type":"number","example":1694739600000},"earned":{"type":"number","example":25},"spent":{"type":"number","example":10},"adjusted":{"type":"number","example":0},"net":{"type":"number","example":15},"transactions":{"type":"integer","example":3}}}},"timeFrame":{"type":"string","example":"month"},"interval":{"type":"string","example":"day"},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"}}}}}}}},"500":{"description":"Internal server error"}}}},"/points/transactions/analysis/categories":{"get":{"summary":"Analyze and summarize transactions by category","tags":["Point Transactions"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"studentId","in":"query","description":"Student ID for analysis","required":true,"schema":{"type":"string"}},{"name":"timeFrame","in":"query","description":"Timeframe filter (week, month, year, all)","schema":{"type":"string","enum":["week","month","year","all"]}}],"responses":{"200":{"description":"Category analysis data returned","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"timeFrame":{"type":"string","example":"month"},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"summary":{"type":"object","properties":{"totalPoints":{"type":"number","example":350},"totalTransactions":{"type":"integer","example":25},"averagePerTransaction":{"type":"number","example":14}}},"categories":{"type":"array","items":{"type":"object","properties":{"category":{"type":"string","example":"task"},"totalPoints":{"type":"number","example":200},"transactionCount":{"type":"integer","example":15},"percentage":{"type":"number","example":57.1},"firstEarned":{"type":"string","format":"date-time"},"lastEarned":{"type":"string","format":"date-time"},"averagePerTransaction":{"type":"number","example":13.3}}}},"taskCategories":{"type":"array","items":{"type":"object","properties":{"category":{"type":"string","example":"homework"},"totalPoints":{"type":"number","example":120},"transactionCount":{"type":"integer","example":8},"averagePerTask":{"type":"number","example":15}}}}}}}}}}},"500":{"description":"Internal server error"}}}},"/analytics/dashboard":{"get":{"summary":"Get dashboard overview","description":"Retrieves a comprehensive overview of all metrics for the dashboard","tags":["Analytics"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Dashboard overview retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/DashboardOverview"}}}}}},"403":{"description":"Not authorized to access dashboard","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: insufficient permissions"}}}}}},"500":{"description":"Failed to get dashboard overview","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get dashboard overview"},"error":{"type":"string"}}}}}}}}},"/analytics/health":{"get":{"summary":"Get system health status","description":"Retrieves the current health status of the analytics system","tags":["Analytics"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"System health status retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/SystemHealth"}}}}}},"403":{"description":"Not authorized to access system health","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: insufficient permissions"}}}}}},"500":{"description":"Failed to get system health","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get system health"},"error":{"type":"string"}}}}}}}}},"/analytics/update":{"post":{"summary":"Trigger manual analytics update","description":"Schedules a manual update of analytics data for the specified type","tags":["Analytics"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Analytics update details","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AnalyticsUpdateRequest"}}}},"responses":{"200":{"description":"Analytics update scheduled successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Analytics job for full data has been scheduled"},"data":{"$ref":"#/components/schemas/AnalyticsJob"}}}}}},"400":{"description":"Invalid analytics type","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Invalid analytics type. Must be one of: user, task, point, badge, full"}}}}}},"403":{"description":"Not authorized to trigger analytics update","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: insufficient permissions"}}}}}},"500":{"description":"Failed to trigger analytics update","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to trigger analytics update"},"error":{"type":"string"}}}}}}}}},"/analytics/badges/awards":{"get":{"summary":"Get badge award metrics","description":"Retrieves analytics on badge awards over time with various filtering options","tags":["Badge Analytics"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"period","in":"query","description":"Time period for aggregation","schema":{"type":"string","enum":["daily","weekly","monthly"],"default":"monthly"}},{"name":"startDate","in":"query","description":"Start date for filtering (defaults to 90 days ago)","schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"End date for filtering (defaults to current date)","schema":{"type":"string","format":"date-time"}},{"name":"schoolId","in":"query","description":"School ID for filtering by school","schema":{"type":"string"}}],"responses":{"200":{"description":"Badge award metrics retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadgeAwardMetricsResponse"}}}},"403":{"description":"Not authorized to access badge award metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: insufficient permissions"}}}}}},"500":{"description":"Failed to get badge award metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get badge award metrics"},"error":{"type":"string"}}}}}}}}},"/analytics/badges/popular":{"get":{"summary":"Get popular badges","description":"Retrieves a list of the most popular badges based on award count","tags":["Badge Analytics"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"startDate","in":"query","description":"Start date for filtering (defaults to 30 days ago)","schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"End date for filtering (defaults to current date)","schema":{"type":"string","format":"date-time"}},{"name":"schoolId","in":"query","description":"School ID for filtering by school","schema":{"type":"string"}},{"name":"limit","in":"query","description":"Number of popular badges to return","schema":{"type":"integer","minimum":1,"maximum":50,"default":10}}],"responses":{"200":{"description":"Popular badges retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PopularBadgesResponse"}}}},"403":{"description":"Not authorized to access popular badges","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: insufficient permissions"}}}}}},"500":{"description":"Failed to get popular badges","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get popular badges"},"error":{"type":"string"}}}}}}}}},"/analytics/badges/categories":{"get":{"summary":"Get badge category distribution","description":"Retrieves badge distribution across various categories and types","tags":["Badge Analytics"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"startDate","in":"query","description":"Start date for filtering (defaults to 30 days ago)","schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"End date for filtering (defaults to current date)","schema":{"type":"string","format":"date-time"}},{"name":"schoolId","in":"query","description":"School ID for filtering by school","schema":{"type":"string"}}],"responses":{"200":{"description":"Badge category distribution retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadgeCategoryDistributionResponse"}}}},"403":{"description":"Not authorized to access badge category distribution","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: insufficient permissions"}}}}}},"500":{"description":"Failed to get badge category distribution","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get badge category distribution"},"error":{"type":"string"}}}}}}}}},"/analytics/points/transactions":{"get":{"summary":"Get points transaction metrics","description":"Retrieves analytics on points transactions over time with various filtering options","tags":["Points Analytics"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"period","in":"query","description":"Time period for aggregation","schema":{"type":"string","enum":["daily","weekly","monthly"],"default":"monthly"}},{"name":"startDate","in":"query","description":"Start date for filtering (defaults to 90 days ago)","schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"End date for filtering (defaults to current date)","schema":{"type":"string","format":"date-time"}},{"name":"schoolId","in":"query","description":"School ID for filtering by school","schema":{"type":"string"}}],"responses":{"200":{"description":"Points transaction metrics retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PointsTransactionsResponse"}}}},"403":{"description":"Not authorized to access points transaction metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: insufficient permissions"}}}}}},"500":{"description":"Failed to get points transaction metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get points transaction metrics"},"error":{"type":"string"}}}}}}}}},"/analytics/points/economy-health":{"get":{"summary":"Get points economy health metrics","description":"Retrieves analytics on points economy health, including earning rates, spending rates, and inflation","tags":["Points Analytics"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"startDate","in":"query","description":"Start date for filtering (defaults to 30 days ago)","schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"End date for filtering (defaults to current date)","schema":{"type":"string","format":"date-time"}},{"name":"schoolId","in":"query","description":"School ID for filtering by school","schema":{"type":"string"}}],"responses":{"200":{"description":"Points economy health metrics retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PointsEconomyHealthResponse"}}}},"403":{"description":"Not authorized to access points economy health metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: insufficient permissions"}}}}}},"500":{"description":"Failed to get points economy health metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get points economy health metrics"},"error":{"type":"string"}}}}}}}}},"/analytics/points/level-distribution":{"get":{"summary":"Get level distribution metrics","description":"Retrieves analytics on the distribution of students across different point levels","tags":["Points Analytics"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"startDate","in":"query","description":"Start date for filtering (defaults to 30 days ago)","schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"End date for filtering (defaults to current date)","schema":{"type":"string","format":"date-time"}},{"name":"schoolId","in":"query","description":"School ID for filtering by school","schema":{"type":"string"}}],"responses":{"200":{"description":"Level distribution metrics retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LevelDistributionResponse"}}}},"403":{"description":"Not authorized to access level distribution metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: insufficient permissions"}}}}}},"500":{"description":"Failed to get level distribution metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get level distribution metrics"},"error":{"type":"string"}}}}}}}}},"/analytics/tasks/metrics":{"get":{"summary":"Get task creation and completion metrics","description":"Retrieves analytics on task creation and completion over time with various filtering options","tags":["Task Analytics"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"period","in":"query","description":"Time period for aggregation","schema":{"type":"string","enum":["daily","weekly","monthly"],"default":"monthly"}},{"name":"startDate","in":"query","description":"Start date for filtering (defaults to 90 days ago)","schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"End date for filtering (defaults to current date)","schema":{"type":"string","format":"date-time"}},{"name":"schoolId","in":"query","description":"School ID for filtering by school","schema":{"type":"string"}}],"responses":{"200":{"description":"Task metrics retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskMetricsResponse"}}}},"403":{"description":"Not authorized to access task metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: insufficient permissions"}}}}}},"500":{"description":"Failed to get task metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get task metrics"},"error":{"type":"string"}}}}}}}}},"/analytics/tasks/categories":{"get":{"summary":"Get task category distribution","description":"Retrieves the distribution of tasks across categories and difficulty levels","tags":["Task Analytics"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"startDate","in":"query","description":"Start date for filtering (defaults to 30 days ago)","schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"End date for filtering (defaults to current date)","schema":{"type":"string","format":"date-time"}},{"name":"schoolId","in":"query","description":"School ID for filtering by school","schema":{"type":"string"}}],"responses":{"200":{"description":"Task category distribution retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskCategoryDistributionResponse"}}}},"403":{"description":"Not authorized to access task category distribution","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: insufficient permissions"}}}}}},"500":{"description":"Failed to get task category distribution","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get task category distribution"},"error":{"type":"string"}}}}}}}}},"/analytics/tasks/schools-performance":{"get":{"summary":"Get task performance by school","description":"Retrieves school-level task performance metrics, sorted by specified criteria","tags":["Task Analytics"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"startDate","in":"query","description":"Start date for filtering (defaults to 30 days ago)","schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"End date for filtering (defaults to current date)","schema":{"type":"string","format":"date-time"}},{"name":"sortBy","in":"query","description":"Criteria to sort schools by","schema":{"type":"string","enum":["totalTasks","completedTasks","completionRate"],"default":"completionRate"}},{"name":"limit","in":"query","description":"Number of schools to return","schema":{"type":"integer","minimum":1,"maximum":50,"default":10}}],"responses":{"200":{"description":"School performance metrics retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SchoolPerformanceResponse"}}}},"403":{"description":"Not authorized to access school performance metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: insufficient permissions"}}}}}},"500":{"description":"Failed to get school performance metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get school performance metrics"},"error":{"type":"string"}}}}}}}}},"/analytics/users/growth":{"get":{"summary":"Get user growth metrics","description":"Retrieves analytics on user growth over time with various filtering options","tags":["User Analytics"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"period","in":"query","description":"Time period for aggregation","schema":{"type":"string","enum":["daily","weekly","monthly"],"default":"monthly"}},{"name":"startDate","in":"query","description":"Start date for filtering (defaults to 90 days ago)","schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"End date for filtering (defaults to current date)","schema":{"type":"string","format":"date-time"}},{"name":"schoolId","in":"query","description":"School ID for filtering by school","schema":{"type":"string"}}],"responses":{"200":{"description":"User growth metrics retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserGrowthResponse"}}}},"403":{"description":"Not authorized to access user growth metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: insufficient permissions"}}}}}},"500":{"description":"Failed to get user growth metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get user growth metrics"},"error":{"type":"string"}}}}}}}}},"/analytics/users/engagement":{"get":{"summary":"Get user engagement metrics","description":"Retrieves analytics on user engagement, including active users and role distribution","tags":["User Analytics"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"period","in":"query","description":"Time period for aggregation","schema":{"type":"string","enum":["daily","weekly","monthly"],"default":"monthly"}},{"name":"startDate","in":"query","description":"Start date for filtering (defaults to 90 days ago)","schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"End date for filtering (defaults to current date)","schema":{"type":"string","format":"date-time"}},{"name":"schoolId","in":"query","description":"School ID for filtering by school","schema":{"type":"string"}}],"responses":{"200":{"description":"User engagement metrics retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserEngagementResponse"}}}},"403":{"description":"Not authorized to access user engagement metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: insufficient permissions"}}}}}},"500":{"description":"Failed to get user engagement metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get user engagement metrics"},"error":{"type":"string"}}}}}}}}},"/analytics/users/schools-comparison":{"get":{"summary":"Get school comparison metrics","description":"Retrieves analytics comparing user metrics across different schools","tags":["User Analytics"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"startDate","in":"query","description":"Start date for filtering (defaults to 30 days ago)","schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"End date for filtering (defaults to current date)","schema":{"type":"string","format":"date-time"}},{"name":"limit","in":"query","description":"Number of schools to return","schema":{"type":"integer","minimum":1,"maximum":50,"default":10}}],"responses":{"200":{"description":"School comparison metrics retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SchoolComparisonResponse"}}}},"403":{"description":"Not authorized to access school comparison metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Access denied: insufficient permissions"}}}}}},"500":{"description":"Failed to get school comparison metrics","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get school comparison metrics"},"error":{"type":"string"}}}}}}}}},"/notifications/devices/register":{"post":{"summary":"Register a device for push notifications","description":"Register a new device or update an existing device if the token already exists","tags":["Notification Devices"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Device registration details","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceRegister"}}}},"responses":{"200":{"description":"Device updated successfully (token already existed)","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Device updated successfully"},"data":{"$ref":"#/components/schemas/UserDevice"}}}}}},"201":{"description":"Device registered successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Device registered successfully"},"data":{"$ref":"#/components/schemas/UserDevice"}}}}}},"400":{"description":"Missing required fields","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Device token and device type are required"}}}}}},"500":{"description":"Failed to register device","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to register device"},"error":{"type":"string"}}}}}}}}},"/notifications/devices/me":{"get":{"summary":"Get user's devices","description":"Retrieves all devices registered for the current user","tags":["Notification Devices"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Devices retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"array","items":{"$ref":"#/components/schemas/UserDevice"}}}}}}},"500":{"description":"Failed to get user devices","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get user devices"},"error":{"type":"string"}}}}}}}}},"/notifications/devices/{id}":{"put":{"summary":"Update a device","description":"Update a specific device's settings (e.g., active status, notification preferences)","tags":["Notification Devices"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the device to update","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Updated device settings","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceUpdate"}}}},"responses":{"200":{"description":"Device updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Device updated successfully"},"data":{"$ref":"#/components/schemas/UserDevice"}}}}}},"403":{"description":"Not authorized to update this device","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to update this device"}}}}}},"404":{"description":"Device not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Device not found"}}}}}},"500":{"description":"Failed to update device","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to update device"},"error":{"type":"string"}}}}}}}},"delete":{"summary":"Delete a device","description":"Remove a device from the user's registered devices","tags":["Notification Devices"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the device to delete","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Device deleted successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Device deleted successfully"}}}}}},"403":{"description":"Not authorized to delete this device","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to delete this device"}}}}}},"404":{"description":"Device not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Device not found"}}}}}},"500":{"description":"Failed to delete device","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to delete device"},"error":{"type":"string"}}}}}}}}},"/notifications/send":{"post":{"summary":"Send a notification to a user","description":"Creates and sends a notification to a specific user","tags":["Notifications"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Notification details","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotificationSend"}}}},"responses":{"201":{"description":"Notification sent successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Notification sent successfully"},"data":{"type":"object"}}}}}},"400":{"description":"Missing required fields","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"User ID and template ID are required"}}}}}},"404":{"description":"Template not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Notification template not found"}}}}}},"500":{"description":"Failed to send notification"}}}},"/notifications/bulk":{"post":{"summary":"Send notifications to multiple users","description":"Creates and sends the same notification to multiple users","tags":["Notifications"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Bulk notification details","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotificationBulkSend"}}}},"responses":{"201":{"description":"Notifications sent successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"10 notifications sent successfully"},"data":{"type":"object","properties":{"successCount":{"type":"integer","example":9},"failureCount":{"type":"integer","example":1}}}}}}}},"400":{"description":"Missing required fields","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"User IDs array and template ID are required"}}}}}},"404":{"description":"Template not found"},"500":{"description":"Failed to send bulk notifications"}}}},"/notifications/me":{"get":{"summary":"Get notifications for current user","description":"Retrieves paginated notifications for the authenticated user","tags":["Notifications"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"page","in":"query","description":"Page number for pagination","schema":{"type":"integer","default":1}},{"name":"limit","in":"query","description":"Number of items per page","schema":{"type":"integer","default":20}},{"name":"unreadOnly","in":"query","description":"Filter to show only unread notifications","schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"Notifications retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"notifications":{"type":"array","items":{"$ref":"#/components/schemas/Notification"}},"pagination":{"type":"object","properties":{"total":{"type":"integer","example":45},"page":{"type":"integer","example":1},"limit":{"type":"integer","example":20},"pages":{"type":"integer","example":3}}}}}}}}}},"500":{"description":"Failed to get notifications"}}}},"/notifications/me/unread":{"get":{"summary":"Get unread notification count","description":"Returns the count of unread notifications for the current user","tags":["Notifications"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Unread count retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"unreadCount":{"type":"integer","example":5}}}}}}}},"500":{"description":"Failed to get unread count"}}}},"/notifications/me/read/all":{"post":{"summary":"Mark all notifications as read","description":"Marks all notifications for the current user as read","tags":["Notifications"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"All notifications marked as read","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"All notifications marked as read"},"data":{"type":"object","properties":{"modifiedCount":{"type":"integer","example":5}}}}}}}},"500":{"description":"Failed to mark all notifications as read"}}}},"/notifications/{id}/read":{"post":{"summary":"Mark a notification as read","description":"Marks a specific notification as read","tags":["Notifications"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the notification to mark as read","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Notification marked as read","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Notification marked as read"},"data":{"$ref":"#/components/schemas/Notification"}}}}}},"403":{"description":"Not authorized to update this notification"},"404":{"description":"Notification not found"},"500":{"description":"Failed to mark notification as read"}}}},"/notifications/{id}":{"delete":{"summary":"Delete a notification","description":"Deletes a specific notification","tags":["Notifications"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the notification to delete","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Notification deleted successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Notification deleted successfully"}}}}}},"403":{"description":"Not authorized to delete this notification"},"404":{"description":"Notification not found"},"500":{"description":"Failed to delete notification"}}}},"/notifications/me/all":{"delete":{"summary":"Delete all notifications","description":"Deletes all notifications for the current user","tags":["Notifications"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"All notifications deleted successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"All notifications deleted successfully"},"data":{"type":"object","properties":{"deletedCount":{"type":"integer","example":15}}}}}}}},"500":{"description":"Failed to delete all notifications"}}}},"/notifications/user/{userId}":{"get":{"summary":"Get notifications for a specific user","description":"Retrieves notifications for a specific user (admin only)","tags":["Notifications"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"userId","in":"path","description":"ID of the user to get notifications for","required":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Page number for pagination","schema":{"type":"integer","default":1}},{"name":"limit","in":"query","description":"Number of items per page","schema":{"type":"integer","default":20}},{"name":"unreadOnly","in":"query","description":"Filter to show only unread notifications","schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"Notifications retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"notifications":{"type":"array","items":{"$ref":"#/components/schemas/Notification"}},"pagination":{"type":"object","properties":{"total":{"type":"integer","example":45},"page":{"type":"integer","example":1},"limit":{"type":"integer","example":20},"pages":{"type":"integer","example":3}}}}}}}}}},"400":{"description":"User ID is required"},"403":{"description":"Not authorized to view other users' notifications"},"500":{"description":"Failed to get user notifications"}}}},"/notifications/preferences/me":{"get":{"summary":"Get current user's notification preferences","description":"Retrieves the authenticated user's notification preferences. Creates default preferences if none exist.","tags":["Notification Preferences"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Preferences retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/NotificationPreference"}}}}}},"500":{"description":"Failed to get notification preferences","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get notification preferences"},"error":{"type":"string"}}}}}}}},"put":{"summary":"Update user's notification preferences","description":"Updates the authenticated user's notification preferences","tags":["Notification Preferences"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Preference updates","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PreferenceUpdate"}}}},"responses":{"200":{"description":"Preferences updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Notification preferences updated successfully"},"data":{"$ref":"#/components/schemas/NotificationPreference"}}}}}},"400":{"description":"No updates provided","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"No updates provided"}}}}}},"500":{"description":"Failed to update notification preferences","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to update notification preferences"},"error":{"type":"string"}}}}}}}}},"/notifications/preferences/me/reset":{"post":{"summary":"Reset user's notification preferences to default","description":"Deletes the current preferences and creates new default preferences for the user","tags":["Notification Preferences"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Preferences reset successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Notification preferences reset to default"},"data":{"$ref":"#/components/schemas/NotificationPreference"}}}}}},"500":{"description":"Failed to reset notification preferences","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to reset notification preferences"},"error":{"type":"string"}}}}}}}}},"/notifications/preferences/user/{userId}":{"get":{"summary":"Get preferences for a specific user","description":"Retrieves notification preferences for a specific user (admin access required)","tags":["Notification Preferences"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"userId","in":"path","description":"ID of the user to get preferences for","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Preferences retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/NotificationPreference"}}}}}},"403":{"description":"Not authorized to view this user's preferences","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Not authorized to view this user's preferences"}}}}}},"404":{"description":"Preferences not found for this user","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Notification preferences not found for this user"}}}}}},"500":{"description":"Failed to get user notification preferences","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get user notification preferences"},"error":{"type":"string"}}}}}}}}},"/notifications/preferences/role/{role}/defaults":{"post":{"summary":"Set default preferences for a role","description":"Sets default notification preferences for all users with a specific role (platform admin only)","tags":["Notification Preferences"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"role","in":"path","description":"User role to set defaults for","required":true,"schema":{"type":"string","enum":["student","parent","teacher","school_admin","social_worker","platform_admin"]}}],"requestBody":{"description":"Default preference settings","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RoleDefaultsRequest"}}}},"responses":{"200":{"description":"Role defaults set successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Default notification preferences set for student role"},"data":{"type":"object","properties":{"role":{"type":"string","example":"student"},"defaults":{"type":"object"}}}}}}}},"400":{"description":"Invalid role specified","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Invalid role specified"}}}}}},"403":{"description":"Not authorized to set role defaults","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Only platform administrators can set role defaults"}}}}}},"500":{"description":"Failed to set role default preferences","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to set role default preferences"},"error":{"type":"string"}}}}}}}}},"/notifications/templates":{"get":{"summary":"Get all notification templates","description":"Retrieves a list of notification templates with optional filtering","tags":["Notification Templates"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"type","in":"query","description":"Filter by notification type","schema":{"type":"string","enum":["task","point","badge","attendance","reward","system","user"]}},{"name":"category","in":"query","description":"Filter by template category","schema":{"type":"string"}},{"name":"page","in":"query","description":"Page number for pagination","schema":{"type":"integer","default":1}},{"name":"limit","in":"query","description":"Number of items per page","schema":{"type":"integer","default":20}}],"responses":{"200":{"description":"Templates retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"templates":{"type":"array","items":{"$ref":"#/components/schemas/NotificationTemplate"}},"pagination":{"type":"object","properties":{"total":{"type":"integer","example":45},"page":{"type":"integer","example":1},"limit":{"type":"integer","example":20},"pages":{"type":"integer","example":3}}}}}}}}}},"500":{"description":"Failed to get notification templates","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get notification templates"},"error":{"type":"string"}}}}}}}},"post":{"summary":"Create new notification template","description":"Creates a new notification template (platform admin only)","tags":["Notification Templates"],"security":[{"bearerAuth":[]}],"requestBody":{"description":"Template details","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TemplateCreate"}}}},"responses":{"201":{"description":"Template created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Notification template created successfully"},"data":{"$ref":"#/components/schemas/NotificationTemplate"}}}}}},"400":{"description":"Missing required fields or duplicate template name","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Name, type, category, and body are required"}}}}}},"403":{"description":"Not authorized to create templates","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Only platform administrators can create notification templates"}}}}}},"500":{"description":"Failed to create notification template","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to create notification template"},"error":{"type":"string"}}}}}}}}},"/notifications/templates/{id}":{"get":{"summary":"Get template by ID","description":"Retrieves detailed information about a specific notification template","tags":["Notification Templates"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the template to retrieve","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Template retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/NotificationTemplate"}}}}}},"404":{"description":"Template not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Notification template not found"}}}}}},"500":{"description":"Failed to get notification template","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to get notification template"},"error":{"type":"string"}}}}}}}},"put":{"summary":"Update notification template","description":"Updates an existing notification template (platform admin only)","tags":["Notification Templates"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the template to update","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Updated template details","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TemplateUpdate"}}}},"responses":{"200":{"description":"Template updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Notification template updated successfully"},"data":{"$ref":"#/components/schemas/NotificationTemplate"}}}}}},"400":{"description":"Duplicate template name or invalid data","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Template with this name already exists"}}}}}},"403":{"description":"Not authorized to update templates","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Only platform administrators can update notification templates"}}}}}},"404":{"description":"Template not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Notification template not found"}}}}}},"500":{"description":"Failed to update notification template","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to update notification template"},"error":{"type":"string"}}}}}}}},"delete":{"summary":"Delete notification template","description":"Soft-deletes a notification template by marking it as inactive (platform admin only)","tags":["Notification Templates"],"security":[{"bearerAuth":[]}],"parameters":[{"name":"id","in":"path","description":"ID of the template to delete","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Template deleted successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Notification template deleted successfully"}}}}}},"403":{"description":"Not authorized to delete templates","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Only platform administrators can delete notification templates"}}}}}},"404":{"description":"Template not found","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Notification template not found"}}}}}},"500":{"description":"Failed to delete notification template","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Failed to delete notification template"},"error":{"type":"string"}}}}}}}}}},"tags":[]}